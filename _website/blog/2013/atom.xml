<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Alex Clark's Blog - Posted in 2013</title>
  <id>http://blog.aclark.net/blog/2013/atom.xml</id>
  <updated>2013-12-30T00:00:00Z</updated>
  <link href="http://blog.aclark.net" />
  <link href="http://blog.aclark.net/blog/2013/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.2">ABlog</generator>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">New Year's Python Meme 2014</title>
    <id>http://blog.aclark.net/2013/12/30/new-years-python-meme-2014/</id>
    <updated>2013-12-30T00:00:00Z</updated>
    <published>2013-12-30T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/12/30/new-years-python-meme-2014/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-year-s-python-meme-2014&quot;&gt;

&lt;p&gt;&lt;strong&gt;Tarek Ziadé&amp;#8217;s New Year&amp;#8217;s Python Meme&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;whats-the-coolest-python-application-framework-or-library-you-discovered-this-year&quot;&gt;
&lt;h2&gt;What’s the coolest Python application, framework or library you discovered this year?&lt;/h2&gt;
&lt;p&gt;This year we have a tie between two must-have packaging-related utilities:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/check-manifest&quot;&gt;check-manifest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/pyroma&quot;&gt;pyroma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both of these utilities help you make better Python packages, and I regularly use them in my packages via a Makefile like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;test:
    check-manifest
    flake8 *.py
    pyroma
    python setup.py sdist
    python setup.py test
    viewdoc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Good times! And better packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-new-programming-technique-did-you-learn-this-year&quot;&gt;
&lt;h2&gt;What new programming technique did you learn this year?&lt;/h2&gt;
&lt;p&gt;I didn&amp;#8217;t program much in 2013 but when I did, I tried to write tests too. Check out the following projects to see how I did:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/plock&quot;&gt;Plock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/pythonpackages/pythonpackages&quot;&gt;PythonPackages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;which-open-source-project-did-you-contribute-to-the-most-this-year-what-did-you-do&quot;&gt;
&lt;h2&gt;Which open source project did you contribute to the most this year? What did you do?&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow&quot;&gt;Pillow&lt;/a&gt;. Fork author and project lead. Aside from a working PIL, the most exciting thing about Pillow for me is my &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/aclark4life/&quot;&gt;Gittip funding&lt;/a&gt; and working with the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging?tab=members&quot;&gt;Pillow Team&lt;/a&gt; which includes most notably Eric Soroos and Christopher Gohlke.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;which-python-blogs-websites-or-mailing-lists-did-you-read-the-most-this-year&quot;&gt;
&lt;h2&gt;Which Python blogs, websites, or mailing lists did you read the most this year?&lt;/h2&gt;
&lt;p&gt;This year I cut back to reading &lt;em&gt;only&lt;/em&gt; the following feeds, consumed via Feedly:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://planet.plone.org&quot;&gt;Planet Plone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://planet.python.org&quot;&gt;Planet Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dir.gmane.org/gmane.comp.web.zope.plone.devel&quot;&gt;gmane.comp.web.zope.plone.devel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dir.gmane.org/gmane.comp.web.zope.plone.user&quot;&gt;gmane.comp.web.zope.plone.user&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-are-the-top-three-things-you-want-to-learn-next-year&quot;&gt;
&lt;h2&gt;What are the top three things you want to learn next year?&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/javascript_goodparts&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/javascript_goodparts&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/javascript_goodparts&quot;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-the-top-software-application-or-library-you-wish-someone-would-write-next-year&quot;&gt;
&lt;h2&gt;What is the top software, application or library you wish someone would write next year?&lt;/h2&gt;
&lt;p&gt;I wish there was some &amp;#8220;Python to JavaScript bridge software&amp;#8221;. It&amp;#8217;s not the complexities of JavaScript that keep me from learning it, it&amp;#8217;s that I don&amp;#8217;t have any reason to obsess over it. Plone gave me that opportunity with Python, but not JavaScript (yet). Once that happens, I&amp;#8217;m sure I&amp;#8217;ll be as proficient in JavaScript as I am currently in Python (which is enough to get by).&lt;/p&gt;
&lt;p&gt;Want to participate? Copy/paste/answer the questions below then tweet your entry with the #2014pythonmeme hash tag:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;New Year&amp;#39;s Python Meme
======================

What’s the coolest Python application, framework or library you discovered this year?
----------------------------------------------------------------------------------------
What new programming technique did you learn this year?
----------------------------------------------------------------------------------------
Which open source project did you contribute to the most this year? What did you do?
----------------------------------------------------------------------------------------
Which Python blogs, websites, or mailing lists did you read the most this year?
----------------------------------------------------------------------------------------
What are the top three things you want to learn next year?
----------------------------------------------------------------------------------------
What is the top software, application or library you wish someone would write next year?
----------------------------------------------------------------------------------------
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Plonetheme Report</title>
    <id>http://blog.aclark.net/2013/12/29/plonetheme-report/</id>
    <updated>2013-12-29T00:00:00Z</updated>
    <published>2013-12-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/12/29/plonetheme-report/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plonetheme-report&quot;&gt;

&lt;p&gt;&lt;strong&gt;Here is another report on Plone themes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is another report on Plone themes &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; generated by plock &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;#!/bin/sh
for i in &lt;cite&gt;plock -l -r | grep plonetheme&lt;/cite&gt;
do
plock . -a $i
done&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Plock is able to produce a Buildout configuration file containing all themes that successfully installed via Buildout; I manually removed the themes that caused Plone start to fail.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;before-plone-start&quot;&gt;
&lt;h2&gt;Before Plone start&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    plonetheme.ReOrg
    plonetheme.aclark_twitter
    plonetheme.aqueouslight
    plonetheme.arnolfini
    plonetheme.bananaleaf
    plonetheme.basic
    plonetheme.bluegray
    plonetheme.burned
    plonetheme.classic
    plonetheme.cleantheme
    plonetheme.codapress
    plonetheme.colorfulworld
    plonetheme.coolblue
    plonetheme.criticas
    plonetheme.cultureCab
    plonetheme.darkened
    plonetheme.delicious2
    plonetheme.diazo_sunburst
    plonetheme.discovery
    plonetheme.drupal
    plonetheme.earthlingtwo
    plonetheme.evergreen
    plonetheme.ewb_case
    plonetheme.freshpick
    plonetheme.fui
    plonetheme.gemstone
    plonetheme.gov
    plonetheme.greencommunity
    plonetheme.grungeera
    plonetheme.html5_hotpink
    plonetheme.inbusiness
    plonetheme.intk
    plonetheme.jsjamba
    plonetheme.keepitsimple
    plonetheme.laboral
    plonetheme.labs
    plonetheme.leavesdew
    plonetheme.level2
    plonetheme.mimbo
    plonetheme.mvob
    plonetheme.netsightintranet
    plonetheme.nonzero
    plonetheme.notredame
    plonetheme.overlappedtabs
    plonetheme.p2
    plonetheme.ploneorg
    plonetheme.porseleinplaats
    plonetheme.pyar
    plonetheme.rcom
    plonetheme.redmusic
    plonetheme.relic
    plonetheme.responsive1140
    plonetheme.responsivetheme
    plonetheme.solemnity
    plonetheme.stylized
    plonetheme.subordinate
    plonetheme.sunburst
    plonetheme.terrafirma
    plonetheme.tidyblog
    plonetheme.transition
    plonetheme.twinapex
    plonetheme.unilluminated
    plonetheme.wmoWonen
    plonetheme.woodexperience
    plonetheme.xtheme
    sphinx.plonetheme
    vs.bootstrap.plonetheme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;after-plone-start&quot;&gt;
&lt;h2&gt;After Plone start&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    plonetheme.ReOrg
    plonetheme.aclark_twitter
    plonetheme.aqueouslight
    plonetheme.bananaleaf
    plonetheme.basic
    plonetheme.bluegray
    plonetheme.burned
    plonetheme.classic
    plonetheme.cleantheme
    plonetheme.codapress
    plonetheme.colorfulworld
    plonetheme.coolblue
    plonetheme.criticas
    plonetheme.cultureCab
    plonetheme.darkened
    plonetheme.delicious2
    plonetheme.diazo_sunburst
    plonetheme.discovery
    plonetheme.drupal
    plonetheme.earthlingtwo
    plonetheme.evergreen
    plonetheme.ewb_case
    plonetheme.freshpick
    plonetheme.fui
    plonetheme.gemstone
    plonetheme.greencommunity
    plonetheme.grungeera
    plonetheme.html5_hotpink
    plonetheme.inbusiness
    plonetheme.jsjamba
    plonetheme.keepitsimple
    plonetheme.labs
    plonetheme.leavesdew
    plonetheme.level2
    plonetheme.mimbo
    plonetheme.nonzero
    plonetheme.notredame
    plonetheme.overlappedtabs
    plonetheme.p2
    plonetheme.ploneorg
    plonetheme.pyar
    plonetheme.rcom
    plonetheme.redmusic
    plonetheme.relic
    plonetheme.responsive1140
    plonetheme.responsivetheme
    plonetheme.solemnity
    plonetheme.stylized
    plonetheme.subordinate
    plonetheme.sunburst
    plonetheme.terrafirma
    plonetheme.tidyblog
    plonetheme.transition
    plonetheme.twinapex
    plonetheme.unilluminated
    plonetheme.woodexperience
    plonetheme.xtheme
    sphinx.plonetheme
    vs.bootstrap.plonetheme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;removed-themes&quot;&gt;
&lt;h2&gt;Removed themes&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arnolfini&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gov&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intk&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;laboral&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mvob&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;netsightintranet&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;porseleinplaats&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wmoWonen&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Not bad! That&amp;#8217;s a lot of working themes for Plone 4, many of which use Diazo.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;images/plonetheme-report-1.png&quot; /&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;images/plonetheme-report-2.png&quot; /&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;images/plonetheme-report-3.png&quot; /&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;In the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plonetheme&lt;/span&gt;&lt;/code&gt; namespace.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Plock is a Plone installer for the pip-loving crowd: &lt;a class=&quot;reference external&quot; href=&quot;https://plock.github.com&quot;&gt;https://plock.github.com&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Introducing Plock Again</title>
    <id>http://blog.aclark.net/2013/12/29/introducing-plock-again/</id>
    <updated>2013-12-29T00:00:00Z</updated>
    <published>2013-12-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/12/29/introducing-plock-again/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-plock-again&quot;&gt;

&lt;p&gt;&lt;strong&gt;A few months ago I introduced Plock: the Plone-installer for the Pip-loving crowd.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few months ago I introduced &lt;strong&gt;Plock: the Plone-installer for the Pip-loving crowd&lt;/strong&gt;. Then I got sidetracked with the next version of Plock lingering unreleased in master. With the holidays underway I had a chance to revisit Plock and discovered a few things:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I still like the idea of Plock.&lt;/li&gt;
&lt;li&gt;I got carried away adding miscellaneous features to Plock, which only served to ruin the elegance of the idea.&lt;/li&gt;
&lt;li&gt;I particularly like the idea of moving my &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;hosted configuration files&lt;/a&gt; from PythonPackages to Plock. They always felt out of place in PythonPackages but I didn&amp;#8217;t have a better place to put them until now.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-plock&quot;&gt;
&lt;h2&gt;What is Plock?&lt;/h2&gt;
&lt;p&gt;So what is Plock today?&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;A Plone-installer for the Pip-loving crowd. That means someone with Python 2.7 and Pip should be able to install Plone in a matter of minutes with: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A set of hosted configuration files for Plone called &lt;strong&gt;Plock Pins&lt;/strong&gt;. &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A command line utility with a sharp focus.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;features&quot;&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve recently removed several extraneous features from Plock to sharpen the focus on installing Plone and its add-ons. Check out the Plock 0.1.9 &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--help&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -h
usage: plock [-h] [-v] [-e] [-a ADD_ON] [-l] [-w] [-r] [install_dir]

Plock is a Plone Installer for the Pip-Loving Crowd

positional arguments:
  install_dir

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program&amp;#39;s version number and exit
  -e, --expert          expert mode
  -a ADD_ON, --add-on ADD_ON
                        install add-ons from PyPI
  -l, --list-addons     list add-ons from PyPI
  -w, --write-config    write buildout.cfg
  -r, --raw             unformatted output, use with -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-plone&quot;&gt;
&lt;h4&gt;Install Plone&lt;/h4&gt;
&lt;p&gt;The main focus is on installing Plone to a user-specified installation directory e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-add-ons&quot;&gt;
&lt;h4&gt;Install Add-ons&lt;/h4&gt;
&lt;p&gt;Additionally you may specify an add-on to install e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a Products.PloneFormGen .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add-on installations are cumulative, so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a Products.PloneFormGen .
$ plock -a collective.loremipsum .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;will result in a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    Products.PloneFormGen
    collective.loremipsum
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add-ons that don&amp;#8217;t install via Buildout &lt;strong&gt;will not break your installation&lt;/strong&gt; e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a asdf .
Plock is installing Plone............. error: buildout failed.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When Buildout fails, Plock restores the previous working &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;list-add-ons&quot;&gt;
&lt;h4&gt;List Add-ons&lt;/h4&gt;
&lt;p&gt;Because Plone is more fun with add-ons and because add-ons can be hard to find, Plock will list (and alpha-sort) all the Plone add-ons available from PyPI:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1) 73.unlockItems                           - A small tool for unlocking web_dav locked item in a plone portal.
2) actionbar.panel                          - Provides a (old) facebook style action panel at the bottom of your  Plone site
3) adi.init                                 - Deletes Plone&amp;#39;s default contents
4) adi.samplecontent                        - Deletes Plone&amp;#39;s default content and adds some sample content
5) adi.slickstyle                           - A slick style for Plone portals, easily extendable for your own styles.
6) anthill.querytool                        - GUI for AdvancedQuery with some extensions - searching the easy way for Plone
7) anthill.skinner                          - Skinning for plone made easy
8) anz.dashboard                            - Plone netvibes like dashboard implementation
9) anz.ijabbar                              - Integrate iJab(an open source XMPP web chat client recommended by xmpp.org) to your plone site.
10) archetypes.clippingimage                 - Image field and/or patch with clipping support for Plone/Archetypes.
…
1,256) zkaffold                                 - Build out demonstration content for plone
1,257) ZopeSkel                                 - Templates and code generator for quickstarting Python, Zope and Plone projects.
1,258) zopeskel.diazotheme                      - Paster templates for Plone Diazo theme package
1,259) zopeskel.niteoweb                        - Paster templates for standard NiteoWeb Plone projects
1,260) zopyx.ecardsng                           - An ECard implementation for Plone
1,261) zopyx.ipsumplone                         - Lorem ipsum text and image demo content for Plone
1,262) zopyx.multieventcalendar                 - A multi-event calendar for Plone 3.X
1,263) zopyx.plone.cassandra                    - Show all assigned local roles within a subtree for any Plone 4 site
1,264) zopyx.plone.migration                    - Export/import scripts for migration Plone 2+3 to Plone 4
1,265) zopyx.smartprintng.plone                 - Produce &amp;amp; Publisher server integration with Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;write-config&quot;&gt;
&lt;h4&gt;Write config&lt;/h4&gt;
&lt;p&gt;Lastly, because sometimes you want to write a configuration file without installing Plone there is:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -w .
Wrote buildout.cfg.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which will result in:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat buildout.cfg
[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Extending configuration files over the internet is not a universally accepted technique due to the inherent security risk, but it&amp;#8217;s how I&amp;#8217;ve worked with Plone for years. I once added a &amp;#8220;secure&amp;#8221; feature to Plock but removed it recently due to the maintenance burden. Plock is now primarily insecure but true to its original goal of simplicity. Maybe security can be re-added later in some semi-elegant way (e.g. cert verification by the client?).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Python Packages Open Sourced</title>
    <id>http://blog.aclark.net/2013/10/13/python-packages-open-sourced/</id>
    <updated>2013-10-13T00:00:00Z</updated>
    <published>2013-10-13T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/10/13/python-packages-open-sourced/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;python-packages-open-sourced&quot;&gt;

&lt;p&gt;&lt;strong&gt;Today I am open sourcing the code that ran pythonpackages.com from late 2011 to late 2012.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can find it here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/pythonpackages/vanity_app&quot;&gt;https://github.com/pythonpackages/vanity_app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;why-i-waited&quot;&gt;
&lt;h2&gt;Why I Waited&lt;/h2&gt;
&lt;p&gt;I waited a long time before doing this because:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s embarrassing. I originally wanted to have pythonpackages.com rewritten with some tests before doing this. But that never happened.&lt;/li&gt;
&lt;li&gt;Some of it was private. The original repository had things like the database checked in to it which had users&amp;#8217; names in it. There were also various and sundry account credentials and API keys that needed to be removed. It took some time and motivation to get all that done.&lt;/li&gt;
&lt;li&gt;I needed historical perspective which does not occur without the passage of time. The packaging landscape has totally changed for the better since I last worked on pythonpackages.com, and I&amp;#8217;m now ready to put the past behind me and focus on the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;why-now&quot;&gt;
&lt;h2&gt;Why Now&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I managed to find some time thanks to the U.S. Government &amp;lt;cough&amp;gt; (Speaking of that: this would be a great time to hire me for any tasks you need done. Email: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Folks have been asking about it. I originally planned to re-launch by Q2 2013, but that nevered happened. I&amp;#8217;m now planning to have something working by the end of the year and I&amp;#8217;m actively working on the site again as of right now.&lt;/li&gt;
&lt;li&gt;I know what to focus on. The original pythonpackages.com tried to do way too much, but the most useful thing it did was automate the release of packages from GitHub to PyPI through a GitHub service: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/github/github-services/blob/master/lib/services/pythonpackages.rb&quot;&gt;https://github.com/github/github-services/blob/master/lib/services/pythonpackages.rb&lt;/a&gt;. I&amp;#8217;m going to focus on getting that working again without all the spaghetti code wrapped around it. I believe a lot of useful services can be built around this feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;enjoy&quot;&gt;
&lt;h2&gt;Enjoy&lt;/h2&gt;
&lt;p&gt;I hope you enjoy reading the source and if you end up using it for something please drop me a line: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Pillow 2.2.1 Released</title>
    <id>http://blog.aclark.net/2013/10/03/pillow-2.2.1-released/</id>
    <updated>2013-10-03T00:00:00Z</updated>
    <published>2013-10-03T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/10/03/pillow-2.2.1-released/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pillow-2-2-1-released&quot;&gt;

&lt;p&gt;&lt;strong&gt;Pillow is the &amp;#8220;friendly&amp;#8221; PIL fork. PIL is the Python Imaging Library.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;admonition note&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;An earlier version of this entry was published yesterday with the wrong date. Apologies for any annoyance or confusion.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The Pillow 2.2.1 source distribution is &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/Pillow/2.2.1&quot;&gt;now available on PyPI&lt;/a&gt;, featuring over 30 documented bug fixes and enhancements since 2.1.0 was released 3 months ago.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;changelog&quot;&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/254&quot;&gt;#254&lt;/a&gt;: Bug in image transformations resulting from uninitialized memory [nikmolnar]&lt;/li&gt;
&lt;li&gt;Fix for encoding of b_whitespace, similar to closed issue &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/272&quot;&gt;#272&lt;/a&gt; [mhogg]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/273&quot;&gt;#273&lt;/a&gt;: Add numpy array interface support for 16 and 32 bit integer modes [cgohlke]&lt;/li&gt;
&lt;li&gt;Partial fix for &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/290&quot;&gt;#290&lt;/a&gt;: Add preliminary support for TIFF tags. [wiredfool]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/251&quot;&gt;#251&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/326&quot;&gt;#326&lt;/a&gt;: circumvent classification of pngtest_bad.png as malware [cgohlke]&lt;/li&gt;
&lt;li&gt;Add typedef uint64_t for MSVC. [cgohlke]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/329&quot;&gt;#329&lt;/a&gt;: setup.py: better support for C_INCLUDE_PATH, LD_RUN_PATH, etc. [nu774]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/328&quot;&gt;#328&lt;/a&gt;: _imagingcms.c: include windef.h to fix build issue on MSVC [nu774]&lt;/li&gt;
&lt;li&gt;Automatically discover homebrew include/ and lib/ paths on OSX [donspaulding]&lt;/li&gt;
&lt;li&gt;Fix bytes which should be bytearray [manisandro]&lt;/li&gt;
&lt;li&gt;Add respective paths for C_INCLUDE_PATH, LD_RUN_PATH (rpath) to build if specified as environment variables. [seanupton]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/312&quot;&gt;#312&lt;/a&gt; + gif optimize improvement [d-schmidt]&lt;/li&gt;
&lt;li&gt;Be more tolerant of tag read failures [ericbuehl]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/318&quot;&gt;#318&lt;/a&gt;: Catch truncated zTXt errors. [vytisb]&lt;/li&gt;
&lt;li&gt;Fix IOError when saving progressive JPEGs. [e98cuenc]&lt;/li&gt;
&lt;li&gt;Add RGBA support to ImageColor [yoavweiss]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/304&quot;&gt;#304&lt;/a&gt;: test for str, not &amp;#8220;utf-8&amp;#8221;. [mjpieters]&lt;/li&gt;
&lt;li&gt;Fix missing import os in _util.py. [mnowotka]&lt;/li&gt;
&lt;li&gt;Added missing exif tags. [freyes]&lt;/li&gt;
&lt;li&gt;Fail on all import errors, fixes &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/298&quot;&gt;#298&lt;/a&gt;. [macfreek, wiredfool]&lt;/li&gt;
&lt;li&gt;Fixed Windows fallback (wasn&amp;#8217;t using correct file in Windows fonts). [lmollea]&lt;/li&gt;
&lt;li&gt;Moved ImageFile and ImageFileIO comments to docstrings. [freyes]&lt;/li&gt;
&lt;li&gt;Restore compatibility with ISO C. [cgohlke]&lt;/li&gt;
&lt;li&gt;Use correct format character for C int type. [cgohlke]&lt;/li&gt;
&lt;li&gt;Allocate enough memory to hold pointers in encode.c. [cgohlke]&lt;/li&gt;
&lt;li&gt;Fix &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/279&quot;&gt;#279&lt;/a&gt;, fillorder double shuffling bug when FillOrder ==2 and decoding using libtiff. [wiredfool]&lt;/li&gt;
&lt;li&gt;Moved Image module comments to docstrings. [freyes]&lt;/li&gt;
&lt;li&gt;Add 16-bit TIFF support, fixes &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/274&quot;&gt;#274&lt;/a&gt;. [wiredfool]&lt;/li&gt;
&lt;li&gt;Ignore high ascii characters in string.whitespace, fixes &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/272&quot;&gt;#272&lt;/a&gt;. [wiredfool]&lt;/li&gt;
&lt;li&gt;Added clean/build to tox to make it behave like travis. [freyes]&lt;/li&gt;
&lt;li&gt;Adding support for metadata in webp images. [heynemann]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;distributions&quot;&gt;
&lt;h2&gt;Distributions&lt;/h2&gt;
&lt;p&gt;In addition to the &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi?name=Pillow&amp;amp;version=2.2.1&amp;amp;:action=files&quot;&gt;source distribution&lt;/a&gt;, there are also Python Eggs and Windows Installers available (for 32 and 64 bit) and for the first time ever: Python Wheels! (New built-package format supported by pip.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;support&quot;&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging?tab=members&quot;&gt;The Pillow Team&lt;/a&gt; has really settled in to the groove of making Pillow releases every three months, and I am very proud to be a part it! Special thanks to Eric Soroos and Christopher Gohlke for their invaluable help with Pillow 2.2.1.&lt;/p&gt;
&lt;p&gt;If you use Pillow professionally, please consider &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow#financial&quot;&gt;supporting its development&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">What's new as of Plock 0-1-2?</title>
    <id>http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/</id>
    <updated>2013-07-29T00:00:00Z</updated>
    <published>2013-07-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;what-s-new-as-of-plock-0-1-2&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plock is a Plone Installer for the Pip-Loving Crowd.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I blogged about Plock after 0.0.1 was released and a lot of progress has been made since then, so I thought I&amp;#8217;d give an update. But rather than a traditional list-the-changelog-style-blog-entry, I thought I&amp;#8217;d walk you through what you can do with Plock as of version 0.1.2.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;install-plone&quot;&gt;
&lt;h2&gt;Install Plone&lt;/h2&gt;
&lt;p&gt;Plock exists to the eliminate cognitive dissonance experienced by Python programmers who want to install Plone but don&amp;#8217;t want to think about installing Plone. Such folks can now type the following to install Plone 4.3 (inside an activated virtualenv of course):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install plock
$ plock
Installing Plone. This may take a while.......(3)....(4)....(4)....(4)....(5)....(5)....(9)....(14)....(21)....(24)....(29)....(33)....
(38)....(43)....(48)....(54)....(58)....(62)....(66)....(71)....(74)....(78)....(78)....(83)....(87)....(89)....(92)....(97)....(98)....
(98)....(98)....(98)....(98)....(100)....(102)....(103)....(108)....(110)....(113)....(115)....(120)....(123)....(128)....(133)....(138)....
(142)....(148)....(153)....(158)....(161)....(163)....(168)....(171)....(175)....(179)....(181)....(184)....(189)....(193)....(195)....(198)....
(203)....(205)....(210)....(214)....(221)....(224)....(228)....(234). done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;run-plone&quot;&gt;
&lt;h2&gt;Run Plone&lt;/h2&gt;
&lt;p&gt;With Plock, you can &lt;strong&gt;truly&lt;/strong&gt; run Plone because you are not running scripts with any of the following not-plone names: client, instance, zope.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;list-add-ons&quot;&gt;
&lt;h2&gt;List add-ons&lt;/h2&gt;
&lt;p&gt;One of the biggest attractions to using Plone is all the work on your new web project that has already been done for you. There are over 1,200 packages on PyPI with &amp;#8220;plone&amp;#8221; in either the description, keywords list, or summary. Some of these are part of the core, and some don&amp;#8217;t work with the latest release, but there are still a lot of add-ons available (I&amp;#8217;m currently working on an accurate count.)&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;images/plock-list-addons.png&quot; style=&quot;width: 95%;&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-add-ons&quot;&gt;
&lt;h2&gt;Install add-ons&lt;/h2&gt;
&lt;p&gt;With Plock, installing add-ons is done from the command line. Pick a Python package name and install-away:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i Products.PloneFormGen
Installing Plone. This may take a while... done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or pick two or more:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i Products.PloneFormGen collective.cover
Installing Plone. This may take a while... done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(If you have already installed an add-on with Plock, you can preserve the currently installed list with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-p&lt;/span&gt;&lt;/code&gt;. Otherwise, the add-ons installed are replaced with each new call to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-i&lt;/span&gt;&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;If you pick a bad one, Plock has your back:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i foo
Installing Plone. This may take a while... error!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In the above scenario, Plock restored your previous configuration before reporting the error and exiting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;all-the-rest&quot;&gt;
&lt;h2&gt;All the rest&lt;/h2&gt;
&lt;p&gt;For more details, please see:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock/blob/master/CHANGES.rst#changelog&quot;&gt;https://github.com/aclark4life/plock/blob/master/CHANGES.rst#changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issues&quot;&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;p&gt;If you use Plock and have an issue, please report it here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock/issues&quot;&gt;https://github.com/aclark4life/plock/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Introducing Plock</title>
    <id>http://blog.aclark.net/2013/07/19/introducing-plock/</id>
    <updated>2013-07-19T00:00:00Z</updated>
    <published>2013-07-19T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/07/19/introducing-plock/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-plock&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plock is a Plone Installer for the Pip-Loving Crowd. Plone is a Python-based CMS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Installing Plone with &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock&quot;&gt;Plock&lt;/a&gt; looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install plock
$ bin/install-plone
$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;configuration&quot;&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Plone uses &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/zc.buildout&quot;&gt;Buildout&lt;/a&gt; to manage its installation and configuration. Plock creates a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file for you that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/pythonpackages/buildout-plone/master/latest

[plone]
eggs +=
# Add-ons go here e.g.:
#    Products.PloneFormGen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-ons&quot;&gt;
&lt;h3&gt;Add-ons&lt;/h3&gt;
&lt;p&gt;See &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi?:action=browse&amp;amp;show=all&amp;amp;c=563&quot;&gt;https://pypi.python.org/pypi?:action=browse&amp;amp;show=all&amp;amp;c=563&lt;/a&gt; for a complete list of add-ons compatible with Plone 4.3.&lt;/p&gt;
&lt;p&gt;To install add-ons, add the desired Python package name(s) to the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;eggs&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;+=&lt;/span&gt;&lt;/code&gt; parameter e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/pythonpackages/buildout-plone/master/latest

[plone]
eggs +=
    Products.PloneFormGen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Stop Plone and run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Install the add-on(s) in Plone via Site Setup -&amp;gt; Add-ons.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Pillow 2-1-0 is Out</title>
    <id>http://blog.aclark.net/2013/07/02/pillow-2-1-0-is-out/</id>
    <updated>2013-07-02T00:00:00Z</updated>
    <published>2013-07-02T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/07/02/pillow-2-1-0-is-out/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pillow-2-1-0-is-out&quot;&gt;

&lt;p&gt;&lt;strong&gt;Pillow is a popular fork of PIL by Alex Clark and Contributors. PIL is the Python Imaging Library by Fredrik Lundh and Contributors&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pillow-2.1.0.png&quot; style=&quot;width: 75%;&quot; /&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/Pillow/2.1.0&quot;&gt;Pillow 2.1.0 is out!&lt;/a&gt; With this release, the Pillow team has &lt;em&gt;finally&lt;/em&gt; removed support for &amp;#8220;import _imaging&amp;#8221;, thus completing the move of PIL modules into the PIL namespace &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;. Many thanks to Eric Soroos (AKA wiredfool) who completed the majority of this work. Also a big thanks to Christopher Gohlke and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/Arfrever&quot;&gt;Arfrever&lt;/a&gt; both of whom rallied around a push to get the 2.1.0 release out on schedule. And I want to thank everyone else who reported an issue and/or sent a pull request to help make this release the best it could be.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;quarterly-release-cycle&quot;&gt;
&lt;h2&gt;Quarterly release cycle&lt;/h2&gt;
&lt;p&gt;After the March 15, 2013 release of Pillow 2.0.0 we decided to adopt a quarterly release cycle. So every three months, as long as the patches keep coming you will see a new Pillow release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;look-ma-no-official-funding&quot;&gt;
&lt;h2&gt;Look ma no official funding&lt;/h2&gt;
&lt;p&gt;Pillow 2.0.0 was an enormous effort, made possible by a generous grant from the Python Software Foundation. But things have stablized quite a bit since then. So much so, that with help from many others I was able to squeeze this release into my normal schedule. However you are always welcome to financially help support Pillow, especially if you are using it in a commercial environment. Committers are encouraged to add their name here if they&amp;#8217;d like to receive donations:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/blob/master/README.rst#support&quot;&gt;https://github.com/python-imaging/Pillow/blob/master/README.rst#support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And I have personally steered my gittip profile entirely towards Pillow production.&lt;/p&gt;
&lt;script data-gittip-username=&quot;aclark4life&quot;
src=&quot;https://www.gittip.com/assets/widgets/0002.js&quot;&gt;
&lt;/script&gt;&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;go-get-it-now&quot;&gt;
&lt;h2&gt;Go get it now&lt;/h2&gt;
&lt;p&gt;Pillow 2.1.0 source and binaries are available on PyPI. Please use, enjoy, and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues?state=open&quot;&gt;report issues&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Which began with the first release of Pillow 1.0 on 2010-07-31 in which support for &amp;#8220;import Image&amp;#8221; was removed.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Plone.org Upgraded</title>
    <id>http://blog.aclark.net/2013/06/22/plone-org-upgraded/</id>
    <updated>2013-06-22T00:00:00Z</updated>
    <published>2013-06-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/06/22/plone-org-upgraded/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-org-upgraded&quot;&gt;

&lt;p&gt;&lt;strong&gt;Recently I upgraded plone.org from Plone 4.2 to Plone 4.3.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recently at the behest of Liz Leddy, I &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163&quot;&gt;upgraded plone.org from Plone 4.2 to Plone 4.3&lt;/a&gt;. It&amp;#8217;s been a while since I had the pleasure, so I thought I&amp;#8217;d make some notes: for myself, the AI Team and anyone else interested in the process.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;background&quot;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Plone.org is one of the &lt;strong&gt;oldest Plone sites in existence&lt;/strong&gt;, having been launched circa Plone 1 and upgraded in place ever since.&lt;/li&gt;
&lt;li&gt;It functions remarkably well, given #1.&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s not without its issues, but all of them are manageable —&amp;nbsp;for some value of manageable.&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s often very time consuming to work on.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pre-process&quot;&gt;
&lt;h2&gt;Pre-Process&lt;/h2&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;The first step is always to get a local copy:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git@github.com:plone/Products.PloneOrg.git
$ cd Products.PloneOrg
$ cp buildout.cfg.in buildout.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Edit &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to extend the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;database.cfg&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
# Rename to buildout.cfg and uncomment one of the profiles below
extends =

# Plone only, unthemed
#    conf/develop.cfg

# Copy data local (with plone.org account)
    conf/database.cfg

# Production (for use on plone.org server)
#    conf/production.cfg

# Staging (for use on plone.org server)
# and Deployment (for use by Jenkins, admins and developers),
#   fabric can be added to any of primary configurations

#    conf/staging.cfg
#    conf/fabric.cfg

# Developer Database Drop; makes developer-friendly copies
# of plone.org&amp;#39;s content.
#    conf/devdrop.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Bootstrap and run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv-2.7 .
$ bin/pip install zc.buildout
$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Make the appropriate configuration changes i.e. change &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extends&lt;/span&gt;&lt;/code&gt; from 4.2 to 4.3:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
develop = .
extends =
    http://dist.plone.org/release/4.3.1/versions.cfg
    versions.cfg
    sources.cfg
extensions =
#    buildout.dumppickedversions
    buildout.threatlevel
    mr.developer

versions = versions
sources-dir = sources
eggs =
    Pillow
    Products.PloneOrg
    Products.PloneHotfix20130618

# get us a user and group variable
[env]
recipe = gocept.recipe.env
[grp]
recipe = collective.recipe.grp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Run the upgrade locally. With plone.org data this takes about 45 minutes to an hour &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/upgrade.png&quot; /&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;If the upgrade succeeds, you are ready to launch. If it fails, fix the errors before proceeding.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;process&quot;&gt;
&lt;h2&gt;Process&lt;/h2&gt;
&lt;p&gt;We know from upgrading locally that the process will take about 45 minutes to an hour, so you should &lt;strong&gt;allocate about 2 hours to do the upgrade&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Announce the upgrade: preferably a week or two in advance. The plone-developers and plone-users lists are probably sufficient, but you can create a plone.org news item too if you are feeling extra-ambitious. I only had a small window to perform this maintenance, so I skipped this step and proceeded directly to the next one.&lt;/li&gt;
&lt;li&gt;Add a status message to plone.org to indicate a maintenance window is in progress. I chose to customize the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;main_template&lt;/span&gt;&lt;/code&gt; to accomplish this, but ideally we&amp;#8217;d have some functionality in Plone that allowed site administrators to easily configure status messages.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/upgrade-message.png&quot; /&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Disable logins. Since the upgrade takes a long time, we don&amp;#8217;t want content being edited during this process. I chose to use David Glick&amp;#8217;s technique of disabling PAS. I moved the ldap authentication plugin to the Active Plugin list, thus disabling PAS such that only ZODB users could login. But ideally we&amp;#8217;d have some feature in Plone to allow site administrators to disable logins.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pas.png&quot; /&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Run the upgrade. I forgot to mention earlier something very important: &lt;strong&gt;On plone.org, you can&amp;#8217;t access Zope from the internet.&lt;/strong&gt; And you can&amp;#8217;t run the upgrade without accessing Zope. Hence run the following command to access the server, then access Plone via &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;http://localhost:8080&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -L 8080:10.57.0.107:5011 direct.plone.org
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;After the upgrade finishes, click around to make sure you didn&amp;#8217;t break anything. In my case, I broke something — I normally move &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;portal_skins/custom&lt;/span&gt;&lt;/code&gt; out of the way before upgrading, but this time I forgot. And when I experienced minor JavaScript issues, I forgot to examine custom; which currently looks like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/custom.png&quot; /&gt;
&lt;p&gt;Even if I had remembered, I didn&amp;#8217;t want to spend the next few hours examining database customizations. Fortunately, before I realized I had forgotten to check custom, I emailed the plone-developers list —&amp;nbsp;and Nathan Van Gheem to the rescue! He fixed some JavaScript in custom, then I cleared the cache(s). Ideally Plone would report on database customizations during the upgrade process: to indicate the potential for breakage and encourage the site administrator to round-trip those customizations back to the file system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That&amp;#8217;s it! I hope this helps folks wrap their head around the plone.org upgrade process. A few closing thoughts:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;With Cloudflare in front, we probably don&amp;#8217;t need Varnish anymore.&lt;/li&gt;
&lt;li&gt;Leaving a note in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;portal_skins/custom&lt;/span&gt;&lt;/code&gt; to encourage folks to &amp;#8220;please keep this area clean&amp;#8221; — does not work.&lt;/li&gt;
&lt;li&gt;plone.com anyone? I don&amp;#8217;t know the future of plone.org and I have mixed feelings about it: on the one hand, I&amp;#8217;m proud to help maintain such an old and venerable system. On the other hand, I think plone.org should be retired in a way similar to old.zope.org. What do you think?&lt;/li&gt;
&lt;/ul&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It shouldn&amp;#8217;t take this long. See: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163#commitcomment-3384259&quot;&gt;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163#commitcomment-3384259&lt;/a&gt; for a discussion about this issue.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">New Pyramid Site</title>
    <id>http://blog.aclark.net/2013/04/22/new-pyramid-site/</id>
    <updated>2013-04-22T00:00:00Z</updated>
    <published>2013-04-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/04/22/new-pyramid-site/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-pyramid-site&quot;&gt;

&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/aclarknet/master/screenshot.png&quot; style=&quot;width: 98%;&quot; /&gt;
&lt;p&gt;&lt;strong&gt;For the first time in 10 years, http://aclark.net is not powered by Plone.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nothing against Plone: it&amp;#8217;s still one of the greatest loves of my life (inasmuch as you can love a software and community, as I do).&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;why&quot;&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;This was not the result of a revolutionary plan, rather more of an evolution. It happened like this:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;As soon as Plone 4.3a1 was released (a year ago?) I deployed a new Plone site to aclark.net with it, featuring a &lt;strong&gt;Diazo&lt;/strong&gt; (new Plone theming engine) theme.&lt;/li&gt;
&lt;li&gt;Around the same time I became obsessed with deploying to Heroku, and also gained an interest in &lt;strong&gt;Python 3&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A few months ago, I got tired of paying $11/month to host my Plone site so I converted the site to &lt;strong&gt;static HTML&lt;/strong&gt; and moved it to &lt;strong&gt;GitHub pages&lt;/strong&gt;. But the result was flawed because maintenance involved editing duplicate copies of the website content (e.g. both clients.html and clients/foo.html contained the same text describing &amp;#8220;foo&amp;#8221;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So when it came time to do more than a few casual edits, I knew I had to find a new approach. That&amp;#8217;s when various elements of the Universe conspired to lead me in a new direction.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how&quot;&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;pyramid&quot;&gt;
&lt;h3&gt;Pyramid&lt;/h3&gt;
&lt;p&gt;I spent a lot of time (~ 1 year) developing &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;pythonpackages.com&lt;/a&gt; in Pyramid, but the result was a mess (code-wise). I&amp;#8217;m in the process of rewriting and open sourcing it, but it&amp;#8217;s slow going. So what better way to get started than to do a small-ish site in Pyramid for fun?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;about-me&quot;&gt;
&lt;h3&gt;about.me&lt;/h3&gt;
&lt;p&gt;I also recently gave in and created an &lt;a class=&quot;reference external&quot; href=&quot;http://about.me/alex.clark&quot;&gt;about.me site&lt;/a&gt;. I was impressed by their content editing features, and my ability to create a page that looked OK using them.&lt;/p&gt;
&lt;p&gt;In my about.me profile, I used a picture of me and a picture of DC I took in early 2012. When it came time to redo aclark.net I felt like I really wanted to capture the simplicity of the about.me site, so I used the same photo in the background.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bootstrap&quot;&gt;
&lt;h3&gt;Bootstrap&lt;/h3&gt;
&lt;p&gt;Bootstrap is old news at this point, but I really enjoy using it and I particularly like that they have added more example templates. So I combined my background photo with one of &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.github.io/bootstrap/getting-started.html#examples&quot;&gt;their example templates&lt;/a&gt; and a new site idea was born. As I&amp;#8217;m not a particularly talented visual artist, my ability to produce something that looked OK (with code this time) was exciting.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what&quot;&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;Until I added a contact form, the site was entirely unremarkable. There are views and routes and templates, typical fare for a web framework. Here is the entire &amp;#8220;main routine&amp;#8221;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyramid.session&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnencryptedCookieSessionFactoryConfig&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyramid.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configurator&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.redir&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.redir&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog_entry&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.redir&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blog_slash&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.views&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.views&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;deform_bootstrap&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Oppan wsgi style! Configure and return WSGI application.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;my_session_factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnencryptedCookieSessionFactoryConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;itsaseekreet&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Configurator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_session_factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/blog&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_entry&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/blog/{entry:.*}&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_slash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/blog/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;clients&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/clients&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;projects&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/projects&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;services&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/services&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/team&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;testimonials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/testimonials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_static_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;static&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:static&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cache_max_age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blog_entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_entry&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blog_slash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;blog_slash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/clients.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;clients&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/contact.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;contact&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/projects.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;projects&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/root.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/services.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;services&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/testimonials.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;testimonials&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;renderer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;aclarknet:templates/team.mak&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;route_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;team&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deform_bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_wsgi_app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;contact-form&quot;&gt;
&lt;h3&gt;Contact form&lt;/h3&gt;
&lt;p&gt;But then I wanted a contact form. Which lead me to wanting an elegant way to send mail via Heroku. Which lead me to discover &lt;a class=&quot;reference external&quot; href=&quot;http://sendgrid.com/&quot;&gt;SendGrid&lt;/a&gt;. Which lead me create some primitive marketing features I am quite proud of and excited about.&lt;/p&gt;
&lt;p&gt;I still ended up sending mail &amp;#8220;the old way&amp;#8221; via GMail. But now I send two mails: one to &lt;a class=&quot;reference external&quot; href=&quot;mailto:info&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;info&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt; to alert our staff about the lead (using GMail). And one to the lead acknowledging their submission (using SendGrid). SendGrid keeps a record of all the leads we&amp;#8217;ve contacted, amongst other &amp;#8220;fancy marketing features&amp;#8221;. Here&amp;#8217;s the relevant view code:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;deform&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;smtplib&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;email.mime.text&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FORM_ERROR&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FORM_SUCCESS&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_RECIPIENT&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_SUBJECT&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_TWO_MESSAGE&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_TWO_SUBJECT&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GMAIL_HOSTNAME&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GMAIL_PASSWORD&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GMAIL_USERNAME&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SENDGRID_HOSTNAME&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SENDGRID_PASSWORD&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.config&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SENDGRID_USERNAME&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.forms&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactFormSchema&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Create and render deform form containing colander schema. Provide&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    sendgrid integration for marketing.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Send&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;css_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;span9 btn-block btn-large&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;schema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ContactFormSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Send&amp;#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;appstruct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValidationFailure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                &lt;span class=&quot;s1&quot;&gt;&amp;#39;request&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# This is the form contents&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appstruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;appstruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# This is the mail to info@aclark.net&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Subject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_SUBJECT&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;To&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_RECIPIENT&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;From&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# This is the mail to the new lead&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIMEText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MIME_TWO_MESSAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Subject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_TWO_SUBJECT&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;To&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;From&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_RECIPIENT&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# This is the mail to info@aclark.net&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smtplib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SMTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMAIL_HOSTNAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starttls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMAIL_USERNAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GMAIL_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIME_ONE_RECIPIENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mime_document_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# This is the mail to the new lead&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smtplib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SMTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SENDGRID_HOSTNAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starttls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SENDGRID_USERNAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SENDGRID_PASSWORD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MIME_ONE_RECIPIENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mime_document_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;smtp_server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FORM_SUCCESS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FORM_ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;errors&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appstruct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}),&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;&amp;#39;request&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;request&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This is the default view, to be used with most routes since we do not&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    provide any content editing ability yet. Even then, maybe a default view&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    would still be helpful.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;who-cares&quot;&gt;
&lt;h2&gt;Who cares&lt;/h2&gt;
&lt;p&gt;The best thing about all of this being able to run the site &lt;strong&gt;100% for free on Heroku&lt;/strong&gt;. Also:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Python 3 compat!&lt;/li&gt;
&lt;li&gt;Free caching via CloudFlare&lt;/li&gt;
&lt;li&gt;Free ping service from Pingdom keeps the site from &amp;#8220;going to sleep&amp;#8221; (HT: natea).&lt;/li&gt;
&lt;li&gt;Updating the site fits my workflow. If I&amp;#8217;m the content editor, I don&amp;#8217;t necessarily need or want to use Plone to edit my content. I can save Plone for my clients, and focus on &lt;strong&gt;what makes them happy&lt;/strong&gt; with their CMS system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">The Story of Pillow</title>
    <id>http://blog.aclark.net/2013/03/15/the-story-of-pillow/</id>
    <updated>2013-03-15T00:00:00Z</updated>
    <published>2013-03-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/03/15/the-story-of-pillow/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;the-story-of-pillow&quot;&gt;

&lt;p&gt;&lt;strong&gt;On March 4, 2013 I got an email from the Python Software Foundation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On March 4, 2013 I got an email from the Python Software Foundation (PSF):&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;This email notification is being sent to you to inform you of the PSF Board’s decision to fund the facilitation of a Python 3 compatible release of the Python Imaging Library for the amount of $1,300 USD. Please see the resolution that was passed unanimously on March 4, 2013 via email below:&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Yay! That was in response to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/psf-grant-proposal&quot;&gt;my proposal&lt;/a&gt; asking for funding to finish a Pillow 2.0.0 release. In that proposal, I presented the &amp;#8220;story of Pillow&amp;#8221; which I&amp;#8217;d like to present again now, for anyone interested:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Tired of seeing the proliferation of third party packagings of the Python Imaging Library, in 2010 Alex Clark took Hanno Schlicting&amp;#8217;s repackaging and used it to create a fork of the Python Imaging Library on GitHub. He subsequently released that fork to PyPI as Pillow 1.0. The ability to add additional development library paths to setup.py (e.g. 64 bit library and headers directories) and make releases quickly eventually led to widespread adoption of Pillow.&lt;/p&gt;
&lt;p&gt;A little over a year later on 2011-09-08, Takayuki Shimizukawa uploaded the first Windows (win32) eggs. Since then, every Pillow release included Windows eggs thanks to Takayuki. And on 2013-02-02, the first 64-bit Windows eggs (amd64) were uploaded to PyPI by Takayuki.&lt;/p&gt;
&lt;p&gt;For the first 3 years, the fork focused on packaging fixes only. Now a Python 3 compatible pull request from Brian Crowell has been merged, and the final stages of release preparation are underway. In early 2013, Barry Warsaw created an Ubuntu Personal Package Archive and tested it with Python 3. And the Fedora Project is now planning to include Pillow with their release of Fedora 19. Finally, the Pillow project has promised a Python 3 compatible release of Pillow by PyCon 2013.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;That release is now done! And I have had an absolute blast working on Pillow full time over the course of the last week or so. So much so, that I&amp;#8217;m going to propose you help me continue to have fun and be productive with Pillow… but more on that later. First, about the new release.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;about-2-0-0&quot;&gt;
&lt;h2&gt;About 2.0.0&lt;/h2&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/story-of-pillow.png&quot; /&gt;
&lt;p&gt;This release marks the first &amp;#8220;serious effort&amp;#8221; I have put into Pillow. While I&amp;#8217;ve always enjoyed working on it in my spare time, I knew that there was no way I could finish it in time for PyCon 2013 (as I promised) without getting some financial assistance.&lt;/p&gt;
&lt;p&gt;Enter: The PSF, who graciously offered to fund my work (and the work of one other contributor). Once I had funding in place, I knew exactly what needed to be done:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;So much time has passed since the fork, no one seemed to care if we made image code changes (we were originally a packaging fork), so this release contains &lt;strong&gt;EVERY PATCH EVER SUBMITTED TO PIL&lt;/strong&gt; but not released until now. I&amp;#8217;m exaggerating, but we really crammed a lot of &amp;#8220;goodness&amp;#8221; in to the 2.0.0 release along with Python 3 support which is what prompted the release in the first place.&lt;/li&gt;
&lt;li&gt;In order to fully test, I fine-tuned my tox environment on Mac OS X (tox is awesome) as well as fired up a new Windows VM (and used an already-existing Linux VM). Additionally, other folks joined in to test on their environments (most notably Christophe Gohlke and Eric Soroos). You&amp;#8217;ll find the results here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow#platform-support&quot;&gt;https://github.com/python-imaging/Pillow#platform-support&lt;/a&gt;. That means: &lt;strong&gt;THIS RELEASE HAS BEEN FULLY, EXTENSIVELY, AND EXHAUSTIVELY DEVELOPED AND TESTED&lt;/strong&gt;. Aside from the possible inconvenience of Pillow 2.0.0 dropping 2.4 and 2.5 support (use Pillow 1.x if you need Python 2.4,2.5), you should not have any trouble with it. If you do, please open a ticket here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues&quot;&gt;https://github.com/python-imaging/Pillow/issues&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;As important as quality software is to me, quality presentation is almost equally important. (That&amp;#8217;s developer-eye quality, not designer-eye quality. ;-)) So I spent a lot of time cleaning up and enhancing the more subtle aspects of the release e.g. README.rst, docs/* (including the pythondoc documentation and HISTORY.txt and CONTRIBUTORS.txt). The pythondoc documentation has been converted to re-structured text and is hosted on ReadTheDocs: &lt;a class=&quot;reference external&quot; href=&quot;http://pillow.readthedocs.org/en/latest/&quot;&gt;http://pillow.readthedocs.org/en/latest/&lt;/a&gt;. The website has been updated to include an &lt;strong&gt;actual&lt;/strong&gt; image generated by PIL &lt;a class=&quot;reference external&quot; href=&quot;http://python-imaging.github.com/&quot;&gt;http://python-imaging.github.com/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope you enjoy and use Pillow 2.0.0. If you&amp;#8217;d like to see me continue to devote significant time to maintaining Pillow, please &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;consider a gittip&lt;/a&gt;! Thank you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Trading Places Trading Scene Explained</title>
    <id>http://blog.aclark.net/2013/02/23/trading-places-trading-scene-explained/</id>
    <updated>2013-02-23T00:00:00Z</updated>
    <published>2013-02-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/02/23/trading-places-trading-scene-explained/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;trading-places-trading-scene-explained&quot;&gt;

&lt;p&gt;&lt;strong&gt;Every time I watch Trading Places I have to search the internet for an explanation of the climactic commodities trading scene.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Every time I watch the movie &lt;a class=&quot;reference external&quot; href=&quot;http://www.imdb.com/title/tt0086465&quot;&gt;Trading Places&lt;/a&gt;, I have to search the internet for an explanation of the climactic commodities trading scene. It usually takes me about 20 minutes to (re-)understand it, then another 10 minutes to explain it to my wife. Although there are &lt;a class=&quot;reference external&quot; href=&quot;http://www.wisebread.com/explaining-the-climax-scene-of-trading-places&quot;&gt;plenty&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://www.popmodal.com/video/1277/Trading-Places-Final-Exchange-Scene-amp-Explanation&quot;&gt;of&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://www.dangerouslogic.com/trading_places.html&quot;&gt;great&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://justurbanism.com/2011/03/26/how_the_trading_places_final_scene_works/&quot;&gt;answers&lt;/a&gt; available, none of them really &amp;#8220;speak&amp;#8221; to me; so I decided to write my own. The goal for me is to be able to (re-)read my explanation and understand it enough to explain to someone else in less than 5 minutes.&lt;/p&gt;
&lt;p&gt;This scene is tricky for non-stockbrokers to understand because you need to know a lot about trading, and you also need to know some important plot details. Rather than continue to look everything up on the internet each time, I figured I&amp;#8217;d write this blog entry instead.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;important-plot-detail-1&quot;&gt;
&lt;h2&gt;Important Plot Detail #1&lt;/h2&gt;
&lt;p&gt;The Crop Reports, real and fake. In the movie, the Dukes plan to cheat. But the &amp;#8220;good guys&amp;#8221; (Valentine and Winthrope) foil them by replacing their stolen, ill-gotten crop report with a fake. This allows the &amp;#8220;good guys&amp;#8221; to win. To understand the reverse-swindle, you must understand the crop reports (real and fake) and the market repercussions of each:&lt;/p&gt;
&lt;table border=&quot;1&quot; class=&quot;docutils&quot;&gt;
&lt;colgroup&gt;
&lt;col width=&quot;38%&quot; /&gt;
&lt;col width=&quot;31%&quot; /&gt;
&lt;col width=&quot;31%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Report&lt;/strong&gt;
&lt;strong&gt;(FAKE)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Report&lt;/strong&gt;
&lt;strong&gt;(REAL)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;strong&gt;Weather&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;BAD&lt;/td&gt;
&lt;td&gt;GOOD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-odd&quot;&gt;&lt;td&gt;&lt;strong&gt;Harvest&lt;/strong&gt;
&lt;strong&gt;(i.e. #&lt;/strong&gt;
&lt;strong&gt;oranges)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;LOW&lt;/td&gt;
&lt;td&gt;HIGH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row-even&quot;&gt;&lt;td&gt;&lt;strong&gt;Prices&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;HIGH&lt;/td&gt;
&lt;td&gt;LOW&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;important-plot-detail-2&quot;&gt;
&lt;h2&gt;Important Plot Detail #2&lt;/h2&gt;
&lt;p&gt;Remember, the Dukes plan to cheat AKA &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Cornering_the_market&quot;&gt;&amp;#8220;corner the market&amp;#8221;&lt;/a&gt;. And as &lt;a class=&quot;reference external&quot; href=&quot;http://www.dangerouslogic.com/trading_places.html&quot;&gt;Chris Carter&lt;/a&gt; says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;The (Duke&amp;#8217;s) agent wants to own as many contracts as possible before the crop report is revealed, since (he thinks) once it is, the price will go up and he can sell at a profit. Trading begins with a price of 102 cents per pound, which translates into $15,300 per contract. Once everyone sees that the Dukes&amp;#8217; agent is trying to corner the market, they all want a piece of it, forcing the price up since more people are buying than selling.&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;I&amp;#8217;ll repeat that last part: when trading opens before the true crop report is revealed &lt;strong&gt;more people are buying than selling.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;important-plot-detail-3&quot;&gt;
&lt;h2&gt;Important Plot Detail #3&lt;/h2&gt;
&lt;p&gt;The &amp;#8220;good guys&amp;#8221; know the truth i.e. that the current buying trend is based on the Duke&amp;#8217;s actions which are based on false information. That brings us to another important point: the &amp;#8220;good guys&amp;#8221; realize an opportunity to &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Short_%28finance%29&quot;&gt;&amp;#8220;sell short&amp;#8221;&lt;/a&gt;. Or as &lt;a class=&quot;reference external&quot; href=&quot;http://www.dangerouslogic.com/trading_places.html&quot;&gt;Chris Carter&lt;/a&gt; puts it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;They are betting they will be able to buy the contracts later at a lower price so they come out making money but not holding any contracts at the end of trading.&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;light-bulb&quot;&gt;
&lt;h2&gt;Light bulb&lt;/h2&gt;
&lt;p&gt;Ding! Ding! Ding! So after all this, here&amp;#8217;s what&amp;#8217;s really happening: &lt;strong&gt;the &amp;#8220;good guys&amp;#8221; successfully carry out a short sale, with the help of the &amp;#8220;bad guys&amp;#8221; who are trying to corner the market but acting on false information&lt;/strong&gt;. Or as &lt;a class=&quot;reference external&quot; href=&quot;http://www.dangerouslogic.com/trading_places.html&quot;&gt;Chris Carter&lt;/a&gt; puts it, after the real crop report is published:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;They (the &amp;#8220;good guys&amp;#8221;) need to buy&amp;#8211;a lot&amp;#8211;to zero their position, and the crowd is more than willing to oblige.&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Finally, the &amp;#8220;good guys&amp;#8221; are able to buy enough to contracts to fulfill the number of &amp;#8220;short&amp;#8221; sales they made. And they are able to purchase them for much less then they made the &amp;#8220;short&amp;#8221; sales for. Profit!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Does it make sense now? If not, let me know in the comments.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Built with Plone, Powered by GitHub Pages</title>
    <id>http://blog.aclark.net/2013/02/23/built-with-plone-powered-by-github-pages/</id>
    <updated>2013-02-23T00:00:00Z</updated>
    <published>2013-02-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/02/23/built-with-plone-powered-by-github-pages/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;built-with-plone-powered-by-github-pages&quot;&gt;

&lt;p&gt;&lt;strong&gt;Is Plone the next great static website generator? Probably not, but it definitely could be.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I am always looking for ways to improve, streamline and otherwise hack my e-life. And this post is about all of the above.
&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/httrack.png&quot;&gt;https://raw.github.com/ACLARKNET/blog/gh-pages/images/httrack.png&lt;/a&gt;
Plone in the cloud&lt;/p&gt;
&lt;p&gt;Plone is still too &amp;#8220;heavy&amp;#8221; to easily run &amp;#8220;in the cloud&amp;#8221; (except via &lt;a class=&quot;reference external&quot; href=&quot;http://ploud.com&quot;&gt;http://ploud.com&lt;/a&gt;, HT), but it&amp;#8217;s getting there. In particular, I find this effort by David Bain very inspiring:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/pigeonflight/stack-python-plone&quot;&gt;https://github.com/pigeonflight/stack-python-plone&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;And based on my experiments and research on Heroku:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/zope2-heroku&quot;&gt;https://github.com/aclark4life/zope2-heroku&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The only &amp;#8220;real&amp;#8221; remaining issue seems to be packaging; we need this PLIP to happen sooner, rather than later:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/ticket/13283&quot;&gt;https://dev.plone.org/ticket/13283&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Cheating&lt;/p&gt;
&lt;p&gt;In the meantime, one way you can cheat is to export the contents of your Plone site with httrack then host the results for free on GitHub Pages (i.e. &amp;#8220;the cloud&amp;#8221;)&lt;/p&gt;
&lt;p&gt;This process if far from perfect [1], but in a pinch it can work. And it recently worked very well for me so I thought I&amp;#8217;d share. See:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com&quot;&gt;https://github.com/ACLARKNET/aclarknet.github.com&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;These links are my website, and GitHub Pages repository respectively. The website was created with Plone (&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/new_style&quot;&gt;https://github.com/ACLARKNET/new_style&lt;/a&gt;) then exported via httrack, then uploaded to GitHub Pages (to the gh-pages branch of any repo except &amp;lt;{org,user}&amp;gt;&amp;gt;.github.com repos).
[1] httrack got &amp;#8220;stuck&amp;#8221; on my &amp;#64;&amp;#64;search links, and I&amp;#8217;ve got a lot of duplicate content now. Fortunately I don&amp;#8217;t mind editing lots and lots of text files.
Conclusion&lt;/p&gt;
&lt;p&gt;In doing this, I was able to turn off my $11/month &amp;#8220;website and IRC server&amp;#8221; which makes the CFO happy. And in a year or so with Plone 5, hopefully I&amp;#8217;ll be able to return to the cloud and edit content &amp;#8220;live&amp;#8221; again.&lt;/p&gt;
&lt;p&gt;What do you think about Plone as a static site generator and/or Plone in the cloud? Let me know in the comments below.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">I Love Checkoutmanager and Dotfiles</title>
    <id>http://blog.aclark.net/2013/02/08/i-love-checkoutmanager-and-dotfiles/</id>
    <updated>2013-02-08T00:00:00Z</updated>
    <published>2013-02-08T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/02/08/i-love-checkoutmanager-and-dotfiles/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;i-love-checkoutmanager-and-dotfiles&quot;&gt;

&lt;p&gt;&lt;strong&gt;An ode to my OS X development workstation setup&lt;/strong&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id11&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am big on setting up my development environment, and enjoying the environment I work in. And I&amp;#8217;m very thankful to the folks who make my life easier, including the authors of:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.ohloh.net/p/python/contributors/summary&quot;&gt;Python&lt;/a&gt;: Python Core Developers&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/dotfiles&quot;&gt;dotfiles&lt;/a&gt;: Jon Bernard&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/checkoutmanager&quot;&gt;checkoutmanager&lt;/a&gt;: Reinout Van Rees&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also love &lt;strong&gt;repetition&lt;/strong&gt;. So picture if you will, a new &lt;strong&gt;Macbook Air or Pro&lt;/strong&gt; ready to serve as my development workstation. I like to perform, and study, the steps required to turn a new laptop in to my development workstation. So here we go. In this article, I will walk through the steps required to turn a new machine in to my developer workstation. Do follow along!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;shell&quot;&gt;
&lt;h2&gt;Shell&lt;/h2&gt;
&lt;p&gt;One of the first things I do on a new system is change my shell to &lt;strong&gt;Zsh&lt;/strong&gt; in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;System&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Preferences&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Groups&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Right&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Advanced&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Options...&lt;/span&gt;&lt;/code&gt;. Don&amp;#8217;t forget to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Click&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;lock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;changes&lt;/span&gt;&lt;/code&gt; first.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/zsh.png&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;zsh&quot;&gt;
&lt;h3&gt;Zsh&lt;/h3&gt;
&lt;p&gt;Why &lt;strong&gt;Zsh&lt;/strong&gt;? One of my favorite features is &lt;strong&gt;shared history between open sessions&lt;/strong&gt;. So I can run a command in one window, and then run the same command from another window by fetching it from the history (with CTRL-R).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;xcode&quot;&gt;
&lt;h2&gt;XCode&lt;/h2&gt;
&lt;p&gt;After I take possession of my new laptop (running &lt;strong&gt;Mountain Lion&lt;/strong&gt;, the newest OS X at the time of this writing), I head to the App Store to download XCode. &lt;a class=&quot;footnote-reference&quot; href=&quot;#id12&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; Among many other things, XCode gives me the GNU C Compiler and allows me to type &amp;#8220;gcc&amp;#8221; in my &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Applications&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Utilities&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Terminal&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/gcc.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id3&quot;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/homebrew.png&quot; /&gt;
&lt;p&gt;Now I need a Python interpreter &lt;a class=&quot;footnote-reference&quot; href=&quot;#id13&quot; id=&quot;id4&quot;&gt;[3]&lt;/a&gt;. For development I use the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/buildout.python&quot;&gt;Collective Python Buildout&lt;/a&gt; but I also enjoy using &lt;a class=&quot;reference external&quot; href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&amp;#8217;s&lt;/a&gt; Python 2.7. I use Homebrew for a variety of other things too (e.g. mobile-shell AKA mosh) so here we go:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;… follow instructions …&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install python
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;git&quot;&gt;
&lt;h2&gt;Git&lt;/h2&gt;
&lt;p&gt;I think OS X (or XCode) includes git, but just in case:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install git
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Which reminds me, don&amp;#8217;t forget that installing the command line utilities in Mountain Lion&amp;#8217;s XCode requires an additional step in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Preferences&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Downloads&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Install&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/command-line-utils.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id5&quot;&gt;
&lt;h2&gt;Dotfiles&lt;/h2&gt;
&lt;p&gt;At this point, I can begin to get serious about turning this new machine in to my developer workstation. And that means: &lt;strong&gt;installing my private ssh key&lt;/strong&gt; so I can check out code without typing a password, of course. Normally this would be tedious, but with git and dotfiles it&amp;#8217;s not so bad. This is what I do from my home directory:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://super_secret_url/dotfiles.git Dotfiles
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I use https which requires a password for the first time only. Then I edit &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Dotfiles/.git/config&lt;/span&gt;&lt;/code&gt; and change the repository URL to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;git&amp;#64;super_secret_url/dotfiles.git&lt;/span&gt;&lt;/code&gt;. So every subsequent pull and push will require no password. And to &amp;#8220;install&amp;#8221; these dotfiles, I do &lt;a class=&quot;footnote-reference&quot; href=&quot;#id16&quot; id=&quot;id6&quot;&gt;[6]&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install dotfiles
$ dotfiles -s --force
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note: the dotfiles command finds my dotfiles in the default directory &amp;#8220;Dotfiles&amp;#8221; and create symbolic links to them.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;distribute-pip&quot;&gt;
&lt;h3&gt;Distribute &amp;amp; Pip&lt;/h3&gt;
&lt;p&gt;Homebrew&amp;#8217;s Python includes pip, but even if it didn&amp;#8217;t:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -O http://python-distribute.org/distribute_setup.py
$ /usr/local/bin/python distribute_setup.py
$ {easy_install, pip install} dotfiles
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In other words, you can always install Distribute &lt;a class=&quot;footnote-reference&quot; href=&quot;#id14&quot; id=&quot;id7&quot;&gt;[4]&lt;/a&gt;. After which you can use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;easy_install&lt;/span&gt;&lt;/code&gt; or &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt;&lt;/code&gt; to install dotfiles. (You can read up on the differences. TL;DR: neither is &amp;#8220;better&amp;#8221; or &amp;#8220;worse&amp;#8221;, it&amp;#8217;s just a question of which tradeoffs you are willing to make. I tend to use pip just because it&amp;#8217;s newer and I like its requirements.txt feature, but easy_install is still very well supported as part of the Distribute project.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id8&quot;&gt;
&lt;h2&gt;Checkoutmanager&lt;/h2&gt;
&lt;p&gt;Now I need some things to develop. Since I work on a bunch of different projects, I need a way to keep track of what should be checked out at any given time. So I do this &lt;a class=&quot;footnote-reference&quot; href=&quot;#id15&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install checkoutmanager
$ checkoutmanager co
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This creates and populates my &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;~/Developer&lt;/span&gt;&lt;/code&gt; directory with code. And it &amp;#8220;just works&amp;#8221; because I keep a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.checkoutmanager.cfg&lt;/span&gt;&lt;/code&gt; in my Dotfiles repository. It currently looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[aclark]
basedir = /Users/aclark/Developer/aclark
checkouts =
    git@github.com:aclark4life/aclark4life.github.com.git resume
    git@github.com:aclark4life/desktops.git
    git@github.com:aclark4life/hireme.git
    git@github.com:aclark4life/projects.git
    git@github.com:aclark4life/reinstall.git
    git@github.com:ACLARKNET/tweets.git
    git@github.com:aclark4life/usesthis.git
vcs = git

[alt]
basedir = /Users/aclark/Developer/alt
checkouts =
    git@github.com:alt-aclark-net/alt-aclark-net.github.com.git
    git@github.com:alt-aclark-net/dexter.git
    git@github.com:alt-aclark-net/headstraight.git
vcs = git

[buildout]
basedir = /Users/aclark/Developer/buildout
checkouts =
    git@github.com:collective/buildout.bootstrap.git
    git@github.com:buildout/buildout.git
    git@github.com:buildout/buildout.github.com.git
vcs = git

[distribute]
basedir = /Users/aclark/Developer
checkouts = ssh://hg@bitbucket.org/tarek/distribute
vcs = hg

[clients]
basedir = /Users/aclark/Developer
checkouts =
; Bunch o client repos
vcs = git

[clients-hg]
basedir = /Users/aclark/Developer
checkouts =
; Bunch o client repos
vcs = hg

[dcpython]
basedir = /Users/aclark/Developer/dcpython
checkouts =
    git@github.com:DCPython/dcpython.github.com.git
    git@github.com:DCPython/pyramid-tutorials.git
vcs = git

[misc]
basedir = /Users/aclark/Developer
checkouts =
    git@github.com:ACLARKNET/aclarknet.github.com.git blog
    git@github.com:ACLARKNET/new_style.git
    git@github.com:aclark4life/binfiles.git
;    git@github.com:aclark4life/pyramid_python_3.git
    git@github.com:aclark4life/vanity.git
    git@github.com:aclark4life/zope2-heroku.git
    git@github.com:aclark4life/zope2_bootstrap.git
    git@github.com:codekoala/django-axes.git
    git@github.com:collective/buildout.python
vcs = git

[pillow]
basedir = /Users/aclark/Developer/pillow
checkouts =
    git@github.com:python-imaging/Pillow.git
    git@github.com:python-imaging/python-imaging.github.com.git
vcs = git

[plethorasociety]
basedir = /Users/aclark/Developer/plethorasociety
checkouts =
    git@github.com:plethorasociety/plethorasociety.github.com.git
vcs = git

[plone]
basedir = /Users/aclark/Developer/plone
checkouts =
    git@github.com:aclark4life/Plone-Debug-Assistant.git
    git@github.com:aclark4life/collective.recipe.bluebream.git
    git@github.com:aclark4life/event_days_indexer.git
    git@github.com:aclark4life/hello_plone.git
    git@github.com:aclark4life/mr_migrator_demo.git
    git@github.com:aclark4life/parse2plone.git
    git@github.com:aclark4life/plone_1_fun.git
    git@github.com:aclark4life/plone_addon_upgrade.git
    git@github.com:aclark4life/plone_guide.git
    git@github.com:aclark4life/plone_workflow_events.git
    git@github.com:aclark4life/schemaextender-facetednav-demo.git
    git@github.com:aclark4life/silly_content_import.git
    git@github.com:aclark4life/transmogrify.extract.git
    git@github.com:aclark4life/transmogrify.regexp.git
    git@github.com:aclark4life/viewlets_dont_suck.git
    git@github.com:aclark4life/wordpress2plone.git
    git@github.com:collective/Products.AttachmentField.git
    git@github.com:collective/Products.CalendarX.git
    git@github.com:collective/Products.EventRegistration.git
    git@github.com:collective/Products.PloneSoftwareCenter.git
    git@github.com:collective/Products.ifQuotes.git
    git@github.com:collective/Products.naked_plone.git
    git@github.com:collective/buildout.plonetest.git
    git@github.com:collective/collective.contacts.git
    git@github.com:collective/collective.controlpanel.edit_css.git
    git@github.com:collective/collective.developermanual.git
    git@github.com:collective/collective.formtoy.git
    git@github.com:collective/collective.github.com.git
    git@github.com:collective/collective.googleanalytics.git
    git@github.com:collective/collective.package.git
    git@github.com:collective/collective.project.git
    git@github.com:collective/collective.recaptcha.git
    git@github.com:collective/collective.recipe.grp.git
    git@github.com:collective/collective.recipe.rsync.git
    git@github.com:collective/collective.rip.git
    git@github.com:collective/collective.stats.git
    git@github.com:collective/funnelweb.git
    git@github.com:collective/github-collective.git
    git@github.com:collective/mr.migrator.git
    git@github.com:collective/plonecom-buildout.git
    git@github.com:collective/plonecom.theme.git
    git@github.com:collective/plonetheme.coolblue.git
    git@github.com:collective/plonetheme.freshpick.git
    git@github.com:collective/plonetheme.grungeera.git
    git@github.com:collective/plonetheme.keepitsimple.git
    git@github.com:collective/plonetheme.unilluminated.git
    git@github.com:collective/transmogrify.filesystem.git
    git@github.com:plone/Installers-OS-X.git
    git@github.com:plone/Products.PloneOrg.git
    git@github.com:plone/admin-docs.git
    git@github.com:plone/buildout.coredev.git
    git@github.com:plone/planet.plone.org.git
    git@github.com:plone/plone.api.git
    git@github.com:plone/plone.github.com.git
    git@github.com:plone/ploneorg.admin.git
    git@github.com:plone/plonetheme.ploneorg.git
vcs = git

[pythonpackages]
basedir = /Users/aclark/Developer/pythonpackages
checkouts =
    git@github.com:aclark4life/buildout-apache-mysql.git
    git@github.com:aclark4life/buildout-munin.git
    git@github.com:aclark4life/buildout-mysql.git
    git@github.com:aclark4life/buildout-nginx.git
    git@github.com:aclark4life/buildout-plone-haproxy.git
    git@github.com:aclark4life/buildout-plone-varnish.git
    git@github.com:aclark4life/buildout-zenoss.git
    git@bitbucket.org:pythonpackages/pythonpackages.com.git vanity_app
    git@github.com:pythonpackages/buildout-apache-modwsgi.git
    git@github.com:pythonpackages/buildout-bluebream.git
    git@github.com:pythonpackages/buildout-django.git
    git@github.com:pythonpackages/buildout-jenkins.git
    git@github.com:pythonpackages/buildout-plone-getpaid.git
    git@github.com:pythonpackages/buildout-plone.git
    git@github.com:pythonpackages/buildout-wordpress.git
    git@github.com:pythonpackages/buildout-zope2.git
    git@github.com:pythonpackages/experimental.pythonpackages.git
    git@github.com:pythonpackages/github-services.git pythonpackages-github-services
    git@github.com:pythonpackages/pyramidpypi.git pythonpackages-index
    git@github.com:pythonpackages/pythonpackages-blog.git
    git@github.com:pythonpackages/pythonpackages-docs.git
    git@github.com:pythonpackages/pythonpackages-graphs.git
    git@github.com:pythonpackages/pythonpackages-paste.git
    git@github.com:pythonpackages/pythonpackages-scaffolds.git
    git@github.com:pythonpackages/pythonpackages.sendpickedversions.git
    git@github.com:pythonpackages/pythonpackages-whiskers.git
    git@github.com:pythonpackages/pythonpackages.git
vcs = git

[toys]
basedir = /Users/aclark/Developer/toys
checkouts =
    git@github.com:aclark4life/basic_pyramid_zodb.git
    git@github.com:aclark4life/github_repos_cloner.git
    git@github.com:aclark4life/other.git
    git@github.com:aclark4life/python_study.git
    git@github.com:aclark4life/django-hello.git
vcs = git
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now it&amp;#8217;s time to bootstrap the Collective Python Buildout, which gives me &lt;strong&gt;all versions of Python, ever&lt;/strong&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id17&quot; id=&quot;id10&quot;&gt;[7]&lt;/a&gt;. And off we go:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cd Developer/buildout.python
$ python bootstrap.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Finally, there is some PATH configuration required to make all of this seemless. The Collective Python Buildout gets installed in /opt while brew&amp;#8217;s stuff is in /usr/local. My PATH config currently looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;export PATH=/usr/local/bin:/usr/local/sbin:/opt/local/bin:/Users/aclark/Developer/buildout.python/python-2.7/bin:$PATH
export PATH=~/Developer/binfiles:/usr/local/share/npm/bin:$PATH
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With the above configuration, I default to the Python 2.7 in the Collective Python Buildout. That means that is the &amp;#8220;python&amp;#8221; or &amp;#8220;virtualenv&amp;#8221; I get when I type those commands. I use the full path or expanded binary name when I need them e.g. /usr/local/bin/python or python3.3.&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it! I hope you will check out dotfiles and checkoutmanager for all your development needs.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id11&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not really an ode: &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Ode&quot;&gt;http://en.wikipedia.org/wiki/Ode&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id12&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I know about Kenneth Reitz&amp;#8217;s XCode Command line Tools only, but if I recall correctly there is some &amp;#8220;gotcha&amp;#8221; that has bitten me more than once if I use that instead of the full XCode. I wish I could remember what it was now, but it&amp;#8217;s not coming to me. If it works for you though, great!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id13&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I know about the system Python, and for small things like checkoutmanager and dotfiles I don&amp;#8217;t mind using it. But there is merit in avoiding it because Apple treats it like &amp;#8220;their&amp;#8221; Python and makes decisions for you that you may prefer to make yourself. E.g. I believe they use a crippled version of the readline library.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id14&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id7&quot;&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Distribute is a more actively maintained fork of the venerable setuptools library (which itself is built on top of the Python standard library&amp;#8217;s distutils). Are we having fun yet?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id15&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id9&quot;&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I also alias checkoutmanager to cm&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id16&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id6&quot;&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I force because I want to replace the newly created .ssh dir with the one I keep in my Dotfiles repository.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id17&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id10&quot;&gt;[7]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Well, 2.4 through 3.3 at last count.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Please Help Me Do Open Source Work</title>
    <id>http://blog.aclark.net/2013/01/31/please-help-me-do-open-source-work/</id>
    <updated>2013-01-31T00:00:00Z</updated>
    <published>2013-01-31T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/31/please-help-me-do-open-source-work/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;please-help-me-do-open-source-work&quot;&gt;

&lt;p&gt;&lt;strong&gt;From my &amp;#8216;mid-life-crisis&amp;#8217; series of blog entries&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/open-source-work.png&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;open-source-work&quot;&gt;
&lt;h2&gt;Open Source Work&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open Source Work&lt;/strong&gt; has paid my bills for a long time. Starting with &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt; in the early 2000s, to &lt;a class=&quot;reference external&quot; href=&quot;http://djangoproject.com&quot;&gt;Django&lt;/a&gt; in the early 2010s, to now. And for this, I am very grateful. To be clear: it&amp;#8217;s not exactly the &lt;em&gt;Open Source Work&lt;/em&gt; that has paid my bills, it&amp;#8217;s the consulting work I&amp;#8217;ve been able to secure as a result of my dedication and devotion to open source software and communities. Which is great! (Even more clear: my dedication and devotion to open source software and communities has made learning new skills fun. And those skills have paid my bills for the past 8 years.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR: Open Source Work is awesome. I&amp;#8217;ll likely spend my entire life doing it (in some capacity or another). And while Open Source Work does not pay, the experience is invaluable.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;saas-offering&quot;&gt;
&lt;h2&gt;SaaS Offering&lt;/h2&gt;
&lt;p&gt;Along the way, I caught the &amp;#8220;startup bug&amp;#8221; and have been interested in building a SaaS offering that would at least pay my bills, if not make me fantastically wealthy. Enter 2012&amp;#8217;s: &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;pythonpackages.com&lt;/a&gt;. The year I spent doing pythonpackages.com work was awesome. I learned a lot. Traveled. Met a lot of cool folks who seemed genuinely interested in my idea(s). But unfortunately, I never made a dime doing it. The lesson, among others, is that &lt;strong&gt;SaaS offerings are hard&lt;/strong&gt;. I am now semi-focused on a &amp;#8220;reboot&amp;#8221; of the pythonpackages.com idea(s), but that&amp;#8217;s going to take a while to get going.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR: Consulting *was* the dream. Now building a SaaS offering *is* the dream (among others). So where does Open Source Work fit in?&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;play-as-work&quot;&gt;
&lt;h2&gt;Play as Work&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;ve been &amp;#8220;working for a living&amp;#8221; since age 14. Back then, I was a busboy and dishwasher in my family&amp;#8217;s Italian restaurant, where I first learned to &lt;strong&gt;work hard and have fun doing it&lt;/strong&gt;. Since then, I&amp;#8217;ve always worked hard, had fun, and taken few vacations (except for 1994-1998 when I was a full time CS student). I suspect I will always &amp;#8220;work for a living&amp;#8221; though as I get older, the line between work and play becomes even blurrier. Everyone wants to love or at least like their work. But very few are able to turn their play in to paid work. That&amp;#8217;s what I want to do. And I am very fortunate, I think, to know what I want to do in life. I know middle aged folk that still don&amp;#8217;t know the answer to that question.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TL;DR: liking my work *was* the dream. Now turning the things I like to do into paid work *is* the dream. In 2013, I would like to spend more time doing Open Source Work, working on projects like&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/buildout&quot;&gt;Buildout&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://dcpython.org&quot;&gt;DC Python&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/python-imaging&quot;&gt;Pillow&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/codekoala/django-axes&quot;&gt;django-axes&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://resume.aclark.net/projects/#collective&quot;&gt;et al&lt;/a&gt;. &lt;strong&gt;If you have benefited from my work on any of these projects, directly or indirectly, please consider making a&lt;/strong&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/aclark4life&quot;&gt;gittip donation&lt;/a&gt; &lt;strong&gt;to help me do more Open Source Work in 2013.&lt;/strong&gt;&lt;/p&gt;
&lt;script data-gittip-username=&quot;aclark4life&quot;
src=&quot;https://www.gittip.com/assets/widgets/0002.js&quot;&gt;
&lt;/script&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Python 3 Porting</title>
    <id>http://blog.aclark.net/2013/01/10/python-3-porting/</id>
    <updated>2013-01-10T00:00:00Z</updated>
    <published>2013-01-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/10/python-3-porting/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;python-3-porting&quot;&gt;

&lt;p&gt;&lt;strong&gt;The 3 in 2013 is for Python 3&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/python-3-port.jpg&quot; /&gt;
&lt;p&gt;I tend to like projects that everyone else &lt;strong&gt;hates&lt;/strong&gt;, e.g.:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Removing persistent Python objects associated with missing classes in ZODB.&lt;/li&gt;
&lt;li&gt;Making new releases for old software that is still useful but unmaintained.&lt;/li&gt;
&lt;li&gt;Running flake8 on 10s or 100s of source files and hand-fixing the results.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Part of this has to do with &lt;strong&gt;repetition&lt;/strong&gt;. I know how to do these things, and I like doing them. Over and over. If someone says, &amp;#8220;my Data.fs file is broken&amp;#8221; I get excited. Anyway, I hope you get the idea.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;i-am-your-man&quot;&gt;
&lt;h2&gt;I am your man&lt;/h2&gt;
&lt;p&gt;Which brings me to the subject of this post: &lt;strong&gt;Python 3 Porting&lt;/strong&gt;. I&amp;#8217;ve been helping out porting the Python Imaging Library to Python 3 (via the Pillow fork, where I am the release manager). And it strikes me as the type of thing I&amp;#8217;d be very interested in doing professionally. So, if you or your company are in need of a &amp;#8220;workhorse&amp;#8221; to plow through old code and update it, &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/team/alex-clark&quot;&gt;I am your man&lt;/a&gt;. Please do &lt;a class=&quot;reference external&quot; href=&quot;mailto:info&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;get in touch&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-s-in-it-for-you&quot;&gt;
&lt;h2&gt;What&amp;#8217;s in it for you&lt;/h2&gt;
&lt;p&gt;Now I know what you are thinking: &lt;strong&gt;porting Python 2 software to Python 3 is a lot of work for little gain&lt;/strong&gt;. Maybe. Maybe not. I&amp;#8217;m not going to try to convince you otherwise, however I will tell you this:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;For me, 2013 is &amp;#8220;the year of Python 3&amp;#8221;. I&amp;#8217;ve now promised to deliver and maintain a &lt;strong&gt;Python 3 compatible PIL by PyCon 2013&lt;/strong&gt;. I now care about Python 3 (this was not true before).&lt;/li&gt;
&lt;li&gt;The Python 3 Wall of Shame is now the &lt;a class=&quot;reference external&quot; href=&quot;https://python3wos.appspot.com/&quot;&gt;Python 3 Wall of Superpowers&lt;/a&gt;. We are over the hump.&lt;/li&gt;
&lt;li&gt;Many popular Python web frameworks support or are about to support Python 3 e.g. CherryPy, Django, Pyramid.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, there is no time like the present to &lt;strong&gt;take a serious look at Python 3&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Pillow Python 3</title>
    <id>http://blog.aclark.net/2013/01/10/pillow-python-3/</id>
    <updated>2013-01-10T00:00:00Z</updated>
    <published>2013-01-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/10/pillow-python-3/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pillow-python-3&quot;&gt;

&lt;p&gt;&lt;strong&gt;PIL is on its way to Python 3 via Pillow.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Support from Brian Crowell and others has been merged into master here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/pull/35&quot;&gt;https://github.com/python-imaging/Pillow/pull/35&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And work continues toward a pre &lt;strong&gt;PyCon 2013&lt;/strong&gt; release! Please help if you can:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Ubuntu users, read through &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/18&quot;&gt;https://github.com/python-imaging/Pillow/issues/18&lt;/a&gt; and provide assistance with testing this Ubuntu package: &lt;a class=&quot;reference external&quot; href=&quot;https://launchpad.net/~pythoneers/+archive/ppa&quot;&gt;https://launchpad.net/~pythoneers/+archive/ppa&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Git experts, please comment on the merge issue described here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/pull/35&quot;&gt;https://github.com/python-imaging/Pillow/pull/35&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Everyone else, please git clone the master branch for testing: &lt;strong&gt;git://github.com/python-imaging/Pillow.git&lt;/strong&gt; and report issues as you find them: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues&quot;&gt;https://github.com/python-imaging/Pillow/issues&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">About My Work</title>
    <id>http://blog.aclark.net/2013/01/10/about-my-work/</id>
    <updated>2013-01-10T00:00:00Z</updated>
    <published>2013-01-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/10/about-my-work/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;about-my-work&quot;&gt;

&lt;p&gt;&lt;strong&gt;Regarding some of the criticism or objection to some of the content of my blog entries, etc.,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are my thoughts:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;i-hear-you&quot;&gt;
&lt;h2&gt;I hear you&lt;/h2&gt;
&lt;p&gt;No one is more critical of my work than me. If you have feedback, criticism, etc. then please do let me know. I consider very carefully every request I receive, and I make every attempt to be cordial and accommodating. The place to do that for &lt;strong&gt;this blog&lt;/strong&gt; is currently:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com/issues&quot;&gt;https://github.com/ACLARKNET/aclarknet.github.com/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or for folks without a GitHub account (i.e. anonymous):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/aclarknet/blog/issues&quot;&gt;https://bitbucket.org/aclarknet/blog/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or just email me:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or add a comment below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;controversial-entries-explained&quot;&gt;
&lt;h2&gt;Controversial Entries Explained&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;d also like to clarify my intentions with regard to two of my most recent and somewhat controversial entries:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Zen of Zope&lt;/li&gt;
&lt;li&gt;Plone Kitty&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are intended to be &lt;em&gt;pro&lt;/em&gt; Zope and &lt;em&gt;pro&lt;/em&gt; Plone. Yes, Zope can be complex. But it&amp;#8217;s also useful. And full of &amp;#8220;been there, done that&amp;#8221; wisdom. Yes, the simple days of Plone Kitty are gone, but there are many great things ahead. Let&amp;#8217;s carry the best of the past forward into the future.&lt;/p&gt;
&lt;p&gt;I don&amp;#8217;t always state my intentions this explicitly: because that is no where near as fun for me. But I don&amp;#8217;t want folks to get the wrong impression either, so please help me get the message right if you can.&lt;/p&gt;
&lt;p&gt;As always, thanks for reading.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Introducing The Plone Kitty</title>
    <id>http://blog.aclark.net/2013/01/09/introducing-the-plone-kitty/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/introducing-the-plone-kitty/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-the-plone-kitty&quot;&gt;

&lt;p&gt;&lt;strong&gt;Actually: re-introducing the Plone Kitty from Plone 1!&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/plone-kitty.png&quot; /&gt;
&lt;p&gt;&lt;em&gt;Plone Kitty&lt;/em&gt; is the name of a theme (then called &amp;#8220;skin&amp;#8221;) that shipped with the earliest versions of &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt; (1.1 in the image above). This was a simpler time when the web was new, and everything was possible!&lt;/p&gt;
&lt;p&gt;Today, we know that the &lt;strong&gt;web is hard&lt;/strong&gt;. While everything is still possible, building the web requires a tremendous amount of hard work. But it doesn&amp;#8217;t have to be all drudgery. There is still quite a bit of fun to be had building the web, if you know where to look (in addition to all the unavoidable hard work).&lt;/p&gt;
&lt;p&gt;Enter: Plone. Both the web and Plone have changed drastically since The Plone Kitty once prowled the internet. And while the Plone Kitty is all but extinct, Plone lives on; continously modernizing itself to keep up with the fast pace of today&amp;#8217;s modern web.&lt;/p&gt;
&lt;p&gt;From the &lt;a class=&quot;reference external&quot; href=&quot;http://plone-1-fun.herokuapp.com&quot;&gt;Plone Kitty website&lt;/a&gt; (now running on Heroku!):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;If you used Plone &amp;quot;back in the day&amp;quot; (early 2000s), please add a comment below about your experiences then. If you are new to Plone or just curious
about it now, please add a comment below about your initial impressions.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So if you&amp;#8217;d like to add &lt;strong&gt;your bit of nostalgia&lt;/strong&gt;, or first impressions of Plone, &lt;a class=&quot;reference external&quot; href=&quot;http://plone-1-fun.herokuapp.com/#disqus&quot;&gt;please do so here&lt;/a&gt;. I appreciate any and all comments.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Hello Plone Again</title>
    <id>http://blog.aclark.net/2013/01/09/hello-plone-again/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/hello-plone-again/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone-again&quot;&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#8217;m back!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Regarding my recent &amp;#8220;Goodbye Plone&amp;#8221; post:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s come to my attention that the style of my departure post, and associated actions, may be perceived poorly. I&amp;#8217;m sorry. This was not my intention, and I apologize if I&amp;#8217;ve upset anyone. The Plone Community deserves the best, so let me see what I can do to address this.&lt;/li&gt;
&lt;li&gt;Several folks have reached out to express their concern about my departure, I appreciate this very much.&lt;/li&gt;
&lt;li&gt;While I stand behind my need to distance myself from such conflicts, I don&amp;#8217;t want to give the Plone Community or the outside world the wrong impression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, let me say this: I&amp;#8217;m thinking about what happened today, and I&amp;#8217;m going to comment about it in the future. I.e. after 24 hours or so. Regardless of future updates, please consider me: &amp;#8220;around in some capacity, but not as fully engaged for personal reasons&amp;#8221;. This is an attempt to revert my abrubt departure, while at the same time not fully re-engaging until such time as I can determine the best course of action. Note that above all, and aside from my personal and professional goals, I don&amp;#8217;t want to be disruptive to the community if I can help it.&lt;/p&gt;
&lt;p&gt;Thanks for reading.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2013/atom.xml">
    <title type="text">Goodbye Plone</title>
    <id>http://blog.aclark.net/2013/01/09/goodbye-plone/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/goodbye-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;goodbye-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;I quit!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After experiencing an unexpectedly negative reaction in #plone to my most recent post &amp;#8220;Introducing The Plone Kitty&amp;#8221; (which was intended to be light-hearted and fun), I have decided to leave the Plone community for good. I wish you all the best! It&amp;#8217;s been fun.&lt;/p&gt;
&lt;p&gt;To be clear: I&amp;#8217;ll still be doing some Plone consulting as part of my &amp;#8220;day job&amp;#8221; at ACLARK.NET, LLC. But I won&amp;#8217;t be participating in any community events because it has become clear to me that my vision for Plone, and the Plone Community, may be inconsistent with the vision held by other members of the core team.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
