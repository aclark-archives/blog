<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Alex Clark's Blog - Posts in Django</title>
  <id>http://blog.aclark.net/blog/category/django/atom.xml</id>
  <updated>2016-02-21T00:00:00Z</updated>
  <link href="http://blog.aclark.net" />
  <link href="http://blog.aclark.net/blog/category/django/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.3">ABlog</generator>
  <entry xml:base="http://blog.aclark.net/blog/category/django/atom.xml">
    <title type="text">Updated Django Website</title>
    <id>http://blog.aclark.net/2016/02/21/updated-django-website/</id>
    <updated>2016-02-21T00:00:00Z</updated>
    <published>2016-02-21T00:00:00Z</published>
    <link href="http://blog.aclark.net/2016/02/21/updated-django-website/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;updated-django-website&quot;&gt;

&lt;p&gt;&lt;strong&gt;One year later&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;../../../_images/aclarknet-website.png&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/aclarknet-website.png&quot; /&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Last year I wrote about developing our company website with Django:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2015/01/11/new-django-website/index.html&quot;&gt;http://blog.aclark.net/2015/01/11/new-django-website/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This year, I updated the site and am again very happy with the results. Here&amp;#8217;s an overview of the interesting aspects.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;makefile&quot;&gt;
&lt;h2&gt;Makefile&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;ve continued to develop Python projects using a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Makefile&lt;/span&gt;&lt;/code&gt;. So much so I&amp;#8217;m now attempting to genericize the approach here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/python-project&quot;&gt;https://github.com/aclark4life/python-project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;project-app&quot;&gt;
&lt;h2&gt;Project/App&lt;/h2&gt;
&lt;p&gt;Last year around this time I didn&amp;#8217;t fully understand what I was doing with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;startproject&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;startapp&lt;/span&gt;&lt;/code&gt; (as evidenced by &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-django/tree/master/aclarknet/aclarknet/aclarknet&quot;&gt;this insanely nested package structure&lt;/a&gt;). Now I understand a little bit more, so I settled on a project called &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;aclarknet&lt;/span&gt;&lt;/code&gt; and an app called &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;website&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;rest-powered&quot;&gt;
&lt;h2&gt;REST-powered&lt;/h2&gt;
&lt;p&gt;I haven&amp;#8217;t written about it yet, but I spent a lot of time in December developing a &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-database&quot;&gt;time tracking and invoicing application&lt;/a&gt; (more on that later). As such, I couldn&amp;#8217;t tolerate storing identical data in multiple locations. So &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-database/blob/master/aclarknet/database/serializers.py&quot;&gt;exposed the data I needed&lt;/a&gt; via Django Rest Framework &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-website/blob/master/aclarknet/website/views.py#L37&quot;&gt;then consumed it with requests&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;other-nice-features&quot;&gt;
&lt;h2&gt;Other nice features&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Django 1.9.2&lt;/li&gt;
&lt;li&gt;Bootstrap 3.3.6&lt;/li&gt;
&lt;li&gt;Logo created with Illustrator (IANAGA, but it was &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-logo&quot;&gt;fun to try&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy the &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;site&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-website&quot;&gt;code&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/contact&quot;&gt;hire my business&lt;/a&gt; in 2016!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/django/atom.xml">
    <title type="text">New Django Website</title>
    <id>http://blog.aclark.net/2015/01/11/new-django-website/</id>
    <updated>2015-01-11T00:00:00Z</updated>
    <published>2015-01-11T00:00:00Z</published>
    <link href="http://blog.aclark.net/2015/01/11/new-django-website/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-django-website&quot;&gt;

&lt;p&gt;&lt;strong&gt;After a series of Django gigs in 2014, I had the urge to redevelop our company website in Django; I am very happy with the results.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This overview is roughly in order of development from start to finish. And since I am a &amp;#8220;packaging guy&amp;#8221;, I will take this opportunity to comment on miscellaneous packaging issues too*.&lt;/p&gt;
&lt;img alt=&quot;Website front page&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/aclarknet-django.png&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;same-theme-different-backend&quot;&gt;
&lt;h2&gt;Same theme, different backend&lt;/h2&gt;
&lt;p&gt;The Pyramid version of aclark.net was almost two years old and needed an overhaul. Django appeared attractive because:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I know Django, but I don&amp;#8217;t know enough Django. Like with Pyramid and Plone before, I learned a lot of Django while developing this site over the last few weeks.&lt;/li&gt;
&lt;li&gt;There was no &amp;#8220;content&amp;#8221; with the previous (Pyramid) site. The idea of putting my &amp;#8220;content&amp;#8221; in Django models was appealing to me.&lt;/li&gt;
&lt;li&gt;The new &lt;a class=&quot;reference external&quot; href=&quot;https://djangoproject.com&quot;&gt;Django project&lt;/a&gt; website is awesome! An awesome website makes me want to build another awesome website with an awesome web framework. Awesome.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;i-hate-code-generators&quot;&gt;
&lt;h2&gt;I hate code generators&lt;/h2&gt;
&lt;p&gt;I typically hate using code generators, full stop. But somehow Django&amp;#8217;s &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;startproject&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;startapp&lt;/span&gt;&lt;/code&gt; don&amp;#8217;t make me want to vomit. So I used them in an organic &lt;a class=&quot;footnote-reference&quot; href=&quot;#id7&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; way, to make some &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-django/tree/master/aclarknet/aclarknet/aclarknet&quot;&gt;obnoxiously long package names&lt;/a&gt;, and I &lt;em&gt;miraculously&lt;/em&gt; don&amp;#8217;t hate the results! This can only mean:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I am more tolerant of boilerplate code when learning a new framework, and/or:&lt;/li&gt;
&lt;li&gt;The process of creating the boilerplate code and the resulting boilerplate are so elegant/minimalistic that my insatiable desire for elegance/minimalism is at least partially satisified.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;no-postgres-no-problem&quot;&gt;
&lt;h2&gt;No Postgres? No problem&lt;/h2&gt;
&lt;p&gt;The idea of having to develop locally with Postgresql (or some other &amp;#8220;real&amp;#8221; database) feels &amp;#8220;heavy&amp;#8221; to me. With sqlite, I don&amp;#8217;t have to worry about database setup until I&amp;#8217;m ready to worry about database setup &lt;a class=&quot;footnote-reference&quot; href=&quot;#id8&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I even pushed to Heroku with the sqlite database checked in, until I was ready to deploy Postgres. And I still use sqlite locally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bootstrap-all-the-things&quot;&gt;
&lt;h2&gt;Bootstrap all the things&lt;/h2&gt;
&lt;p&gt;Sure Bootstrap is ubiquitious now, but it remains attractive nonetheless. One of the first tasks I performed was add &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-admin-bootstrapped&lt;/span&gt;&lt;/code&gt; to my &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;INSTALLED_APPS&lt;/span&gt;&lt;/code&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id9&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And because it&amp;#8217;s 2015, I Bower-installed Bootstrap and Fontawesome for my theme development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;make-like-a-tree-and-file&quot;&gt;
&lt;h2&gt;Make like a tree and file&lt;/h2&gt;
&lt;p&gt;Lately I&amp;#8217;ve gotten into the habit of using good-ol&amp;#8217; Make to automate various tasks &lt;a class=&quot;footnote-reference&quot; href=&quot;#id10&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;. This project was no exception:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dump:
    curl -o latest.dump `heroku pgbackups:url`
push:
    git push
    git push heroku master
sync:
    heroku run python aclarknet/manage.py syncdb
publish:
    git commit -a -m &amp;quot;Update&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-ons-apps-eggs-distributions-packages-products-wheels&quot;&gt;
&lt;h2&gt;Add-ons, Apps, Eggs, Distributions, Packages, Products, Wheels&lt;/h2&gt;
&lt;p&gt;I am &lt;em&gt;literally&lt;/em&gt; annoyed by the &lt;em&gt;figurative&lt;/em&gt; abomination that is Python packaging terminology. The proliferation of terms is understandable though because of the many layers of &lt;em&gt;technology&lt;/em&gt;, each with its own &lt;em&gt;terminology&lt;/em&gt;, that may or may not overlap:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The Python language&lt;/li&gt;
&lt;li&gt;Various packaging frameworks&lt;/li&gt;
&lt;li&gt;Software written in Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And all of that was just so I could tell you I pip-installed the following:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Django
Pillow
django-admin-bootstrapped
django-cumulus
dj-database-url
dj-static
gunicorn
psycopg2
-e aclarknet
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout-conda-easy-install-pip&quot;&gt;
&lt;h2&gt;Buildout, Conda, easy_install, pip&lt;/h2&gt;
&lt;p&gt;On a related subject, why do I have a &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-django/blob/master/aclarknet/setup.py&quot;&gt;setup.py&lt;/a&gt;? I get the feeling that Django projects in the wild sometimes have one and sometimes don&amp;#8217;t. And the Django documentation &lt;a class=&quot;reference external&quot; href=&quot;https://docs.djangoproject.com/search/?q=setup+py&amp;amp;release=11&quot;&gt;has only a few mentions of setup.py&lt;/a&gt;. So why do I have one?&lt;/p&gt;
&lt;p&gt;In short, because I want my code in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;sys.path&lt;/span&gt;&lt;/code&gt;. I have another feeling that when Django projects/apps/etc don&amp;#8217;t have setup.py files, they are somehow manipulating sys.path manually to include themselves. There is &lt;a class=&quot;reference external&quot; href=&quot;https://docs.djangoproject.com/search/?q=sys+path&amp;amp;release=11&quot;&gt;slightly more mentioning of sys.path&lt;/a&gt; in Django&amp;#8217;s documentation, at least.&lt;/p&gt;
&lt;p&gt;Anyway, I use setup.py because I&amp;#8217;m familiar with setuptools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;contact-form&quot;&gt;
&lt;h2&gt;Contact Form&lt;/h2&gt;
&lt;p&gt;Enough packaging rants, back to the rest of the Django story.&lt;/p&gt;
&lt;p&gt;Every business website needs a contact form, right? And contact forms are tedious and boring to create, right? Yes and yes. That&amp;#8217;s why I thought using &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-contact-form&lt;/span&gt;&lt;/code&gt; would be a good idea. Unfortunately I ran into an issue I couldn&amp;#8217;t easily work around, so I gave up and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet-django/blob/master/aclarknet/aclarknet/aclarknet/views.py#L32&quot;&gt;made my own&lt;/a&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;orm-i-really-on-my-own&quot;&gt;
&lt;h2&gt;ORM I really on my own?&lt;/h2&gt;
&lt;a class=&quot;reference external image-reference&quot; href=&quot;https://twitter.com/aclark4life/status/552626214008274944&quot;&gt;&lt;img alt=&quot;Tweet&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/aclark-tweet.png&quot; /&gt;&lt;/a&gt;
&lt;p&gt;That&amp;#8217;s right. After adding an &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ImageField&lt;/span&gt;&lt;/code&gt; I expected the image to be stored in the database and not the file system, and I&amp;#8217;m not ashamed. Since that was not the case, I ended up using &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-cumulus&lt;/span&gt;&lt;/code&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id12&quot; id=&quot;id6&quot;&gt;[6]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;overall&quot;&gt;
&lt;h2&gt;Overall&lt;/h2&gt;
&lt;p&gt;Overall, this was a great experience. As such, I&amp;#8217;m now considering another &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;pythonpackages.com&lt;/a&gt; reboot with Django; to further exercise my Django chops and fullfill the packaging-automation-vision I&amp;#8217;ve had since late 2011.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please let me know your reaction to my experiences in the comments.&lt;/em&gt;&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id7&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-admin&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;startproject&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;aclarknet;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;aclarknet/aclarknet;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;django-admin&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;startapp&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;aclarknet&lt;/span&gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id8&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Granted, the perceived heaviness is much worse than the &lt;em&gt;actual&lt;/em&gt; burden of &amp;#8220;real&amp;#8221; database setup which is admittedly fairly trivial: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;postgres&lt;/span&gt;&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id9&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The Django admin without Bootstrap reminds me of the ZMI without Bootstrap, which &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/zope2_bootstrap&quot;&gt;I also don&amp;#8217;t like&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id10&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Embarrassingly, I create the tabs with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;s/&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class=&quot;pre&quot;&gt;/\t/&lt;/span&gt;&lt;/code&gt; because my tabstop is set to 4 spaces. Maybe I should be change my tabstop setting each time?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id11&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id5&quot;&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Something to do with Sendgrid integration, certainly not django-contact-form&amp;#8217;s fault!&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id12&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id6&quot;&gt;[6]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Which is another story. First I tried &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-storages&lt;/span&gt;&lt;/code&gt; only to discover Rackspace Cloud Files support moved to cumulus (or started in cumulus and moved back?) Then &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;django-cumulus&lt;/span&gt;&lt;/code&gt; &lt;em&gt;almost&lt;/em&gt; worked but not quite. Rackspace Cloud Files returned a URL but upload failed. So I manually uploaded all the files to Rackspace Cloud Files as a workaround.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/django/atom.xml">
    <title type="text">Django Hello</title>
    <id>http://blog.aclark.net/2012/10/23/django-hello/</id>
    <updated>2012-10-23T00:00:00Z</updated>
    <published>2012-10-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/23/django-hello/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;django-hello&quot;&gt;

&lt;p&gt;&lt;strong&gt;Django doesn&amp;#8217;t really need a hello world style introduction, its documentation speaks for itself.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;But this is what &amp;#8220;Hello, world!&amp;#8221; in Django looks like to me. I hate boilerplate and I love reducing software down to its core components; just enough to start the server.&lt;/p&gt;
&lt;p&gt;setup.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;requirements.txt:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Django==1.4.1
-e .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;settings.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ROOT_URLCONF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;urls.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf.urls&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;r&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello.views.index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;views.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Based on https://docs.djangoproject.com/en/1.4/topics/http/views/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This function takes a Django request object and returns a &amp;#39;Hello World&amp;#39;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    style response, by wrapping some HTML in a Django response object.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;It is now &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;installation&quot;&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone this-repo
$ cd this-repo
$ virtualenv .
$ bin/pip install -r requirements.txt
$ bin/django-admin.py runserver --settings=hello.settings
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;The above code can be found here:&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/django-hello&quot;&gt;https://github.com/aclark4life/django-hello&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Consider a&lt;/em&gt;&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
        src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
        width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&amp;lt;3&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/django/atom.xml">
    <title type="text">Hello, Django</title>
    <id>http://blog.aclark.net/2012/10/15/django-test/</id>
    <updated>2012-10-15T00:00:00Z</updated>
    <published>2012-10-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/15/django-test/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-django&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a test post to create a Django tag feed.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;test-post&quot;&gt;
&lt;h2&gt;Test post&lt;/h2&gt;
&lt;p&gt;Hello, Django planet!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/django/atom.xml">
    <title type="text">New Vanity Release</title>
    <id>http://blog.aclark.net/2012/01/30/new-vanity-release/</id>
    <updated>2012-01-30T00:00:00Z</updated>
    <published>2012-01-30T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/01/30/new-vanity-release/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-vanity-release&quot;&gt;

&lt;p&gt;&lt;strong&gt;This release features the ability to display per package download statistics.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With all the Python &lt;a class=&quot;reference external&quot; href=&quot;http://crate.io/&quot;&gt;stats&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://python3wos.appspot.com/&quot;&gt;goodness&lt;/a&gt; going on recently, I got inspired to make a new &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/info/vanity&quot;&gt;vanity&lt;/a&gt; release. This release features the ability to display per package download statistics via the `-v` or `&amp;#8211;verbose` command line argument.&lt;/p&gt;
&lt;p&gt;Here are some of my favorite results.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;vanity&quot;&gt;
&lt;h2&gt;Vanity&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity vanity -v
     vanity-1.0.zip     2011-04-14      352
   vanity-1.1.0.zip     2011-10-26      139
   vanity-1.1.1.zip     2011-10-28      114
   vanity-1.1.2.zip     2011-10-28      145
vanity-1.2.0.tar.gz     2012-01-30        0
-------------------------------------------
Package `vanity` has been downloaded 750 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;django&quot;&gt;
&lt;h2&gt;Django&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity django -v
Django-1.1.3.tar.gz     2010-12-23    2,618
Django-1.1.4.tar.gz     2011-02-09    4,476
  Django-1.2.tar.gz     2010-05-17   15,876
Django-1.2.1.tar.gz     2010-05-24   65,120
Django-1.2.2.tar.gz     2010-09-09    2,467
Django-1.2.3.tar.gz     2010-09-11   73,984
Django-1.2.4.tar.gz     2010-12-23   49,904
Django-1.2.5.tar.gz     2011-02-09   63,977
Django-1.2.6.tar.gz     2011-09-10      427
Django-1.2.7.tar.gz     2011-09-11    6,825
  Django-1.3.tar.gz     2011-03-23  238,504
Django-1.3.1.tar.gz     2011-09-10  176,054
-------------------------------------------
Package `Django` has been downloaded 700,232 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone&quot;&gt;
&lt;h2&gt;Plone&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity plone -v
     Plone-3.2.zip     2008-12-31    1,690
   Plone-3.2.1.zip     2009-02-04    2,466
   Plone-3.2.2.zip     2009-03-03    4,893
   Plone-3.2.3.zip     2009-06-20    2,731
   Plone-3.2a1.zip     2008-10-10      976
  Plone-3.2rc1.zip     2008-12-15      758
     Plone-3.3.zip     2009-08-19    4,611
   Plone-3.3.1.zip     2009-09-09    4,148
Plone-3.3.2.tar.gz     2009-11-03    3,043
   Plone-3.3.3.zip     2009-12-08    1,733
   Plone-3.3.4.zip     2010-01-14    4,906
   Plone-3.3.5.zip     2010-03-03   12,131
Plone-3.3.6.tar.gz     2011-07-19      787
   Plone-3.3b1.zip     2009-03-12      940
  Plone-3.3rc1.zip     2009-03-30      743
  Plone-3.3rc2.zip     2009-04-05    1,822
  Plone-3.3rc3.zip     2009-05-23    2,036
  Plone-3.3rc4.zip     2009-07-07    2,163
  Plone-3.3rc5.zip     2009-08-01    1,211
     Plone-4.0.zip     2010-08-30    3,659
   Plone-4.0.1.zip     2010-10-04    4,224
   Plone-4.0.2.zip     2010-11-22    4,022
   Plone-4.0.3.zip     2011-01-21    3,339
   Plone-4.0.4.zip     2011-03-01    2,711
   Plone-4.0.5.zip     2011-04-09    3,152
   Plone-4.0.6.zip     2011-05-22    1,469
   Plone-4.0.7.zip     2011-06-06    2,192
   Plone-4.0.8.zip     2011-07-17      509
   Plone-4.0.9.zip     2011-07-29      958
  Plone-4.0.10.zip     2011-10-12      495
   Plone-4.0a1.zip     2009-11-19      946
   Plone-4.0a2.zip     2009-12-04      921
   Plone-4.0a3.zip     2009-12-21    1,272
   Plone-4.0a4.zip     2010-02-01    1,121
   Plone-4.0a5.zip     2010-02-19      850
   Plone-4.0b1.zip     2010-03-09    1,308
   Plone-4.0b2.zip     2010-04-10    1,028
   Plone-4.0b3.zip     2010-05-04    1,722
   Plone-4.0b4.zip     2010-06-13    1,642
Plone-4.0b5.tar.gz     2010-07-08    1,995
  Plone-4.0rc1.zip     2010-08-06    1,598
     Plone-4.1.zip     2011-07-17    4,479
Plone-4.1.1.tar.gz     2011-09-21      429
Plone-4.1.2.tar.gz     2011-10-08    2,187
Plone-4.1.3.tar.gz     2011-11-29    1,883
   Plone-4.1a1.zip     2011-01-21      699
   Plone-4.1a2.zip     2011-02-11      451
   Plone-4.1a3.zip     2011-02-15      680
   Plone-4.1b1.zip     2011-03-08      958
   Plone-4.1b2.zip     2011-04-09    1,040
  Plone-4.1rc2.zip     2011-05-22      797
  Plone-4.1rc3.zip     2011-06-06    1,329
   Plone-4.2a1.zip     2011-08-10      521
   Plone-4.2a2.zip     2011-09-16      884
Plone-4.2b1.tar.gz     2011-12-06      619
------------------------------------------
Package `Plone` has been downloaded 111,877 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pyramid&quot;&gt;
&lt;h2&gt;Pyramid&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity pyramid -v
   pyramid-1.0.tar.gz     2011-01-31   24,055
 pyramid-1.0.1.tar.gz     2011-08-13      460
 pyramid-1.0.2.tar.gz     2011-12-15      185
 pyramid-1.0a1.tar.gz     2010-11-05    1,128
 pyramid-1.0a2.tar.gz     2010-11-09      952
 pyramid-1.0a3.tar.gz     2010-11-16      803
 pyramid-1.0a4.tar.gz     2010-11-21    1,732
 pyramid-1.0a5.tar.gz     2010-12-15      639
 pyramid-1.0a6.tar.gz     2010-12-16      834
 pyramid-1.0a7.tar.gz     2010-12-20      912
 pyramid-1.0a8.tar.gz     2010-12-27    1,233
 pyramid-1.0a9.tar.gz     2011-01-08    1,313
pyramid-1.0a10.tar.gz     2011-01-18      960
 pyramid-1.0b1.tar.gz     2011-01-22      871
 pyramid-1.0b2.tar.gz     2011-01-25    1,003
 pyramid-1.0b3.tar.gz     2011-01-28      816
   pyramid-1.1.tar.gz     2011-07-22    5,674
 pyramid-1.1.1.tar.gz     2011-08-13    1,057
 pyramid-1.1.2.tar.gz     2011-08-17    1,560
 pyramid-1.1.3.tar.gz     2011-12-15      160
 pyramid-1.1a1.tar.gz     2011-06-20    1,146
 pyramid-1.1a2.tar.gz     2011-06-23    1,003
 pyramid-1.1a3.tar.gz     2011-06-26    1,252
 pyramid-1.1a4.tar.gz     2011-07-01    1,517
 pyramid-1.1b1.tar.gz     2011-07-10      981
 pyramid-1.1b2.tar.gz     2011-07-13      844
 pyramid-1.1b3.tar.gz     2011-07-15      742
 pyramid-1.1b4.tar.gz     2011-07-18    1,094
   pyramid-1.2.tar.gz     2011-09-13    6,450
 pyramid-1.2.1.tar.gz     2011-09-28   10,357
 pyramid-1.2.2.tar.gz     2011-11-20      322
 pyramid-1.2.3.tar.gz     2011-11-21    3,078
 pyramid-1.2.4.tar.gz     2011-12-06    1,193
 pyramid-1.2.5.tar.gz     2011-12-15      555
 pyramid-1.2.6.tar.gz     2012-01-05      514
 pyramid-1.2.7.tar.gz     2012-01-20      472
 pyramid-1.2a1.tar.gz     2011-08-24      907
 pyramid-1.2a2.tar.gz     2011-08-27      696
 pyramid-1.2a3.tar.gz     2011-08-29    3,268
 pyramid-1.2a4.tar.gz     2011-09-02      593
 pyramid-1.2a5.tar.gz     2011-09-04      840
 pyramid-1.2a6.tar.gz     2011-09-07      602
 pyramid-1.2b1.tar.gz     2011-09-08      493
 pyramid-1.2b2.tar.gz     2011-09-08      700
 pyramid-1.2b3.tar.gz     2011-09-11      674
 pyramid-1.3a1.tar.gz     2011-12-09    1,264
 pyramid-1.3a2.tar.gz     2011-12-14    1,641
 pyramid-1.3a3.tar.gz     2011-12-21    2,716
 pyramid-1.3a4.tar.gz     2012-01-05      675
 pyramid-1.3a5.tar.gz     2012-01-09    2,369
 pyramid-1.3a6.tar.gz     2012-01-20    1,917
---------------------------------------------
Package `pyramid` has been downloaded 97,222 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enjoy the new release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
