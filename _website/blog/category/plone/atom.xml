<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Alex Clark's Blog - Posts in Plone</title>
  <id>http://blog.aclark.net/blog/category/plone/atom.xml</id>
  <updated>2015-10-10T00:00:00Z</updated>
  <link href="http://blog.aclark.net" />
  <link href="http://blog.aclark.net/blog/category/plone/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.3">ABlog</generator>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plock 0-5-0 is out</title>
    <id>http://blog.aclark.net/2015/10/10/plock-0-5-0-is-out/</id>
    <updated>2015-10-10T00:00:00Z</updated>
    <published>2015-10-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2015/10/10/plock-0-5-0-is-out/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plock-0-5-0-is-out&quot;&gt;

&lt;p&gt;&lt;strong&gt;Pip installs Plock. Plock installs Plone.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Plock installer for Plone has been &lt;strong&gt;updated to support Plone 5&lt;/strong&gt;. To try Plone 5, just cut &amp;amp; paste:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install plock
mkdir plone
plock plone
plone/bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then open &lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080&quot;&gt;localhost&lt;/a&gt;:&lt;/p&gt;
&lt;img alt=&quot;Welcome to Plone&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;http://blog.aclark.net/images/plock-0-5-0.png&quot; /&gt;
&lt;img alt=&quot;Welcome to Plone&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-0-5-0.png&quot; /&gt;
&lt;p&gt;Report issues &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/plock/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone on Heroku</title>
    <id>http://blog.aclark.net/2015/06/27/plone-on-heroku/</id>
    <updated>2015-06-27T00:00:00Z</updated>
    <published>2015-06-27T00:00:00Z</published>
    <link href="http://blog.aclark.net/2015/06/27/plone-on-heroku/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-on-heroku&quot;&gt;

&lt;p&gt;&lt;strong&gt;Dear Plone, welcome to 2015&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Picture it. The year was 2014. I was incredibly moved and inspired by this blog entry:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.niteoweb.com/blog/dear-plone-welcome-to-2014&quot;&gt;http://www.niteoweb.com/blog/dear-plone-welcome-to-2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Someone had finally done it. (&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/zupo&quot;&gt;zupo&lt;/a&gt; in this case, kudos!) Someone had finally beat me to implementing the dream of &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;heroku&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plone&lt;/span&gt;&lt;/code&gt;. And I could not have been happier.&lt;/p&gt;
&lt;p&gt;But something nagging would not let go: I still &lt;strong&gt;didn&amp;#8217;t fully understand how the buildpack worked&lt;/strong&gt;. Today I&amp;#8217;m happy to say: that nag is gone and I now fully understand how Heroku buildpacks work… thanks to…&amp;nbsp;wait for it… a &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/buildpack/blob/master/bin/compile&quot;&gt;Buildpack for Plock&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;plock-buildpack&quot;&gt;
&lt;h2&gt;Plock Buildpack&lt;/h2&gt;
&lt;p&gt;There&amp;#8217;s a lot of the same things going on in both the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/heroku-buildpack-plone&quot;&gt;Plone Buildpack&lt;/a&gt; and the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/buildpack/blob/master/bin/compile&quot;&gt;Plock Buildpack&lt;/a&gt;, with some exceptions.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;experimental&quot;&gt;
&lt;h3&gt;Experimental&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Plock buildpack is highly experimental, still in development and possibly innovative&lt;/strong&gt;. Here&amp;#8217;s what it currently does:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Configures Python user site directory in Heroku cache&lt;/li&gt;
&lt;li&gt;Installs setuptools in user site&lt;/li&gt;
&lt;li&gt;Installs pip in user site&lt;/li&gt;
&lt;li&gt;Installs Buildout in user site&lt;/li&gt;
&lt;li&gt;Installs Plone in cache&lt;/li&gt;
&lt;li&gt;Copies cache to build directory&lt;/li&gt;
&lt;li&gt;Installs a portion of &amp;#8220;user Plone&amp;#8221; (the Heroku app&amp;#8217;s buildout.cfg) in the build directory (not the cache)&lt;/li&gt;
&lt;li&gt;Relies on the app to install the remainder (the Heroku app&amp;#8217;s heroku.cfg). &lt;strong&gt;Most importantly the app runs Buildout which finishes quickly thanks to the cache &amp;amp; configures the port which is only available to the app (not the buildpack.)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here&amp;#8217;s &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/plone-demo&quot;&gt;an example&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# buildout.cfg
[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[user]
packages = collective.loremipsum
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# heroku.cfg
[buildout]
extends = buildout.cfg

[plone]
http-address = ${env:PORT}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Procfile
web: buildout -c heroku.cfg; plone console
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;opinionated&quot;&gt;
&lt;h3&gt;Opinionated&lt;/h3&gt;
&lt;p&gt;The Plock Buildpack is built on Plock, an &amp;#8220;opinionated&amp;#8221; installer for Plone. It may eventually use &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/plock/0.4.0&quot;&gt;Plock&lt;/a&gt; itself, but currently only uses &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;Plock Pins&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Add-On Development For Command-Line Savvy Developers</title>
    <id>http://blog.aclark.net/2015/06/01/plone-add-on-development-for-command-line-savvy-developers/</id>
    <updated>2015-06-01T00:00:00Z</updated>
    <published>2015-06-01T00:00:00Z</published>
    <link href="http://blog.aclark.net/2015/06/01/plone-add-on-development-for-command-line-savvy-developers/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-add-on-development-for-command-line-savvy-developers&quot;&gt;

&lt;p&gt;&lt;strong&gt;With Plone 5 heating up, it&amp;#8217;s time for me to go all-in again on Plone.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With Plone 5 heating up, it&amp;#8217;s time for me to go all-in again on Plone. To that end, here&amp;#8217;s a new tutorial for &lt;strong&gt;command-line savvy developers who may be totally unfamiliar with Python but want to learn Plone&lt;/strong&gt;. This time, in the form of an embedded Gist:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/aclark4life/ffcea3a79b6339591c24.js&quot;&gt;&lt;/script&gt;&lt;p&gt;Check out the results here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/Plone-Add-On-Development-For-Command-Line-Savvy-Developers&quot;&gt;https://github.com/aclark4life/Plone-Add-On-Development-For-Command-Line-Savvy-Developers&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plock Rocks</title>
    <id>http://blog.aclark.net/2015/04/26/plock-rocks/</id>
    <updated>2015-04-26T00:00:00Z</updated>
    <published>2015-04-26T00:00:00Z</published>
    <link href="http://blog.aclark.net/2015/04/26/plock-rocks/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plock-rocks&quot;&gt;

&lt;p&gt;&lt;strong&gt;Pip installs Plock. Plock installs Plone.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;Plock Meme&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-meme.png&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;understanding-plock&quot;&gt;
&lt;h2&gt;Understanding Plock&lt;/h2&gt;
&lt;p&gt;To understand Plock, you must understand:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The undisputed complexity of the Plone stack &lt;a class=&quot;footnote-reference&quot; href=&quot;#id15&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;My desire to simplify, clarify and reduce-to-bare-elements everything I touch.&lt;/li&gt;
&lt;li&gt;My willingness to mask complexity when eliminating it is not possible, despite the risk of contributing to it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pyramid author Chris McDonough &lt;a class=&quot;footnote-reference&quot; href=&quot;#id16&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; once made a comment a long time ago to the effect: &amp;#8220;Let&amp;#8217;s stop piling more crap on top of Plone&amp;#8221; and that sentiment still resonates today. That&amp;#8217;s why even though I love small and useful tools like Plock, it pains me to know what Plock is doing &amp;#8220;under the hood&amp;#8221; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id20&quot; id=&quot;id3&quot;&gt;[7]&lt;/a&gt;. Nevertheless, I felt compelled to write it because not having it is worse.&lt;/p&gt;
&lt;p&gt;Before I tell you what Plock is &lt;a class=&quot;footnote-reference&quot; href=&quot;#id21&quot; id=&quot;id4&quot;&gt;[8]&lt;/a&gt;, let me briefly describe what Plone is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-plone-really&quot;&gt;
&lt;h2&gt;What is Plone, really?&lt;/h2&gt;
&lt;p&gt;What is the complexity I mention above? Briefly, with as few loaded statements as possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;&lt;strong&gt;Zope2&lt;/strong&gt; &amp;#8220;application server&amp;#8221;. This is something you can &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt;&lt;/code&gt; but the results will not be usable &lt;a class=&quot;footnote-reference&quot; href=&quot;#id17&quot; id=&quot;id5&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;&lt;strong&gt;Zope2 add-ons&lt;/strong&gt; AKA &amp;#8220;products&amp;#8221;, most notably the Zope2 Content Management Framework (CMF). This is something you install on top of Zope2 (conceptually but not literally, &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Products.CMFCore&lt;/span&gt;&lt;/code&gt;) that provides typical content management features e.g. personalization, workflow, cataloging, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;&lt;strong&gt;Zope3&lt;/strong&gt; technologies e.g. the Zope Component Architecture (ZCA). These are things that are included-or-integrated with Zope2 and Plone. &lt;a class=&quot;footnote-reference&quot; href=&quot;#id18&quot; id=&quot;id6&quot;&gt;[4]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;&lt;strong&gt;Buildout&lt;/strong&gt; technologies e.g. setuptools, console scripts, recipes, extensions, etc. You can&amp;#8217;t easily build Plone without them, so we may as well declare them as dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;&lt;strong&gt;Plone&lt;/strong&gt; technologies. Plone was originally known as a &amp;#8220;skin for CMF&amp;#8221; but has become much more than that.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Archetypes&lt;/strong&gt; Legacy content type framework.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dexterity&lt;/strong&gt; Modern content type framework based on modern Zope concepts e.g. &amp;#8220;Reuse over reinvention&amp;#8221;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Diazo&lt;/strong&gt; Modern theming engine based on XSLT that &amp;#8220;maps Plone content to generic website themes.&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In total, if you &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Plone&lt;/span&gt;&lt;/code&gt; over 200 Python packages are installed &lt;a class=&quot;footnote-reference&quot; href=&quot;#id19&quot; id=&quot;id7&quot;&gt;[5]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-plock-really&quot;&gt;
&lt;h2&gt;What is Plock, really?&lt;/h2&gt;
&lt;p&gt;OK now it&amp;#8217;s time to explain Plock. Plock is something:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;you &lt;strong&gt;install from PyPI&lt;/strong&gt; via &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt;&lt;/code&gt;. &amp;#8220;Pip installs packages. Plock installs Plone.&amp;#8221;&lt;/li&gt;
&lt;li&gt;you use to &lt;strong&gt;install Plone&lt;/strong&gt; without having to know about tarballs or Buildout.&lt;/li&gt;
&lt;li&gt;you use to &lt;strong&gt;install Plone add-ons&lt;/strong&gt; without having to know about Buildout.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In one sentence: Plock runs Buildout so you don&amp;#8217;t have to, at least initially.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;first-steps-with-plock&quot;&gt;
&lt;h2&gt;First steps with Plock&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1&quot;&gt;
&lt;h3&gt;Step #1&lt;/h3&gt;
&lt;p&gt;The first step with Plock &lt;a class=&quot;footnote-reference&quot; href=&quot;#id22&quot; id=&quot;id8&quot;&gt;[9]&lt;/a&gt; is that light bulb moment when you say to yourself: &amp;#8220;I&amp;#8217;ve heard that Plone is the ultimate open source enterprise CMS and I&amp;#8217;d love to try it!&amp;#8221; But you aren&amp;#8217;t willing to download a compressed archive and run the installer nor are you willing to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;zc.buildout&lt;/span&gt;&lt;/code&gt; and figure the rest out for yourself. Enter Plock.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2&quot;&gt;
&lt;h3&gt;Step #2&lt;/h3&gt;
&lt;p&gt;The second step with Plock is knowing that it exists you can install it with: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3&quot;&gt;
&lt;h3&gt;Step #3&lt;/h3&gt;
&lt;p&gt;The third step with Plock is using it to install Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock plone
Creating virtualenv... (plone)
Installing buildout...
Downloading installer (https://launchpad.net/plone/4.3/4.3.4/+download/Plone-4.3.4-r1-UnifiedInstaller.tgz)
Unpacking installer...
Unpacking cache...
Installing eggs...
Installing cmmi &amp;amp; dist...
Configuring cache...
Running buildout...
Done, now run:
  plone/bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now Plock&amp;#8217;s work is done; visit the following URL: &lt;a class=&quot;reference external&quot; href=&quot;http:://localhost:8080&quot;&gt;http:://localhost:8080&lt;/a&gt; and you should see:&lt;/p&gt;
&lt;img alt=&quot;Plock Screen 1&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-screen-1.png&quot; /&gt;
&lt;p&gt;Create a Plone site:&lt;/p&gt;
&lt;img alt=&quot;Plock Screen 2&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-screen-2.png&quot; /&gt;
&lt;p&gt;Start using Plone:&lt;/p&gt;
&lt;img alt=&quot;Plock Screen 3&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-screen-3.png&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;next-steps-with-plock&quot;&gt;
&lt;h2&gt;Next steps with Plock&lt;/h2&gt;
&lt;p&gt;Plock is more than just a way to install the latest stable version of Plone quickly and easily. It&amp;#8217;s also a way to find and install Plone add-ons quickly and easily, and a way to install almost any version of Plone including the upcoming Plone 5 release.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;installing-add-ons&quot;&gt;
&lt;h3&gt;Installing Add-ons&lt;/h3&gt;
&lt;div class=&quot;section&quot; id=&quot;id9&quot;&gt;
&lt;h4&gt;Step #1&lt;/h4&gt;
&lt;p&gt;List all Plone-related packages on PyPI:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -l
1) 73.unlockItems                           - A small tool for unlocking web_dav locked item in a plone portal.
2) actionbar.panel                          - Provides a (old) facebook style action panel at the bottom of your  Plone site
3) adi.init                                 - Deletes Plone&amp;#39;s default contents
4) adi.samplecontent                        - Deletes Plone&amp;#39;s default content and adds some sample content
5) adi.slickstyle                           - A slick style for Plone portals, easily extendable for your own styles.
6) affinitic.simplecookiecuttr              - Basic integration of jquery.cookiecuttr.js for Plone 3
7) anthill.querytool                        - GUI for AdvancedQuery with some extensions - searching the easy way for Plone
8) anthill.skinner                          - Skinning for plone made easy
9) anz.dashboard                            - Plone netvibes like dashboard implementation
10) anz.ijabbar                              - Integrate iJab(an open source XMPP web chat client recommended by xmpp.org) to your plone site.
…
1,352) zopeskel.diazotheme                      - Paster templates for Plone Diazo theme package
1,353) zopeskel.niteoweb                        - Paster templates for standard NiteoWeb Plone projects
1,354) zopyx.ecardsng                           - An ECard implementation for Plone
1,355) zopyx.existdb                            - Plone-ExistDB integration
1,356) zopyx.ipsumplone                         - Lorem ipsum text and image demo content for Plone
1,357) zopyx.multieventcalendar                 - A multi-event calendar for Plone 3.X
1,358) zopyx.plone.cassandra                    - Show all assigned local roles within a subtree for any Plone 4 site
1,359) zopyx.plone.migration                    - Export/import scripts for migration Plone 2+3 to Plone 4
1,360) zopyx.smartprintng.plone                 - Produce &amp;amp; Publisher server integration with Plone
1,361) zopyx.together                           - Plone integration with together.js
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id10&quot;&gt;
&lt;h4&gt;Step #2&lt;/h4&gt;
&lt;div class=&quot;admonition note&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;Plock currently only supports the initial creation of &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt;, so if you have already run &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt;&lt;/code&gt; once and you want to install add-ons you&amp;#8217;ll have to use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-f&lt;/span&gt;&lt;/code&gt; to overwrite &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Pick a few interesting things and install them:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock plone -i &amp;quot;Products.PloneFormGen collective.plonetruegallery eea.facetednavigation&amp;quot;
Creating virtualenv... (plone)
Installing buildout...
Downloading installer (https://launchpad.net/plone/4.3/4.3.4/+download/Plone-4.3.4-r1-UnifiedInstaller.tgz)
Unpacking installer...
Unpacking cache...
Installing eggs...
Installing cmmi &amp;amp; dist...
Configuring cache...
Installing addons...
- https://pypi.python.org/pypi/Products.PloneFormGen
- https://pypi.python.org/pypi/collective.plonetruegallery
- https://pypi.python.org/pypi/eea.facetednavigation
Running buildout...
Done, now run:
  plone/bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now you should see your add-ons available in Plone:&lt;/p&gt;
&lt;img alt=&quot;Plock Screen 6&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-screen-6.png&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;upgrading-plone&quot;&gt;
&lt;h3&gt;Upgrading Plone&lt;/h3&gt;
&lt;div class=&quot;section&quot; id=&quot;id11&quot;&gt;
&lt;h4&gt;Step #1&lt;/h4&gt;
&lt;p&gt;Realize Plock has created a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file you can edit with a text editor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id12&quot;&gt;
&lt;h4&gt;Step #2&lt;/h4&gt;
&lt;p&gt;Also realize Plock hosts &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;Buildout configuration files called Pins&lt;/a&gt; you can &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extend&lt;/span&gt;&lt;/code&gt; from your local &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file &lt;a class=&quot;footnote-reference&quot; href=&quot;#id23&quot; id=&quot;id13&quot;&gt;[10]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id14&quot;&gt;
&lt;h4&gt;Step #3&lt;/h4&gt;
&lt;p&gt;Edit your &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file. Change the first &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extends&lt;/span&gt;&lt;/code&gt; URL from:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
#    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-5-0
#    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Run Buildout and start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enjoy the Plone 5 running man:&lt;/p&gt;
&lt;img alt=&quot;Plock Screen 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-screen-5.png&quot; /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;tl-dr&quot;&gt;
&lt;h2&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Cut and paste this into a terminal:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install plock; plock plone; plone/bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now open &lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; and happy Ploning.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Plock 0.3.0 is out! Install with&lt;/em&gt; &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt;&lt;/code&gt; &lt;em&gt;and report issues here:&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/plock/issues&quot;&gt;https://github.com/plock/plock/issues&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;footnotes&quot;&gt;
&lt;h2&gt;Footnotes&lt;/h2&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id15&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Whether or not dealing with the complexity is worth it, I will not address. Suffice it to say, plenty of folks still use and care about Plone and with a Plone 5 release pending, there is excitement building.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id16&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;He probably made it many times, and rightfully so.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id17&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id5&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;You can create an &amp;#8220;instance&amp;#8221; after &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;zope2&lt;/span&gt;&lt;/code&gt; with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;bin/mkzopeinstance&lt;/span&gt;&lt;/code&gt; but &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;$INSTANCE/bin/runzope&lt;/span&gt;&lt;/code&gt; fails with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;ImportError:&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;_error_start&lt;/span&gt;&lt;/code&gt; probably due to mismanaged package versions. Maybe we can fix this with version specs included in a dummy package&amp;#8217;s &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;setup.py&lt;/span&gt;&lt;/code&gt;?&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id18&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id6&quot;&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The integration is &lt;em&gt;not&lt;/em&gt; seemless, an undisputed fact as far as I know.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id19&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id7&quot;&gt;[5]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;235&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id20&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[7]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Creating and executing a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file for the end user. Buildout configuration files are written in INI-style text. Ideally the end user sees this file and says &amp;#8220;Ah, now I understand how this works.&amp;#8221;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id21&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[8]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I&amp;#8217;ve also &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2013/07/19/introducing-plock/&quot;&gt;covered&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/&quot;&gt;Plock&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2013/12/29/introducing-plock-again/&quot;&gt;before&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2014/03/20/introducing-plock-pins/&quot;&gt;here&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id22&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id8&quot;&gt;[9]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;As someone familiar with Python and a UNIX shell already, because that is the market I like to serve.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id23&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id13&quot;&gt;[10]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes, there is a security and/or reliability issue with doing this; you are clearly trading security and reliability for convenience.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br /&gt;
&lt;script data-gratipay-username=&quot;aclark4life&quot; src=&quot;//grtp.co/v1.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone 5 Alpha 2 is Here</title>
    <id>http://blog.aclark.net/2014/06/18/plone-5-0-alpha2-is-here/</id>
    <updated>2014-06-18T00:00:00Z</updated>
    <published>2014-06-18T00:00:00Z</published>
    <link href="http://blog.aclark.net/2014/06/18/plone-5-0-alpha2-is-here/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-5-alpha-2-is-here&quot;&gt;

&lt;p&gt;&lt;strong&gt;This post is long overdue since Plone 5 alpha 2 was released on 2014-04-20!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is also too short. I may do a followup blog entry to review more features, depending on how well this one is received. I also want to talk more about Plock.&lt;/p&gt;
&lt;p&gt;When Plone 4 alpha 1 was released, I was so excited I immediately &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/&quot;&gt;ran it in production&lt;/a&gt;. Now-a-days I use &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2013/04/22/new-pyramid-site/&quot;&gt;Pyramid for aclark.net&lt;/a&gt; but I still get excited about new Plone releases.&lt;/p&gt;
&lt;p&gt;As such, I finally got around to testing the latest Plone 5 alpha with &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2014/03/20/introducing-plock-pins/&quot;&gt;my deployment stack&lt;/a&gt; and the results were very impressive, so I thought I&amp;#8217;d share.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;hosted-configuration&quot;&gt;
&lt;h2&gt;Hosted configuration&lt;/h2&gt;
&lt;p&gt;Because of the &amp;#8220;muscle memory&amp;#8221; I&amp;#8217;ve built up over the years doing this, I always install Plone in development and production via my &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;hosted configuration files&lt;/a&gt;. If you are not a developer you may instead prefer the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/plone/releases/5.0&quot;&gt;Unified Installer, VirtualBox/Vagrant installer or OS X Lion/Mountain Lion/Mavericks Binary Installer&lt;/a&gt; otherwise follow along &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install tmp virtualenv
$ cd `tmp`
$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Edit &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to contain:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-5-0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Run Buildout and start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;create-plone-site&quot;&gt;
&lt;h2&gt;Create Plone Site&lt;/h2&gt;
&lt;p&gt;The first thing you will notice is the improved &amp;#8220;Create a Plone Site&amp;#8221; page which now includes a timezone configuration option:&lt;/p&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-0.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;barceloneta-theme&quot;&gt;
&lt;h2&gt;Barceloneta Theme&lt;/h2&gt;
&lt;p&gt;I selected the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;US/Eastern&lt;/span&gt;&lt;/code&gt; timezone and clicked &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Plone&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Site&lt;/span&gt;&lt;/code&gt;, shortly after which I was greeted with a beautiful new Plone 5 site in all its open source glory. Immediately you will notice a new theme and toolbar:&lt;/p&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-1.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone-toolbar&quot;&gt;
&lt;h2&gt;Plone Toolbar&lt;/h2&gt;
&lt;p&gt;Here is a quick tour of the new toolbar.&lt;/p&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-1.png&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;folder-contents&quot;&gt;
&lt;h3&gt;Folder contents&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-2.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;edit-button&quot;&gt;
&lt;h3&gt;Edit button&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-3.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sharing-settings&quot;&gt;
&lt;h3&gt;Sharing settings&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-4.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;workflow-settings&quot;&gt;
&lt;h3&gt;Workflow settings&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-5.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-content&quot;&gt;
&lt;h3&gt;Add content&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-6.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;layout-settings&quot;&gt;
&lt;h3&gt;Layout settings&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-7.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;user-menu&quot;&gt;
&lt;h3&gt;User menu&lt;/h3&gt;
&lt;img alt=&quot;Plone 5&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plone-5-screen-8.png&quot; /&gt;
&lt;p&gt;Love it! Of all these, only the eye icon didn&amp;#8217;t function as expected. Not sure what it&amp;#8217;s supposed to do but I assume it&amp;#8217;s not done yet. Additionally, I wish the small Plone logo in the toolbar navigated &amp;#8220;home&amp;#8221; like the portal logo. Or maybe it will close the toolbar? Oh, the possibilities!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;thanks&quot;&gt;
&lt;h2&gt;Thanks&lt;/h2&gt;
&lt;p&gt;Many thanks to everyone who has worked hard to make Plone 5 a reality.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You should probably&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;hire me&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;follow me on Twitter&lt;/a&gt; &lt;em&gt;or both&lt;/em&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;And please try &lt;a class=&quot;reference external&quot; href=&quot;http://plock.github.io&quot;&gt;Plock&lt;/a&gt; which automates all of these steps e.g. &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;.;bin/plone&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;fg&lt;/span&gt;&lt;/code&gt; Once Plone (4) is installed, update the extends parameter in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;https://raw.github.com/plock/pins/master/plone-5-0&lt;/span&gt;&lt;/code&gt; and rerun Buildout.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">I Love collective-recipe-plonesite</title>
    <id>http://blog.aclark.net/2014/06/02/i-love-collective-recipe-plonesite/</id>
    <updated>2014-06-02T00:00:00Z</updated>
    <published>2014-06-02T00:00:00Z</published>
    <link href="http://blog.aclark.net/2014/06/02/i-love-collective-recipe-plonesite/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;i-love-collective-recipe-plonesite&quot;&gt;

&lt;p&gt;&lt;strong&gt;Whenever I answer tech support questions, I usually begin with a clean slate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;E.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install tmp virtualenv
$ cd `tmp`
$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then I edit &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to look like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then I run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And because my &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.buildout/default.cfg&lt;/span&gt;&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
eggs-directory = /Users/aclark/Developer/eggs-directory
download-cache = /Users/aclark/Developer/download-cache
extends-cache = /Users/aclark/Developer/extends-cache
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;, the entire process only takes a few seconds (except for when I &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2014/03/19/virtualenv-support-update/&quot;&gt;run into trouble with setuptools&lt;/a&gt;. I should probably start doing &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;virtualenv&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;--no-setuptools&lt;/span&gt;&lt;/code&gt;. Perhaps this can be made default?)&lt;/p&gt;
&lt;p&gt;If I&amp;#8217;m in the mood to search the source code, I add the following:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
    https://raw.github.com/plock/pins/master/dev
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then I run Buildout, after which I can easily search in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;parts/omelette&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;plone-site-debug&quot;&gt;
&lt;h2&gt;Plone site debug&lt;/h2&gt;
&lt;p&gt;Anyway, sometimes instead of running Plone through-the-web I want to run a debug prompt instead. All that is required is:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone debug
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;However at this point there is no Plone site object in the database. One could easily create a Plone site through-the-web, but why bother when &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/collective.recipe.plonesite&quot;&gt;collective.recipe.plonesite&lt;/a&gt; exists:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends =
    https://raw.github.com/plock/pins/master/plone-4-3
    https://raw.github.com/plock/pins/master/dev
parts += plonesite

[plonesite]
recipe = collective.recipe.plonesite
instance = plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After running Buildout, now I can examine the Plone site:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone debug
Starting debugger (the name &amp;quot;app&amp;quot; is bound to the top-level Zope object)

&amp;gt;&amp;gt;&amp;gt; app.Plone.
Display all 864 possibilities? (y or n)
app.Plone.COPY(                                                 app.Plone.hasObject__roles__
app.Plone.COPY__roles__                                         app.Plone.hasProperty(
app.Plone.Contributors(                                         app.Plone.hasProperty__roles__
app.Plone.Contributors__roles__                                 app.Plone.has_local_roles(
app.Plone.CreationDate(                                         app.Plone.has_order_support
app.Plone.CreationDate__roles__                                 app.Plone.http__etag(
app.Plone.Creator(                                              app.Plone.http__parseMatchList(
app.Plone.Creator__roles__                                      app.Plone.http__processMatchHeaders(
app.Plone.DELETE(                                               app.Plone.http__refreshEtag(
app.Plone.DELETE__roles__                                       app.Plone.icon
app.Plone.Date(                                                 app.Plone.icon__roles__
app.Plone.Date__roles__                                         app.Plone.id
app.Plone.Description(                                          app.Plone.indexObject(
app.Plone.Description__roles__                                  app.Plone.invokeFactory(
app.Plone.EffectiveDate(                                        app.Plone.invokeFactory__roles__
app.Plone.EffectiveDate__roles__                                app.Plone.isAnObjectManager
app.Plone.ExpirationDate(                                       app.Plone.isEffective(
app.Plone.ExpirationDate__roles__                               app.Plone.isEffective__roles__
app.Plone.Format(                                               app.Plone.isPrincipiaFolderish
app.Plone.Format__roles__                                       app.Plone.isTopLevelPrincipiaApplicationObject
app.Plone.HEAD(                                                 app.Plone.items(
app.Plone.HEAD__roles__                                         app.Plone.items__roles__
app.Plone.HTTPCache                                             app.Plone.keys(
app.Plone.Identifier(                                           app.Plone.keys__roles__
app.Plone.Identifier__roles__                                   app.Plone.language
app.Plone.LOCK(                                                 app.Plone.listContributors(
app.Plone.LOCK__roles__                                         app.Plone.listContributors__roles__
app.Plone.Language(                                             app.Plone.listCreators(
app.Plone.Language__roles__                                     app.Plone.listCreators__roles__
app.Plone.MKCOL(                                                app.Plone.listDAVObjects(
app.Plone.MKCOL_handler(                                        app.Plone.listDAVObjects__roles__
app.Plone.MOVE(                                                 app.Plone.listFolderContents(
app.Plone.MOVE__roles__                                         app.Plone.listFolderContents__roles__
app.Plone.MailHost                                              app.Plone.list_imports(
app.Plone.ModificationDate(                                     app.Plone.manage(
app.Plone.ModificationDate__roles__                             app.Plone.manage_CopyContainerAllItems(
app.Plone.OPTIONS(                                              app.Plone.manage_CopyContainerAllItems__roles__
app.Plone.OPTIONS__roles__                                      app.Plone.manage_CopyContainerFirstItem(
app.Plone.PROPFIND(                                             app.Plone.manage_CopyContainerFirstItem__roles__
app.Plone.PROPFIND__roles__                                     app.Plone.manage_DAVget(
app.Plone.PROPPATCH(                                            app.Plone.manage_DAVget__roles__
app.Plone.PROPPATCH__roles__                                    app.Plone.manage_FTPlist(
app.Plone.PUT(                                                  app.Plone.manage_FTPlist__roles__
app.Plone.PUT_factory(                                          app.Plone.manage_FTPstat(
app.Plone.PrincipiaFind(                                        app.Plone.manage_FTPstat__roles__
app.Plone.PrincipiaFind__roles__                                app.Plone.manage_UndoForm(
app.Plone.Publisher(                                            app.Plone.manage_UndoForm__roles__
app.Plone.Publisher__roles__                                    app.Plone.manage__roles__
app.Plone.RAMCache                                              app.Plone.manage_access(
app.Plone.REQUEST                                               app.Plone.manage_access__roles__
app.Plone.ResourceRegistryCache                                 app.Plone.manage_acquiredForm(
app.Plone.Rights(                                               app.Plone.manage_acquiredForm__roles__
app.Plone.Rights__roles__                                       app.Plone.manage_acquiredPermissions(
app.Plone.SQLConnectionIDs(                                     app.Plone.manage_acquiredPermissions__roles__
app.Plone.SQLConnectionIDs__roles__                             app.Plone.manage_addDTMLDocument(
app.Plone.SiteRootAdd(                                          app.Plone.manage_addDTMLDocument__roles__
app.Plone.SiteRootAdd__roles__                                  app.Plone.manage_addDTMLMethod(
app.Plone.Subject(                                              app.Plone.manage_addDTMLMethod__roles__
app.Plone.Subject__roles__                                      app.Plone.manage_addDocument(
app.Plone.TRACE(                                                app.Plone.manage_addDocument__roles__
app.Plone.TRACE__roles__                                        app.Plone.manage_addFile(
app.Plone.Title(                                                app.Plone.manage_addFile__roles__
app.Plone.Title__roles__                                        app.Plone.manage_addFolder(
app.Plone.Type(                                                 app.Plone.manage_addFolder__roles__
app.Plone.Type__roles__                                         app.Plone.manage_addImage(
app.Plone.UNLOCK(                                               app.Plone.manage_addImage__roles__
app.Plone.UNLOCK__roles__                                       app.Plone.manage_addLocalRoles(
app.Plone.ZQueryIds(                                            app.Plone.manage_addLocalRoles__roles__
app.Plone.ZQueryIds__roles__                                    app.Plone.manage_addOrderedFolder(
app.Plone.ZopeFind(                                             app.Plone.manage_addOrderedFolder__roles__
app.Plone.ZopeFindAndApply(                                     app.Plone.manage_addPortalFolder(
app.Plone.ZopeFindAndApply__roles__                             app.Plone.manage_addPortalFolder__roles__
app.Plone.ZopeFind__roles__                                     app.Plone.manage_addProduct
app.Plone._ATContentTypes__Add_Document_Permission              app.Plone.manage_addProperty(
app.Plone._ATContentTypes__Add_Event_Permission                 app.Plone.manage_addProperty__roles__
app.Plone._ATContentTypes__Add_File_Permission                  app.Plone.manage_addSiteRoot(
app.Plone._ATContentTypes__Add_Folder_Permission                app.Plone.manage_addSiteRootForm(
app.Plone._ATContentTypes__Add_Image_Permission                 app.Plone.manage_addSiteRootForm__roles__
app.Plone._ATContentTypes__Add_Link_Permission                  app.Plone.manage_addSiteRoot__roles__
app.Plone._ATContentTypes__Add_News_Item_Permission             app.Plone.manage_addUserFolder(
app.Plone._Access_arbitrary_user_session_data_Permission        app.Plone.manage_addUserFolder__roles__
app.Plone._Access_contents_information_Permission               app.Plone.manage_afterAdd(
app.Plone._Access_inactive_portal_content_Permission            app.Plone.manage_afterAdd__roles__
app.Plone._Access_session_data_Permission                       app.Plone.manage_afterClone(
app.Plone._Add_portal_content_Permission                        app.Plone.manage_afterClone__roles__
app.Plone._Add_portal_events_Permission                         app.Plone.manage_beforeDelete(
app.Plone._Add_portal_folders_Permission                        app.Plone.manage_beforeDelete__roles__
app.Plone._Add_portal_member_Permission                         app.Plone.manage_changeOwnershipType(
app.Plone._Allow_sendto_Permission                              app.Plone.manage_changeOwnershipType__roles__
app.Plone._CMFEditions__Access_previous_versions_Permission     app.Plone.manage_changePermissions(
app.Plone._CMFEditions__Apply_version_control_Permission        app.Plone.manage_changePermissions__roles__
app.Plone._CMFEditions__Checkout_to_location_Permission         app.Plone.manage_changeProperties(
app.Plone._CMFEditions__Revert_to_previous_versions_Permission  app.Plone.manage_changeProperties__roles__
app.Plone._CMFEditions__Save_new_version_Permission             app.Plone.manage_changePropertyTypes(
app.Plone._Change_local_roles_Permission                        app.Plone.manage_changePropertyTypes__roles__
app.Plone._Change_portal_events_Permission                      app.Plone.manage_clone(
app.Plone._Content_rules__Manage_rules_Permission               app.Plone.manage_clone__roles__
app.Plone._Copy_or_Move_Permission                              app.Plone.manage_copyObjects(
app.Plone._DefaultDublinCoreImpl__CEILING_DATE                  app.Plone.manage_copyObjects__roles__
app.Plone._DefaultDublinCoreImpl__FLOOR_DATE                    app.Plone.manage_copyright(
app.Plone._Delete_objects_Permission                            app.Plone.manage_copyright__roles__
app.Plone._FTP_access_Permission                                app.Plone.manage_cutObjects(
app.Plone._List_folder_contents_Permission                      app.Plone.manage_cutObjects__roles__
app.Plone._List_portal_members_Permission                       app.Plone.manage_defined_roles(
app.Plone._List_undoable_changes_Permission                     app.Plone.manage_defined_roles__roles__
app.Plone._Mail_forgotten_password_Permission                   app.Plone.manage_delLocalRoles(
app.Plone._Manage_properties_Permission                         app.Plone.manage_delLocalRoles__roles__
app.Plone._Modify_portal_content_Permission                     app.Plone.manage_delObjects(
app.Plone._Modify_view_template_Permission                      app.Plone.manage_delObjects__roles__
app.Plone._Portlets__Manage_own_portlets_Permission             app.Plone.manage_delProperties(
app.Plone._Portlets__Manage_portlets_Permission                 app.Plone.manage_delProperties__roles__
app.Plone._Portlets__View_dashboard_Permission                  app.Plone.manage_editLocalRoles(
app.Plone._Reply_to_item_Permission                             app.Plone.manage_editLocalRoles__roles__
app.Plone._Request_review_Permission                            app.Plone.manage_editMetadata(
app.Plone._Review_comments_Permission                           app.Plone.manage_editMetadata__roles__
app.Plone._Review_portal_content_Permission                     app.Plone.manage_editProperties(
app.Plone._Search_ZCatalog_Permission                           app.Plone.manage_editProperties__roles__
app.Plone._Set_own_password_Permission                          app.Plone.manage_editRoles(
app.Plone._Set_own_properties_Permission                        app.Plone.manage_editRoles__roles__
app.Plone._Undo_changes_Permission                              app.Plone.manage_editedDialog(
app.Plone._Use_Database_Methods_Permission                      app.Plone.manage_editedDialog__roles__
app.Plone._Use_external_editor_Permission                       app.Plone.manage_exportObject(
app.Plone._Use_mailhost_services_Permission                     app.Plone.manage_exportObject__roles__
app.Plone._Use_version_control_Permission                       app.Plone.manage_findAdv(
app.Plone._View_Groups_Permission                               app.Plone.manage_findAdv__roles__
app.Plone._View_History_Permission                              app.Plone.manage_findForm(
app.Plone._View_Permission                                      app.Plone.manage_findForm__roles__
app.Plone._View_management_screens_Permission                   app.Plone.manage_findFrame(
app.Plone._WebDAV_Lock_items_Permission                         app.Plone.manage_findFrame__roles__
app.Plone._WebDAV_Unlock_items_Permission                       app.Plone.manage_findResult(
app.Plone._WebDAV_access_Permission                             app.Plone.manage_findResult__roles__
app.Plone.__ZCacheManager_ids__                                 app.Plone.manage_fixupOwnershipAfterAdd(
app.Plone.__ac_local_roles__                                    app.Plone.manage_fixupOwnershipAfterAdd__roles__
app.Plone.__ac_permissions__                                    app.Plone.manage_form_title(
app.Plone.__ac_roles__                                          app.Plone.manage_form_title__roles__
app.Plone.__allow_access_to_unprotected_subobjects__            app.Plone.manage_getPermissionMapping(
app.Plone.__allow_groups__(                                     app.Plone.manage_getPermissionMapping__roles__
app.Plone.__before_publishing_traverse__(                       app.Plone.manage_getUserRolesAndPermissions(
app.Plone.__before_traverse__                                   app.Plone.manage_getUserRolesAndPermissions__roles__
app.Plone.__browser_default__(                                  app.Plone.manage_hasId(
app.Plone.__call__(                                             app.Plone.manage_hasId__roles__
app.Plone.__call____roles__                                     app.Plone.manage_importExportForm(
app.Plone.__class__(                                            app.Plone.manage_importExportForm__roles__
app.Plone.__class_init__(                                       app.Plone.manage_importObject(
app.Plone.__contains__(                                         app.Plone.manage_importObject__roles__
app.Plone.__dav_collection__                                    app.Plone.manage_index_main(
app.Plone.__dav_resource__                                      app.Plone.manage_index_main__roles__
app.Plone.__delattr__(                                          app.Plone.manage_listLocalRoles(
app.Plone.__delitem__(                                          app.Plone.manage_listLocalRoles__roles__
app.Plone.__dict__                                              app.Plone.manage_main(
app.Plone.__doc__                                               app.Plone.manage_main__roles__
app.Plone.__error_log__                                         app.Plone.manage_menu(
app.Plone.__format__(                                           app.Plone.manage_menu__roles__
app.Plone.__getattr__(                                          app.Plone.manage_metadata(
app.Plone.__getattribute__(                                     app.Plone.manage_metadata__roles__
app.Plone.__getitem__(                                          app.Plone.manage_move_objects_down(
app.Plone.__getstate__(                                         app.Plone.manage_move_objects_down__roles__
app.Plone.__hash__(                                             app.Plone.manage_move_objects_to_bottom(
app.Plone.__http_methods__                                      app.Plone.manage_move_objects_to_bottom__roles__
app.Plone.__implemented__(                                      app.Plone.manage_move_objects_to_top(
app.Plone.__init__(                                             app.Plone.manage_move_objects_to_top__roles__
app.Plone.__iter__(                                             app.Plone.manage_move_objects_up(
app.Plone.__len__(                                              app.Plone.manage_move_objects_up__roles__
app.Plone.__module__                                            app.Plone.manage_options
app.Plone.__name__                                              app.Plone.manage_owner(
app.Plone.__new__(                                              app.Plone.manage_owner__roles__
app.Plone.__nonzero__(                                          app.Plone.manage_page_footer(
app.Plone.__of__(                                               app.Plone.manage_page_footer__roles__
app.Plone.__old_manage_FTPlist(                                 app.Plone.manage_page_header(
app.Plone.__propsets__                                          app.Plone.manage_page_header__roles__
app.Plone.__providedBy__(                                       app.Plone.manage_page_style.css(
app.Plone.__provides__(                                         app.Plone.manage_page_style.css__roles__
app.Plone.__reduce__(                                           app.Plone.manage_pasteObjects(
app.Plone.__reduce_ex__(                                        app.Plone.manage_pasteObjects__roles__
app.Plone.__replaceable__                                       app.Plone.manage_permission(
app.Plone.__repr__(                                             app.Plone.manage_permissionForm(
app.Plone.__roles__                                             app.Plone.manage_permissionForm__roles__
app.Plone.__setattr__(                                          app.Plone.manage_permission__roles__
app.Plone.__setitem__(                                          app.Plone.manage_propertiesForm(
app.Plone.__setstate__(                                         app.Plone.manage_propertiesForm__roles__
app.Plone.__sizeof__(                                           app.Plone.manage_propertyTypeForm(
app.Plone.__str__(                                              app.Plone.manage_propertyTypeForm__roles__
app.Plone.__subclasshook__(                                     app.Plone.manage_renameForm(
app.Plone.__weakref__                                           app.Plone.manage_renameForm__roles__
app.Plone._addRole(                                             app.Plone.manage_renameObject(
app.Plone._at_fti_meta_type                                     app.Plone.manage_renameObject__roles__
app.Plone._canCopy(                                             app.Plone.manage_renameObjects(
app.Plone._checkId(                                             app.Plone.manage_renameObjects__roles__
app.Plone._components                                           app.Plone.manage_reportUserPermissions(
app.Plone._datify(                                              app.Plone.manage_reportUserPermissions__roles__
app.Plone._datify__roles__                                      app.Plone.manage_role(
app.Plone._default_sort_key                                     app.Plone.manage_roleForm(
app.Plone._default_sort_reverse                                 app.Plone.manage_roleForm__roles__
app.Plone._delOb(                                               app.Plone.manage_role__roles__
app.Plone._delObject(                                           app.Plone.manage_setLocalRoles(
app.Plone._delPropValue(                                        app.Plone.manage_setLocalRoles__roles__
app.Plone._delProperty(                                         app.Plone.manage_setPermissionMapping(
app.Plone._delRoles(                                            app.Plone.manage_setPermissionMapping__roles__
app.Plone._deleteOwnershipAfterAdd(                             app.Plone.manage_set_default_sorting(
app.Plone._editMetadata(                                        app.Plone.manage_set_default_sorting__roles__
app.Plone._editMetadata__roles__                                app.Plone.manage_tabs(
app.Plone._filteredItems(                                       app.Plone.manage_tabs__roles__
app.Plone._getCopy(                                             app.Plone.manage_takeOwnership(
app.Plone._getImportPaths(                                      app.Plone.manage_takeOwnership__roles__
app.Plone._getOb(                                               app.Plone.manage_top_frame(
app.Plone._getPortalTypeName(                                   app.Plone.manage_top_frame__roles__
app.Plone._getUNIQUE(                                           app.Plone.manage_undo_transactions(
app.Plone._get_id(                                              app.Plone.manage_undo_transactions__roles__
app.Plone._get_request_var_or_attr(                             app.Plone.manage_workspace(
app.Plone._has_user_defined_role(                               app.Plone.manage_workspace__roles__
app.Plone._importObjectFromFile(                                app.Plone.manage_zmi_logout(
app.Plone._isBeingUsedAsAMethod(                                app.Plone.manage_zmi_logout__roles__
app.Plone._manage_editedDialog(                                 app.Plone.manage_zmi_prefs(
app.Plone._normal_manage_access(                                app.Plone.manage_zmi_prefs__roles__
app.Plone._notifyOfCopyTo(                                      app.Plone.management_page_charset
app.Plone._objects                                              app.Plone.meta_type
app.Plone._old_filtered_manage_options(                         app.Plone.meta_types
app.Plone._owner                                                app.Plone.mimetypes_registry(
app.Plone._p_activate(                                          app.Plone.modification_date
app.Plone._p_changed                                            app.Plone.modified(
app.Plone._p_deactivate(                                        app.Plone.modified__roles__
app.Plone._p_delattr(                                           app.Plone.moveObject(
app.Plone._p_estimated_size                                     app.Plone.moveObjectToPosition(
app.Plone._p_getattr(                                           app.Plone.moveObjectToPosition__roles__
app.Plone._p_invalidate(                                        app.Plone.moveObject__roles__
app.Plone._p_jar                                                app.Plone.moveObjectsByDelta(
app.Plone._p_mtime                                              app.Plone.moveObjectsByDelta__roles__
app.Plone._p_oid                                                app.Plone.moveObjectsDown(
app.Plone._p_serial                                             app.Plone.moveObjectsDown__roles__
app.Plone._p_setattr(                                           app.Plone.moveObjectsToBottom(
app.Plone._p_state                                              app.Plone.moveObjectsToBottom__roles__
app.Plone._plone_app_collection__Add_Collection_Permission      app.Plone.moveObjectsToTop(
app.Plone._postCopy(                                            app.Plone.moveObjectsToTop__roles__
app.Plone._properties                                           app.Plone.moveObjectsUp(
app.Plone._propertyMap(                                         app.Plone.moveObjectsUp__roles__
app.Plone._reserved_names                                       app.Plone.notifyModified(
app.Plone._setId(                                               app.Plone.notifyModified__roles__
app.Plone._setOb(                                               app.Plone.objectIds(
app.Plone._setObject(                                           app.Plone.objectIds__roles__
app.Plone._setPortalTypeName(                                   app.Plone.objectIds_d(
app.Plone._setPropValue(                                        app.Plone.objectIds_d__roles__
app.Plone._setProperty(                                         app.Plone.objectItems(
app.Plone._setRoles(                                            app.Plone.objectItems__roles__
app.Plone._subobject_permissions(                               app.Plone.objectItems_d(
app.Plone._updateProperty(                                      app.Plone.objectItems_d__roles__
app.Plone._verifyObjectPaste(                                   app.Plone.objectMap(
app.Plone._wrapperCheck(                                        app.Plone.objectMap_d(
app.Plone.absolute_url(                                         app.Plone.objectMap_d__roles__
app.Plone.absolute_url__roles__                                 app.Plone.objectValues(
app.Plone.absolute_url_path(                                    app.Plone.objectValues__roles__
app.Plone.absolute_url_path__roles__                            app.Plone.objectValues_d(
app.Plone.ac_inherited_permissions(                             app.Plone.objectValues_d__roles__
app.Plone.ac_inherited_permissions__roles__                     app.Plone.opaqueIds(
app.Plone.access_debug_info(                                    app.Plone.opaqueIds__roles__
app.Plone.access_debug_info__roles__                            app.Plone.opaqueItems(
app.Plone.aclAChecked                                           app.Plone.opaqueItems__roles__
app.Plone.aclEChecked                                           app.Plone.opaqueValues(
app.Plone.aclPChecked                                           app.Plone.opaqueValues__roles__
app.Plone.acl_users(                                            app.Plone.orderObjects(
app.Plone.acquiredRolesAreUsedBy(                               app.Plone.orderObjects__roles__
app.Plone.acquiredRolesAreUsedBy__roles__                       app.Plone.owner_info(
app.Plone.addCreator(                                           app.Plone.owner_info__roles__
app.Plone.addCreator__roles__                                   app.Plone.permission_settings(
app.Plone.addDTMLDocument(                                      app.Plone.permission_settings__roles__
app.Plone.addDTMLDocument__roles__                              app.Plone.permissionsOfRole(
app.Plone.addDTMLMethod(                                        app.Plone.permissionsOfRole__roles__
app.Plone.addDTMLMethod__roles__                                app.Plone.plone_utils
app.Plone.aliases                                               app.Plone.portal_actionicons(
app.Plone.all_meta_types(                                       app.Plone.portal_actions
app.Plone.allowedContentTypes(                                  app.Plone.portal_archivist
app.Plone.allowedContentTypes__roles__                          app.Plone.portal_atct
app.Plone.analyseDocumentation(                                 app.Plone.portal_calendar
app.Plone.analyseDocumentation__roles__                         app.Plone.portal_catalog(
app.Plone.archetype_tool                                        app.Plone.portal_controlpanel
app.Plone.availableLanguages(                                   app.Plone.portal_css
app.Plone.availableLanguages__roles__                           app.Plone.portal_diff
app.Plone.bobobase_modification_time(                           app.Plone.portal_discussion
app.Plone.caching_policy_manager                                app.Plone.portal_factory(
app.Plone.canSetDefaultPage(                                    app.Plone.portal_form_controller(
app.Plone.canSetDefaultPage__roles__                            app.Plone.portal_groupdata
app.Plone.canSetLayout(                                         app.Plone.portal_groups
app.Plone.canSetLayout__roles__                                 app.Plone.portal_historiesstorage
app.Plone.cb_dataItems(                                         app.Plone.portal_historyidhandler
app.Plone.cb_dataValid(                                         app.Plone.portal_interface
app.Plone.cb_isCopyable(                                        app.Plone.portal_javascripts
app.Plone.cb_isMoveable(                                        app.Plone.portal_languages(
app.Plone.cb_userHasCopyOrMovePermission(                       app.Plone.portal_memberdata
app.Plone.changeOwnership(                                      app.Plone.portal_membership
app.Plone.changeOwnership__roles__                              app.Plone.portal_metadata
app.Plone.changeSkin(                                           app.Plone.portal_migration
app.Plone.changeSkin__roles__                                   app.Plone.portal_modifier
app.Plone.checkIdAvailable(                                     app.Plone.portal_password_reset
app.Plone.checkIdAvailable__roles__                             app.Plone.portal_properties
app.Plone.clearCurrentSkin(                                     app.Plone.portal_purgepolicy
app.Plone.clearCurrentSkin__roles__                             app.Plone.portal_quickinstaller
app.Plone.contentIds(                                           app.Plone.portal_referencefactories
app.Plone.contentIds__roles__                                   app.Plone.portal_registration
app.Plone.contentItems(                                         app.Plone.portal_registry
app.Plone.contentItems__roles__                                 app.Plone.portal_repository
app.Plone.contentValues(                                        app.Plone.portal_setup
app.Plone.contentValues__roles__                                app.Plone.portal_skins
app.Plone.content_type(                                         app.Plone.portal_tinymce
app.Plone.content_type_registry                                 app.Plone.portal_transforms(
app.Plone.contributors                                          app.Plone.portal_type
app.Plone.created(                                              app.Plone.portal_types
app.Plone.created__roles__                                      app.Plone.portal_uidannotation(
app.Plone.creation_date                                         app.Plone.portal_uidgenerator(
app.Plone.creators                                              app.Plone.portal_uidhandler
app.Plone.dav__init(                                            app.Plone.portal_undo
app.Plone.dav__simpleifhandler(                                 app.Plone.portal_url(
app.Plone.dav__validate(                                        app.Plone.portal_view_customizations
app.Plone.decodeFolderFilter(                                   app.Plone.portal_workflow
app.Plone.decodeFolderFilter__roles__                           app.Plone.possible_permissions(
app.Plone.defaultView(                                          app.Plone.propdict(
app.Plone.defaultView__roles__                                  app.Plone.propdict__roles__
app.Plone.default_view                                          app.Plone.propertyDescription(
app.Plone.description                                           app.Plone.propertyDescription__roles__
app.Plone.edit(                                                 app.Plone.propertyIds(
app.Plone.editMetadata(                                         app.Plone.propertyIds__roles__
app.Plone.editMetadata__roles__                                 app.Plone.propertyItems(
app.Plone.edit__roles__                                         app.Plone.propertyItems__roles__
app.Plone.effective(                                            app.Plone.propertyLabel(
app.Plone.effective__roles__                                    app.Plone.propertyLabel__roles__
app.Plone.effective_date                                        app.Plone.propertyMap(
app.Plone.email_charset                                         app.Plone.propertyMap__roles__
app.Plone.email_from_address                                    app.Plone.propertyValues(
app.Plone.email_from_name                                       app.Plone.propertyValues__roles__
app.Plone.enable_permalink                                      app.Plone.propertysheets
app.Plone.encodeFolderFilter(                                   app.Plone.raise_standardErrorMessage(
app.Plone.encodeFolderFilter__roles__                           app.Plone.reference_catalog(
app.Plone.error_log                                             app.Plone.reindexObject(
app.Plone.expiration_date                                       app.Plone.reindexObjectSecurity(
app.Plone.expires(                                              app.Plone.restrictedTraverse(
app.Plone.expires__roles__                                      app.Plone.restrictedTraverse__roles__
app.Plone.externalEditLink_(                                    app.Plone.rights
app.Plone.externalEdit_                                         app.Plone.rolesOfPermission(
app.Plone.filtered_manage_options(                              app.Plone.rolesOfPermission__roles__
app.Plone.filtered_manage_options__roles__                      app.Plone.selectable_views
app.Plone.filtered_meta_types(                                  app.Plone.selectedRoles
app.Plone.folderlistingFolderContents(                          app.Plone.setContributors(
app.Plone.folderlistingFolderContents__roles__                  app.Plone.setContributors__roles__
app.Plone.format                                                app.Plone.setCreators(
app.Plone.get(                                                  app.Plone.setCreators__roles__
app.Plone.getActionInfo(                                        app.Plone.setDefaultPage(
app.Plone.getActionInfo__roles__                                app.Plone.setDefaultPage__roles__
app.Plone.getAttribute(                                         app.Plone.setDefaultSorting(
app.Plone.getAttributeNode(                                     app.Plone.setDefaultSorting__roles__
app.Plone.getAttributeNode__roles__                             app.Plone.setDescription(
app.Plone.getAttribute__roles__                                 app.Plone.setDescription__roles__
app.Plone.getAttributes(                                        app.Plone.setEffectiveDate(
app.Plone.getAttributes__roles__                                app.Plone.setEffectiveDate__roles__
app.Plone.getAvailableLayouts(                                  app.Plone.setExpirationDate(
app.Plone.getAvailableLayouts__roles__                          app.Plone.setExpirationDate__roles__
app.Plone.getCMFObjectsSubsetIds(                               app.Plone.setFormat(
app.Plone.getChildNodes(                                        app.Plone.setFormat__roles__
app.Plone.getChildNodes__roles__                                app.Plone.setLanguage(
app.Plone.getCurrentSkinName(                                   app.Plone.setLanguage__roles__
app.Plone.getCurrentSkinName__roles__                           app.Plone.setLayout(
app.Plone.getDefaultLayout(                                     app.Plone.setLayout__roles__
app.Plone.getDefaultLayout__roles__                             app.Plone.setModificationDate(
app.Plone.getDefaultPage(                                       app.Plone.setModificationDate__roles__
app.Plone.getDefaultPage__roles__                               app.Plone.setRights(
app.Plone.getDefaultSorting(                                    app.Plone.setRights__roles__
app.Plone.getDefaultSorting__roles__                            app.Plone.setSiteManager(
app.Plone.getElementsByTagName(                                 app.Plone.setSiteManager__roles__
app.Plone.getElementsByTagName__roles__                         app.Plone.setSubject(
app.Plone.getFirstChild(                                        app.Plone.setSubject__roles__
app.Plone.getFirstChild__roles__                                app.Plone.setTitle(
app.Plone.getIcon(                                              app.Plone.setTitle__roles__
app.Plone.getIconURL(                                           app.Plone.setupCurrentSkin(
app.Plone.getIconURL__roles__                                   app.Plone.setupCurrentSkin__roles__
app.Plone.getIcon__roles__                                      app.Plone.showDocumentation(
app.Plone.getId(                                                app.Plone.showDocumentation__roles__
app.Plone.getId__roles__                                        app.Plone.smallRolesWidget
app.Plone.getIdsSubset(                                         app.Plone.subject
app.Plone.getIdsSubset__roles__                                 app.Plone.superValues(
app.Plone.getLastChild(                                         app.Plone.superValues__roles__
app.Plone.getLastChild__roles__                                 app.Plone.suppl_views
app.Plone.getLayout(                                            app.Plone.tabs_path_default(
app.Plone.getLayout__roles__                                    app.Plone.tabs_path_info(
app.Plone.getMetadataHeaders(                                   app.Plone.this(
app.Plone.getMetadataHeaders__roles__                           app.Plone.title
app.Plone.getNextSibling(                                       app.Plone.title_and_id(
app.Plone.getNextSibling__roles__                               app.Plone.title_or_id(
app.Plone.getNodeName(                                          app.Plone.tpURL(
app.Plone.getNodeName__roles__                                  app.Plone.tpValues(
app.Plone.getNodeType(                                          app.Plone.tpValues__roles__
app.Plone.getNodeValue(                                         app.Plone.translation_service
app.Plone.getNodeValue__roles__                                 app.Plone.uid_catalog(
app.Plone.getObjectPosition(                                    app.Plone.undoable_transactions(
app.Plone.getObjectPosition__roles__                            app.Plone.undoable_transactions__roles__
app.Plone.getOwner(                                             app.Plone.unindexObject(
app.Plone.getOwnerDocument(                                     app.Plone.unrestrictedTraverse(
app.Plone.getOwnerDocument__roles__                             app.Plone.unrestrictedTraverse__roles__
app.Plone.getOwnerTuple(                                        app.Plone.userCanTakeOwnership(
app.Plone.getOwnerTuple__roles__                                app.Plone.userdefined_roles(
app.Plone.getOwner__roles__                                     app.Plone.userdefined_roles__roles__
app.Plone.getParentNode(                                        app.Plone.users_with_local_role(
app.Plone.getParentNode__roles__                                app.Plone.validClipData(
app.Plone.getPhysicalPath(                                      app.Plone.validRoles(
app.Plone.getPhysicalPath__roles__                              app.Plone.valid_property_id(
app.Plone.getPhysicalRoot(                                      app.Plone.valid_property_id__roles__
app.Plone.getPhysicalRoot__roles__                              app.Plone.valid_roles(
app.Plone.getPortalTypeName(                                    app.Plone.validate_email
app.Plone.getPortalTypeName__roles__                            app.Plone.validate_roles(
app.Plone.getPreviousSibling(                                   app.Plone.values(
app.Plone.getPreviousSibling__roles__                           app.Plone.values__roles__
app.Plone.getProperty(                                          app.Plone.view(
app.Plone.getPropertyType(                                      app.Plone.virtual_url_path(
app.Plone.getPropertyType__roles__                              app.Plone.virtual_url_path__roles__
app.Plone.getProperty__roles__                                  app.Plone.wl_clearLocks(
app.Plone.getSiteManager(                                       app.Plone.wl_clearLocks__roles__
app.Plone.getSiteManager__roles__                               app.Plone.wl_delLock(
app.Plone.getSkin(                                              app.Plone.wl_delLock__roles__
app.Plone.getSkinNameFromRequest(                               app.Plone.wl_getLock(
app.Plone.getSkinNameFromRequest__roles__                       app.Plone.wl_getLock__roles__
app.Plone.getSkin__roles__                                      app.Plone.wl_hasLock(
app.Plone.getSkinsFolderName(                                   app.Plone.wl_isLocked(
app.Plone.getSkinsFolderName__roles__                           app.Plone.wl_isLockedByUser__roles__
app.Plone.getTagName(                                           app.Plone.wl_isLocked__roles__
app.Plone.getTagName__roles__                                   app.Plone.wl_lockItems(
app.Plone.getTypeInfo(                                          app.Plone.wl_lockItems__roles__
app.Plone.getTypeInfo__roles__                                  app.Plone.wl_lockTokens(
app.Plone.getWrappedOwner(                                      app.Plone.wl_lockTokens__roles__
app.Plone.getWrappedOwner__roles__                              app.Plone.wl_lockValues(
app.Plone.get__roles__                                          app.Plone.wl_lockValues__roles__
app.Plone.get_local_roles(                                      app.Plone.wl_lockmapping(
app.Plone.get_local_roles_for_userid(                           app.Plone.wl_lockmapping__roles__
app.Plone.get_valid_userids(                                    app.Plone.wl_setLock(
app.Plone.hasChildNodes(                                        app.Plone.wl_setLock__roles__
app.Plone.hasChildNodes__roles__                                app.Plone.zope_quick_start(
app.Plone.hasObject(                                            app.Plone.zope_quick_start__roles__
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(&lt;em&gt;You should probably&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;hire me&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;follow me on Twitter&lt;/a&gt; &lt;em&gt;or both&lt;/em&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">We Pioneer</title>
    <id>http://blog.aclark.net/2014/05/03/we-pioneer/</id>
    <updated>2014-05-03T00:00:00Z</updated>
    <published>2014-05-03T00:00:00Z</published>
    <link href="http://blog.aclark.net/2014/05/03/we-pioneer/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;we-pioneer&quot;&gt;

&lt;p&gt;&lt;strong&gt;One of the subjects I find myself thinking about a lot is: Plone (surprise!)&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/we-pioneer.jpg&quot; /&gt;
&lt;p&gt;One of the subjects I find myself thinking about a lot is: Plone (surprise!) In Plone-land, we deliver the &lt;strong&gt;best Python-based CMS money can&amp;#8217;t buy on top of an aging Zope 2 &amp;#8220;application server&amp;#8221;&lt;/strong&gt; mixed with newer Zope, Python, and other technologies. In short, this is a challenge.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;diazo&quot;&gt;
&lt;h2&gt;Diazo&lt;/h2&gt;
&lt;p&gt;Further to the point, I think about &amp;#8220;new tech&amp;#8221; vs &amp;#8220;old tech&amp;#8221; a lot and how to happily marry the two. Here is one concrete example of my thought process. Diazo is the &amp;#8220;new theming engine&amp;#8221; in Plone which allows folks to perform complex XSLT transformations via a simple XML rule set. It sounds great, and it often is. But something won&amp;#8217;t let my mind reach the &amp;#8220;Ahhhh this is great technology!&amp;#8221; point. Instead, I often find myself thinking &amp;#8220;This is great technology, BUT…&amp;#8221; which I don&amp;#8217;t want to think when I&amp;#8217;m thinking about Plone.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;pioneering&quot;&gt;
&lt;h3&gt;Pioneering&lt;/h3&gt;
&lt;p&gt;However I&amp;#8217;m beginning to settle on an &amp;#8220;acceptable thought process&amp;#8221;, to describe how Diazo fits on top of 10 years of legacy Plone technology: it&amp;#8217;s &lt;strong&gt;pioneering&lt;/strong&gt;. As I have observed over the years, Plone developers have taken great pride in being the &amp;#8220;first to market&amp;#8221; with cutting edge and useful CMS features other vendors would love to include in their product.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But are other CMS vendors watching?&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issues&quot;&gt;
&lt;h3&gt;Issues&lt;/h3&gt;
&lt;p&gt;Of issue with Diazo is:&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Most web developers are familiar with the concept of editing templates to affect output&lt;/strong&gt; (AKA &amp;#8220;customization&amp;#8221;). When Zope 2 was young, the only place to easily customize templates was within the web application itself, with changes persisted to the ZODB. Then &amp;#8220;ZODB dread&amp;#8221; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; happened and folks began to customize templates on the file system with software version control in place. During this time, customizations happened on the file system via the CMF framework built on top of Zope 2. Then Zope 3 happened and folks began to customize templates on the file system with more modern web technology (AKA &amp;#8220;pseudo-MVC-like environments&amp;#8221;). Then Deliverance &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; happened and folks began to leave the complex stack alone in favor of using XSLT transforms to produce a hybrid output containing both clean, isolated HTML/CSS/JavaScript and Plone content (AKA &amp;#8220;lipstick on a pig&amp;#8221;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plone now has two distinct templating environments&lt;/strong&gt;: the application environment which still has plenty of templates to customize &amp;amp; the theming environment which also has templates to customize. This is both good and bad: it&amp;#8217;s good when everyone can easily figure out where to customize what they want to customize, and bad when this process breaks down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Diazo allows for some complex rules to be written&lt;/strong&gt; along with custom XSLT. That power allows folks to produce some truly unwieldy and wholly unmaintainable messes, for lack of a better description. I&amp;#8217;m sad to say I&amp;#8217;ve seen many of these in the wild, in just the few short years Diazo has existed.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;After all this thinking, I&amp;#8217;ve reached the following conclusion(s):&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;The concept of editing templates most web developers are familiar with is still valid in Plone.&lt;/strong&gt; But we must work harder to demonstrate where and how these customizations can occur. With great tools comes great power, but not without significant risk of injury (the so-called &amp;#8220;power tool&amp;#8221; analogy.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;We should strive for the appearance of one templating environment.&lt;/strong&gt; The easiest way to do this is to have only one templating environment. Many electronic flames have been burned over the discussion of making Diazo that single environment. In the meantime let&amp;#8217;s disassemble, polish &amp;amp; reassemble all of our templating environments and put effort in to making the difference between them seemless. (&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zope2_bootstrap&quot;&gt;zope2_bootstrap&lt;/a&gt; anyone?)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;We should actively discourage complex rules and custom XSLT&lt;/strong&gt;. Of course, these knobs are nice to turn when you need them. But I don&amp;#8217;t want to read through complex rules and custom XSLT anymore than I want to see inline JavaScript or CSS. (AKA &amp;#8220;This is why we can&amp;#8217;t have nice things.&amp;#8221;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;And other CMS vendors should be watching, because Plone 5 is about to drop!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;(&lt;em&gt;You should probably&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;hire me&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;follow me on Twitter&lt;/a&gt; &lt;em&gt;or both&lt;/em&gt;.)&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The fear all your hard work and customizations are trapped inside an unwieldy ZODB, with no easy way to persist or track them elsewhere.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Early, pioneering implementation which inspired Diazo.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Introducing Plock Pins</title>
    <id>http://blog.aclark.net/2014/03/20/introducing-plock-pins/</id>
    <updated>2014-03-20T00:00:00Z</updated>
    <published>2014-03-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2014/03/20/introducing-plock-pins/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-plock-pins&quot;&gt;

&lt;p&gt;&lt;strong&gt;&amp;#8220;Plock Pins are the greatest thing to happen to Plone since Buildout&amp;#8221; — Alex Clark&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/buildout-all-the-plones.jpg&quot; /&gt;
&lt;p&gt;Plock Pins are the final incarnation of a collection of Plone Buildouts I&amp;#8217;ve been developing since 2010. They attempt to make it easy to install Plone with only Python installed &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. Installing Plone with Plock Pins looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv-2.7 .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now edit your &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to include a link to the Plock Pins:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Followed by the following command to start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That&amp;#8217;s it! This technique should work for all versions of Plone all the way back to Plone 1.1. If it doesn&amp;#8217;t, please let me know here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins/issues&quot;&gt;https://github.com/plock/pins/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, here is a list of all available Plock Pins you can extend &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-4-3&quot;&gt;https://raw.github.com/plock/pins/master/plone-4-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-4-2&quot;&gt;https://raw.github.com/plock/pins/master/plone-4-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-4-1&quot;&gt;https://raw.github.com/plock/pins/master/plone-4-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-4-0&quot;&gt;https://raw.github.com/plock/pins/master/plone-4-0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-3-3&quot;&gt;https://raw.github.com/plock/pins/master/plone-3-3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-3-2&quot;&gt;https://raw.github.com/plock/pins/master/plone-3-2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-3-1&quot;&gt;https://raw.github.com/plock/pins/master/plone-3-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-3-0&quot;&gt;https://raw.github.com/plock/pins/master/plone-3-0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-2-5&quot;&gt;https://raw.github.com/plock/pins/master/plone-2-5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-2-1&quot;&gt;https://raw.github.com/plock/pins/master/plone-2-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/plock/pins/master/plone-1-1&quot;&gt;https://raw.github.com/plock/pins/master/plone-1-1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;In future versions of Python 3.x, the Pip installer will be included as part of the core software. This will lessen the burden for users attempting to install packages from PyPI. In 2.x, one must install Setuptools and/or Pip before attempting to do so.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Remember to use Python 2.4 for &amp;lt; Plone 4&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hello Plone Updated</title>
    <id>http://blog.aclark.net/2014/01/11/hello-plone-updated/</id>
    <updated>2014-01-11T00:00:00Z</updated>
    <published>2014-01-11T00:00:00Z</published>
    <link href="http://blog.aclark.net/2014/01/11/hello-plone-updated/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone-updated&quot;&gt;

&lt;p&gt;&lt;strong&gt;Over two years ago I wrote a blog entry called &amp;#8220;Hello, Plone!&amp;#8221;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Over two years ago I wrote a blog entry called &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/08/20/hello-plone/&quot;&gt;&amp;#8220;Hello, Plone!&amp;#8221;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve just updated it in order to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Change the wording&lt;/li&gt;
&lt;li&gt;Update the links&lt;/li&gt;
&lt;li&gt;Add some comments&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;what-s-changed&quot;&gt;
&lt;h2&gt;What&amp;#8217;s changed?&lt;/h2&gt;
&lt;p&gt;As change in technology is constant, you can expect a few details to differ between then and now. Though I generally don&amp;#8217;t like the term &amp;#8220;best practice&amp;#8221; I do like to write about &amp;#8220;how I do it now&amp;#8221; vs &amp;#8220;how I did it then&amp;#8221;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout&quot;&gt;
&lt;h3&gt;Buildout&lt;/h3&gt;
&lt;p&gt;Since &amp;#8220;Hello, Plone!&amp;#8221; was published Buildout 2.0.0 was released and &lt;strong&gt;Buildout has given up on attempting to provide module isolation&lt;/strong&gt; in the same way Virtualenv that does. Why? Virtualenv does it better. So if you want to isolate your development from a larger Python installation, use Virtualenv. I routinely use both Buildout and Virtualenv.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout-hosting&quot;&gt;
&lt;h3&gt;Buildout hosting&lt;/h3&gt;
&lt;p&gt;Ever since I wrote &lt;a class=&quot;reference external&quot; href=&quot;http://www.packtpub.com/plone-33-site-administration/book&quot;&gt;Plone 3.3 Site Administration&lt;/a&gt; I&amp;#8217;ve been maintaining a collection of buildouts. Most recently, I&amp;#8217;ve moved them to a project called &lt;a class=&quot;reference external&quot; href=&quot;http://plock.github.io&quot;&gt;Plock&lt;/a&gt;. You can also find a bunch of archived buildouts here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/buildouts&quot;&gt;https://github.com/buildouts&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;zopeskel&quot;&gt;
&lt;h3&gt;ZopeSkel&lt;/h3&gt;
&lt;p&gt;For folks new to Plone and Python development, it&amp;#8217;s often helpful to use a code generator to get started developing. The original &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;hello_plone&lt;/span&gt;&lt;/code&gt; included some ZopeSkel instructions. In this round, I&amp;#8217;ve opted to include manual instructions instead e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p my.app/my/app
$ touch my.app/my/app/__init__.py
$ touch my.app/my/__init__.py
$ touch my.app/my/app/configure.zcml
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Why? Generally speaking, I now prefer to educate folks about Python packaging more so than code generation.&lt;/p&gt;
&lt;p&gt;Check out the new old post here: &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/08/20/hello-plone/&quot;&gt;http://blog.aclark.net/2011/08/20/hello-plone/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plonetheme Report</title>
    <id>http://blog.aclark.net/2013/12/29/plonetheme-report/</id>
    <updated>2013-12-29T00:00:00Z</updated>
    <published>2013-12-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/12/29/plonetheme-report/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plonetheme-report&quot;&gt;

&lt;p&gt;&lt;strong&gt;Here is another report on Plone themes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is another report on Plone themes &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; generated by plock &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;#!/bin/sh
for i in &lt;cite&gt;plock -l -r | grep plonetheme&lt;/cite&gt;
do
plock . -a $i
done&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Plock is able to produce a Buildout configuration file containing all themes that successfully installed via Buildout; I manually removed the themes that caused Plone start to fail.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;before-plone-start&quot;&gt;
&lt;h2&gt;Before Plone start&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    plonetheme.ReOrg
    plonetheme.aclark_twitter
    plonetheme.aqueouslight
    plonetheme.arnolfini
    plonetheme.bananaleaf
    plonetheme.basic
    plonetheme.bluegray
    plonetheme.burned
    plonetheme.classic
    plonetheme.cleantheme
    plonetheme.codapress
    plonetheme.colorfulworld
    plonetheme.coolblue
    plonetheme.criticas
    plonetheme.cultureCab
    plonetheme.darkened
    plonetheme.delicious2
    plonetheme.diazo_sunburst
    plonetheme.discovery
    plonetheme.drupal
    plonetheme.earthlingtwo
    plonetheme.evergreen
    plonetheme.ewb_case
    plonetheme.freshpick
    plonetheme.fui
    plonetheme.gemstone
    plonetheme.gov
    plonetheme.greencommunity
    plonetheme.grungeera
    plonetheme.html5_hotpink
    plonetheme.inbusiness
    plonetheme.intk
    plonetheme.jsjamba
    plonetheme.keepitsimple
    plonetheme.laboral
    plonetheme.labs
    plonetheme.leavesdew
    plonetheme.level2
    plonetheme.mimbo
    plonetheme.mvob
    plonetheme.netsightintranet
    plonetheme.nonzero
    plonetheme.notredame
    plonetheme.overlappedtabs
    plonetheme.p2
    plonetheme.ploneorg
    plonetheme.porseleinplaats
    plonetheme.pyar
    plonetheme.rcom
    plonetheme.redmusic
    plonetheme.relic
    plonetheme.responsive1140
    plonetheme.responsivetheme
    plonetheme.solemnity
    plonetheme.stylized
    plonetheme.subordinate
    plonetheme.sunburst
    plonetheme.terrafirma
    plonetheme.tidyblog
    plonetheme.transition
    plonetheme.twinapex
    plonetheme.unilluminated
    plonetheme.wmoWonen
    plonetheme.woodexperience
    plonetheme.xtheme
    sphinx.plonetheme
    vs.bootstrap.plonetheme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;after-plone-start&quot;&gt;
&lt;h2&gt;After Plone start&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    plonetheme.ReOrg
    plonetheme.aclark_twitter
    plonetheme.aqueouslight
    plonetheme.bananaleaf
    plonetheme.basic
    plonetheme.bluegray
    plonetheme.burned
    plonetheme.classic
    plonetheme.cleantheme
    plonetheme.codapress
    plonetheme.colorfulworld
    plonetheme.coolblue
    plonetheme.criticas
    plonetheme.cultureCab
    plonetheme.darkened
    plonetheme.delicious2
    plonetheme.diazo_sunburst
    plonetheme.discovery
    plonetheme.drupal
    plonetheme.earthlingtwo
    plonetheme.evergreen
    plonetheme.ewb_case
    plonetheme.freshpick
    plonetheme.fui
    plonetheme.gemstone
    plonetheme.greencommunity
    plonetheme.grungeera
    plonetheme.html5_hotpink
    plonetheme.inbusiness
    plonetheme.jsjamba
    plonetheme.keepitsimple
    plonetheme.labs
    plonetheme.leavesdew
    plonetheme.level2
    plonetheme.mimbo
    plonetheme.nonzero
    plonetheme.notredame
    plonetheme.overlappedtabs
    plonetheme.p2
    plonetheme.ploneorg
    plonetheme.pyar
    plonetheme.rcom
    plonetheme.redmusic
    plonetheme.relic
    plonetheme.responsive1140
    plonetheme.responsivetheme
    plonetheme.solemnity
    plonetheme.stylized
    plonetheme.subordinate
    plonetheme.sunburst
    plonetheme.terrafirma
    plonetheme.tidyblog
    plonetheme.transition
    plonetheme.twinapex
    plonetheme.unilluminated
    plonetheme.woodexperience
    plonetheme.xtheme
    sphinx.plonetheme
    vs.bootstrap.plonetheme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;removed-themes&quot;&gt;
&lt;h2&gt;Removed themes&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arnolfini&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gov&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intk&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;laboral&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mvob&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;netsightintranet&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;porseleinplaats&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plonetheme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wmoWonen&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Not bad! That&amp;#8217;s a lot of working themes for Plone 4, many of which use Diazo.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plonetheme-report-1.png&quot; /&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plonetheme-report-2.png&quot; /&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plonetheme-report-3.png&quot; /&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;In the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plonetheme&lt;/span&gt;&lt;/code&gt; namespace.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Plock is a Plone installer for the pip-loving crowd: &lt;a class=&quot;reference external&quot; href=&quot;https://plock.github.com&quot;&gt;https://plock.github.com&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Introducing Plock Again</title>
    <id>http://blog.aclark.net/2013/12/29/introducing-plock-again/</id>
    <updated>2013-12-29T00:00:00Z</updated>
    <published>2013-12-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/12/29/introducing-plock-again/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-plock-again&quot;&gt;

&lt;p&gt;&lt;strong&gt;A few months ago I introduced Plock: the Plone-installer for the Pip-loving crowd.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few months ago I introduced &lt;strong&gt;Plock: the Plone-installer for the Pip-loving crowd&lt;/strong&gt;. Then I got sidetracked with the next version of Plock lingering unreleased in master. With the holidays underway I had a chance to revisit Plock and discovered a few things:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I still like the idea of Plock.&lt;/li&gt;
&lt;li&gt;I got carried away adding miscellaneous features to Plock, which only served to ruin the elegance of the idea.&lt;/li&gt;
&lt;li&gt;I particularly like the idea of moving my &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;hosted configuration files&lt;/a&gt; from PythonPackages to Plock. They always felt out of place in PythonPackages but I didn&amp;#8217;t have a better place to put them until now.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-plock&quot;&gt;
&lt;h2&gt;What is Plock?&lt;/h2&gt;
&lt;p&gt;So what is Plock today?&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;A Plone-installer for the Pip-loving crowd. That means someone with Python 2.7 and Pip should be able to install Plone in a matter of minutes with: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;plock&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A set of hosted configuration files for Plone called &lt;strong&gt;Plock Pins&lt;/strong&gt;. &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A command line utility with a sharp focus.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;features&quot;&gt;
&lt;h3&gt;Features&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve recently removed several extraneous features from Plock to sharpen the focus on installing Plone and its add-ons. Check out the Plock 0.1.9 &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;--help&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -h
usage: plock [-h] [-v] [-e] [-a ADD_ON] [-l] [-w] [-r] [install_dir]

Plock is a Plone Installer for the Pip-Loving Crowd

positional arguments:
  install_dir

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program&amp;#39;s version number and exit
  -e, --expert          expert mode
  -a ADD_ON, --add-on ADD_ON
                        install add-ons from PyPI
  -l, --list-addons     list add-ons from PyPI
  -w, --write-config    write buildout.cfg
  -r, --raw             unformatted output, use with -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-plone&quot;&gt;
&lt;h4&gt;Install Plone&lt;/h4&gt;
&lt;p&gt;The main focus is on installing Plone to a user-specified installation directory e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-add-ons&quot;&gt;
&lt;h4&gt;Install Add-ons&lt;/h4&gt;
&lt;p&gt;Additionally you may specify an add-on to install e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a Products.PloneFormGen .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add-on installations are cumulative, so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a Products.PloneFormGen .
$ plock -a collective.loremipsum .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;will result in a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3

[plone]
eggs =
    ${addon:packages}
    ${base:packages}
    Products.PloneFormGen
    collective.loremipsum
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add-ons that don&amp;#8217;t install via Buildout &lt;strong&gt;will not break your installation&lt;/strong&gt; e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -a asdf .
Plock is installing Plone............. error: buildout failed.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When Buildout fails, Plock restores the previous working &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;list-add-ons&quot;&gt;
&lt;h4&gt;List Add-ons&lt;/h4&gt;
&lt;p&gt;Because Plone is more fun with add-ons and because add-ons can be hard to find, Plock will list (and alpha-sort) all the Plone add-ons available from PyPI:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1) 73.unlockItems                           - A small tool for unlocking web_dav locked item in a plone portal.
2) actionbar.panel                          - Provides a (old) facebook style action panel at the bottom of your  Plone site
3) adi.init                                 - Deletes Plone&amp;#39;s default contents
4) adi.samplecontent                        - Deletes Plone&amp;#39;s default content and adds some sample content
5) adi.slickstyle                           - A slick style for Plone portals, easily extendable for your own styles.
6) anthill.querytool                        - GUI for AdvancedQuery with some extensions - searching the easy way for Plone
7) anthill.skinner                          - Skinning for plone made easy
8) anz.dashboard                            - Plone netvibes like dashboard implementation
9) anz.ijabbar                              - Integrate iJab(an open source XMPP web chat client recommended by xmpp.org) to your plone site.
10) archetypes.clippingimage                 - Image field and/or patch with clipping support for Plone/Archetypes.
…
1,256) zkaffold                                 - Build out demonstration content for plone
1,257) ZopeSkel                                 - Templates and code generator for quickstarting Python, Zope and Plone projects.
1,258) zopeskel.diazotheme                      - Paster templates for Plone Diazo theme package
1,259) zopeskel.niteoweb                        - Paster templates for standard NiteoWeb Plone projects
1,260) zopyx.ecardsng                           - An ECard implementation for Plone
1,261) zopyx.ipsumplone                         - Lorem ipsum text and image demo content for Plone
1,262) zopyx.multieventcalendar                 - A multi-event calendar for Plone 3.X
1,263) zopyx.plone.cassandra                    - Show all assigned local roles within a subtree for any Plone 4 site
1,264) zopyx.plone.migration                    - Export/import scripts for migration Plone 2+3 to Plone 4
1,265) zopyx.smartprintng.plone                 - Produce &amp;amp; Publisher server integration with Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;write-config&quot;&gt;
&lt;h4&gt;Write config&lt;/h4&gt;
&lt;p&gt;Lastly, because sometimes you want to write a configuration file without installing Plone there is:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -w .
Wrote buildout.cfg.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which will result in:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat buildout.cfg
[buildout]
extends = https://raw.github.com/plock/pins/master/plone-4-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Extending configuration files over the internet is not a universally accepted technique due to the inherent security risk, but it&amp;#8217;s how I&amp;#8217;ve worked with Plone for years. I once added a &amp;#8220;secure&amp;#8221; feature to Plock but removed it recently due to the maintenance burden. Plock is now primarily insecure but true to its original goal of simplicity. Maybe security can be re-added later in some semi-elegant way (e.g. cert verification by the client?).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">What's new as of Plock 0-1-2?</title>
    <id>http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/</id>
    <updated>2013-07-29T00:00:00Z</updated>
    <published>2013-07-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/07/29/whats-new-as-of-plock-0-1-2/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;what-s-new-as-of-plock-0-1-2&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plock is a Plone Installer for the Pip-Loving Crowd.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I blogged about Plock after 0.0.1 was released and a lot of progress has been made since then, so I thought I&amp;#8217;d give an update. But rather than a traditional list-the-changelog-style-blog-entry, I thought I&amp;#8217;d walk you through what you can do with Plock as of version 0.1.2.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;install-plone&quot;&gt;
&lt;h2&gt;Install Plone&lt;/h2&gt;
&lt;p&gt;Plock exists to the eliminate cognitive dissonance experienced by Python programmers who want to install Plone but don&amp;#8217;t want to think about installing Plone. Such folks can now type the following to install Plone 4.3 (inside an activated virtualenv of course):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install plock
$ plock
Installing Plone. This may take a while.......(3)....(4)....(4)....(4)....(5)....(5)....(9)....(14)....(21)....(24)....(29)....(33)....
(38)....(43)....(48)....(54)....(58)....(62)....(66)....(71)....(74)....(78)....(78)....(83)....(87)....(89)....(92)....(97)....(98)....
(98)....(98)....(98)....(98)....(100)....(102)....(103)....(108)....(110)....(113)....(115)....(120)....(123)....(128)....(133)....(138)....
(142)....(148)....(153)....(158)....(161)....(163)....(168)....(171)....(175)....(179)....(181)....(184)....(189)....(193)....(195)....(198)....
(203)....(205)....(210)....(214)....(221)....(224)....(228)....(234). done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;run-plone&quot;&gt;
&lt;h2&gt;Run Plone&lt;/h2&gt;
&lt;p&gt;With Plock, you can &lt;strong&gt;truly&lt;/strong&gt; run Plone because you are not running scripts with any of the following not-plone names: client, instance, zope.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;list-add-ons&quot;&gt;
&lt;h2&gt;List add-ons&lt;/h2&gt;
&lt;p&gt;One of the biggest attractions to using Plone is all the work on your new web project that has already been done for you. There are over 1,200 packages on PyPI with &amp;#8220;plone&amp;#8221; in either the description, keywords list, or summary. Some of these are part of the core, and some don&amp;#8217;t work with the latest release, but there are still a lot of add-ons available (I&amp;#8217;m currently working on an accurate count.)&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -l
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/plock-list-addons.png&quot; style=&quot;width: 95%;&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install-add-ons&quot;&gt;
&lt;h2&gt;Install add-ons&lt;/h2&gt;
&lt;p&gt;With Plock, installing add-ons is done from the command line. Pick a Python package name and install-away:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i Products.PloneFormGen
Installing Plone. This may take a while... done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or pick two or more:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i Products.PloneFormGen collective.cover
Installing Plone. This may take a while... done.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(If you have already installed an add-on with Plock, you can preserve the currently installed list with &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-p&lt;/span&gt;&lt;/code&gt;. Otherwise, the add-ons installed are replaced with each new call to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;-i&lt;/span&gt;&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;If you pick a bad one, Plock has your back:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ plock -i foo
Installing Plone. This may take a while... error!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In the above scenario, Plock restored your previous configuration before reporting the error and exiting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;all-the-rest&quot;&gt;
&lt;h2&gt;All the rest&lt;/h2&gt;
&lt;p&gt;For more details, please see:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock/blob/master/CHANGES.rst#changelog&quot;&gt;https://github.com/aclark4life/plock/blob/master/CHANGES.rst#changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issues&quot;&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;p&gt;If you use Plock and have an issue, please report it here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock/issues&quot;&gt;https://github.com/aclark4life/plock/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Introducing Plock</title>
    <id>http://blog.aclark.net/2013/07/19/introducing-plock/</id>
    <updated>2013-07-19T00:00:00Z</updated>
    <published>2013-07-19T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/07/19/introducing-plock/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-plock&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plock is a Plone Installer for the Pip-Loving Crowd. Plone is a Python-based CMS.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Installing Plone with &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plock&quot;&gt;Plock&lt;/a&gt; looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install plock
$ bin/install-plone
$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;configuration&quot;&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Plone uses &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/zc.buildout&quot;&gt;Buildout&lt;/a&gt; to manage its installation and configuration. Plock creates a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file for you that looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/pythonpackages/buildout-plone/master/latest

[plone]
eggs +=
# Add-ons go here e.g.:
#    Products.PloneFormGen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-ons&quot;&gt;
&lt;h3&gt;Add-ons&lt;/h3&gt;
&lt;p&gt;See &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi?:action=browse&amp;amp;show=all&amp;amp;c=563&quot;&gt;https://pypi.python.org/pypi?:action=browse&amp;amp;show=all&amp;amp;c=563&lt;/a&gt; for a complete list of add-ons compatible with Plone 4.3.&lt;/p&gt;
&lt;p&gt;To install add-ons, add the desired Python package name(s) to the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;eggs&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;+=&lt;/span&gt;&lt;/code&gt; parameter e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/pythonpackages/buildout-plone/master/latest

[plone]
eggs +=
    Products.PloneFormGen
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Stop Plone and run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Install the add-on(s) in Plone via Site Setup -&amp;gt; Add-ons.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone.org Upgraded</title>
    <id>http://blog.aclark.net/2013/06/22/plone-org-upgraded/</id>
    <updated>2013-06-22T00:00:00Z</updated>
    <published>2013-06-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/06/22/plone-org-upgraded/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-org-upgraded&quot;&gt;

&lt;p&gt;&lt;strong&gt;Recently I upgraded plone.org from Plone 4.2 to Plone 4.3.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recently at the behest of Liz Leddy, I &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163&quot;&gt;upgraded plone.org from Plone 4.2 to Plone 4.3&lt;/a&gt;. It&amp;#8217;s been a while since I had the pleasure, so I thought I&amp;#8217;d make some notes: for myself, the AI Team and anyone else interested in the process.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;background&quot;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Plone.org is one of the &lt;strong&gt;oldest Plone sites in existence&lt;/strong&gt;, having been launched circa Plone 1 and upgraded in place ever since.&lt;/li&gt;
&lt;li&gt;It functions remarkably well, given #1.&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s not without its issues, but all of them are manageable —&amp;nbsp;for some value of manageable.&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s often very time consuming to work on.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pre-process&quot;&gt;
&lt;h2&gt;Pre-Process&lt;/h2&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;The first step is always to get a local copy:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git@github.com:plone/Products.PloneOrg.git
$ cd Products.PloneOrg
$ cp buildout.cfg.in buildout.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Edit &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; to extend the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;database.cfg&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
# Rename to buildout.cfg and uncomment one of the profiles below
extends =

# Plone only, unthemed
#    conf/develop.cfg

# Copy data local (with plone.org account)
    conf/database.cfg

# Production (for use on plone.org server)
#    conf/production.cfg

# Staging (for use on plone.org server)
# and Deployment (for use by Jenkins, admins and developers),
#   fabric can be added to any of primary configurations

#    conf/staging.cfg
#    conf/fabric.cfg

# Developer Database Drop; makes developer-friendly copies
# of plone.org&amp;#39;s content.
#    conf/devdrop.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Bootstrap and run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv-2.7 .
$ bin/pip install zc.buildout
$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Make the appropriate configuration changes i.e. change &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extends&lt;/span&gt;&lt;/code&gt; from 4.2 to 4.3:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
develop = .
extends =
    http://dist.plone.org/release/4.3.1/versions.cfg
    versions.cfg
    sources.cfg
extensions =
#    buildout.dumppickedversions
    buildout.threatlevel
    mr.developer

versions = versions
sources-dir = sources
eggs =
    Pillow
    Products.PloneOrg
    Products.PloneHotfix20130618

# get us a user and group variable
[env]
recipe = gocept.recipe.env
[grp]
recipe = collective.recipe.grp
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Run the upgrade locally. With plone.org data this takes about 45 minutes to an hour &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/upgrade.png&quot; /&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;If the upgrade succeeds, you are ready to launch. If it fails, fix the errors before proceeding.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;process&quot;&gt;
&lt;h2&gt;Process&lt;/h2&gt;
&lt;p&gt;We know from upgrading locally that the process will take about 45 minutes to an hour, so you should &lt;strong&gt;allocate about 2 hours to do the upgrade&lt;/strong&gt;.&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Announce the upgrade: preferably a week or two in advance. The plone-developers and plone-users lists are probably sufficient, but you can create a plone.org news item too if you are feeling extra-ambitious. I only had a small window to perform this maintenance, so I skipped this step and proceeded directly to the next one.&lt;/li&gt;
&lt;li&gt;Add a status message to plone.org to indicate a maintenance window is in progress. I chose to customize the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;main_template&lt;/span&gt;&lt;/code&gt; to accomplish this, but ideally we&amp;#8217;d have some functionality in Plone that allowed site administrators to easily configure status messages.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/upgrade-message.png&quot; /&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Disable logins. Since the upgrade takes a long time, we don&amp;#8217;t want content being edited during this process. I chose to use David Glick&amp;#8217;s technique of disabling PAS. I moved the ldap authentication plugin to the Active Plugin list, thus disabling PAS such that only ZODB users could login. But ideally we&amp;#8217;d have some feature in Plone to allow site administrators to disable logins.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pas.png&quot; /&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;Run the upgrade. I forgot to mention earlier something very important: &lt;strong&gt;On plone.org, you can&amp;#8217;t access Zope from the internet.&lt;/strong&gt; And you can&amp;#8217;t run the upgrade without accessing Zope. Hence run the following command to access the server, then access Plone via &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;http://localhost:8080&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -L 8080:10.57.0.107:5011 direct.plone.org
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class=&quot;first&quot;&gt;After the upgrade finishes, click around to make sure you didn&amp;#8217;t break anything. In my case, I broke something — I normally move &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;portal_skins/custom&lt;/span&gt;&lt;/code&gt; out of the way before upgrading, but this time I forgot. And when I experienced minor JavaScript issues, I forgot to examine custom; which currently looks like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/custom.png&quot; /&gt;
&lt;p&gt;Even if I had remembered, I didn&amp;#8217;t want to spend the next few hours examining database customizations. Fortunately, before I realized I had forgotten to check custom, I emailed the plone-developers list —&amp;nbsp;and Nathan Van Gheem to the rescue! He fixed some JavaScript in custom, then I cleared the cache(s). Ideally Plone would report on database customizations during the upgrade process: to indicate the potential for breakage and encourage the site administrator to round-trip those customizations back to the file system.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That&amp;#8217;s it! I hope this helps folks wrap their head around the plone.org upgrade process. A few closing thoughts:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;With Cloudflare in front, we probably don&amp;#8217;t need Varnish anymore.&lt;/li&gt;
&lt;li&gt;Leaving a note in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;portal_skins/custom&lt;/span&gt;&lt;/code&gt; to encourage folks to &amp;#8220;please keep this area clean&amp;#8221; — does not work.&lt;/li&gt;
&lt;li&gt;plone.com anyone? I don&amp;#8217;t know the future of plone.org and I have mixed feelings about it: on the one hand, I&amp;#8217;m proud to help maintain such an old and venerable system. On the other hand, I think plone.org should be retired in a way similar to old.zope.org. What do you think?&lt;/li&gt;
&lt;/ul&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It shouldn&amp;#8217;t take this long. See: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163#commitcomment-3384259&quot;&gt;https://github.com/plone/Products.PloneOrg/commit/b04105f7c9cacf3880c12effba5ffe261d4b5163#commitcomment-3384259&lt;/a&gt; for a discussion about this issue.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Built with Plone, Powered by GitHub Pages</title>
    <id>http://blog.aclark.net/2013/02/23/built-with-plone-powered-by-github-pages/</id>
    <updated>2013-02-23T00:00:00Z</updated>
    <published>2013-02-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/02/23/built-with-plone-powered-by-github-pages/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;built-with-plone-powered-by-github-pages&quot;&gt;

&lt;p&gt;&lt;strong&gt;Is Plone the next great static website generator? Probably not, but it definitely could be.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I am always looking for ways to improve, streamline and otherwise hack my e-life. And this post is about all of the above.
&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/httrack.png&quot;&gt;https://raw.github.com/ACLARKNET/blog/gh-pages/images/httrack.png&lt;/a&gt;
Plone in the cloud&lt;/p&gt;
&lt;p&gt;Plone is still too &amp;#8220;heavy&amp;#8221; to easily run &amp;#8220;in the cloud&amp;#8221; (except via &lt;a class=&quot;reference external&quot; href=&quot;http://ploud.com&quot;&gt;http://ploud.com&lt;/a&gt;, HT), but it&amp;#8217;s getting there. In particular, I find this effort by David Bain very inspiring:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/pigeonflight/stack-python-plone&quot;&gt;https://github.com/pigeonflight/stack-python-plone&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;And based on my experiments and research on Heroku:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/zope2-heroku&quot;&gt;https://github.com/aclark4life/zope2-heroku&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The only &amp;#8220;real&amp;#8221; remaining issue seems to be packaging; we need this PLIP to happen sooner, rather than later:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/ticket/13283&quot;&gt;https://dev.plone.org/ticket/13283&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Cheating&lt;/p&gt;
&lt;p&gt;In the meantime, one way you can cheat is to export the contents of your Plone site with httrack then host the results for free on GitHub Pages (i.e. &amp;#8220;the cloud&amp;#8221;)&lt;/p&gt;
&lt;p&gt;This process if far from perfect [1], but in a pinch it can work. And it recently worked very well for me so I thought I&amp;#8217;d share. See:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com&quot;&gt;https://github.com/ACLARKNET/aclarknet.github.com&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;These links are my website, and GitHub Pages repository respectively. The website was created with Plone (&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/new_style&quot;&gt;https://github.com/ACLARKNET/new_style&lt;/a&gt;) then exported via httrack, then uploaded to GitHub Pages (to the gh-pages branch of any repo except &amp;lt;{org,user}&amp;gt;&amp;gt;.github.com repos).
[1] httrack got &amp;#8220;stuck&amp;#8221; on my &amp;#64;&amp;#64;search links, and I&amp;#8217;ve got a lot of duplicate content now. Fortunately I don&amp;#8217;t mind editing lots and lots of text files.
Conclusion&lt;/p&gt;
&lt;p&gt;In doing this, I was able to turn off my $11/month &amp;#8220;website and IRC server&amp;#8221; which makes the CFO happy. And in a year or so with Plone 5, hopefully I&amp;#8217;ll be able to return to the cloud and edit content &amp;#8220;live&amp;#8221; again.&lt;/p&gt;
&lt;p&gt;What do you think about Plone as a static site generator and/or Plone in the cloud? Let me know in the comments below.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">About My Work</title>
    <id>http://blog.aclark.net/2013/01/10/about-my-work/</id>
    <updated>2013-01-10T00:00:00Z</updated>
    <published>2013-01-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/10/about-my-work/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;about-my-work&quot;&gt;

&lt;p&gt;&lt;strong&gt;Regarding some of the criticism or objection to some of the content of my blog entries, etc.,&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are my thoughts:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;i-hear-you&quot;&gt;
&lt;h2&gt;I hear you&lt;/h2&gt;
&lt;p&gt;No one is more critical of my work than me. If you have feedback, criticism, etc. then please do let me know. I consider very carefully every request I receive, and I make every attempt to be cordial and accommodating. The place to do that for &lt;strong&gt;this blog&lt;/strong&gt; is currently:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com/issues&quot;&gt;https://github.com/ACLARKNET/aclarknet.github.com/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or for folks without a GitHub account (i.e. anonymous):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/aclarknet/blog/issues&quot;&gt;https://bitbucket.org/aclarknet/blog/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or just email me:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or add a comment below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;controversial-entries-explained&quot;&gt;
&lt;h2&gt;Controversial Entries Explained&lt;/h2&gt;
&lt;p&gt;I&amp;#8217;d also like to clarify my intentions with regard to two of my most recent and somewhat controversial entries:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Zen of Zope&lt;/li&gt;
&lt;li&gt;Plone Kitty&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are intended to be &lt;em&gt;pro&lt;/em&gt; Zope and &lt;em&gt;pro&lt;/em&gt; Plone. Yes, Zope can be complex. But it&amp;#8217;s also useful. And full of &amp;#8220;been there, done that&amp;#8221; wisdom. Yes, the simple days of Plone Kitty are gone, but there are many great things ahead. Let&amp;#8217;s carry the best of the past forward into the future.&lt;/p&gt;
&lt;p&gt;I don&amp;#8217;t always state my intentions this explicitly: because that is no where near as fun for me. But I don&amp;#8217;t want folks to get the wrong impression either, so please help me get the message right if you can.&lt;/p&gt;
&lt;p&gt;As always, thanks for reading.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Introducing The Plone Kitty</title>
    <id>http://blog.aclark.net/2013/01/09/introducing-the-plone-kitty/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/introducing-the-plone-kitty/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-the-plone-kitty&quot;&gt;

&lt;p&gt;&lt;strong&gt;Actually: re-introducing the Plone Kitty from Plone 1!&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/plone-kitty.png&quot; /&gt;
&lt;p&gt;&lt;em&gt;Plone Kitty&lt;/em&gt; is the name of a theme (then called &amp;#8220;skin&amp;#8221;) that shipped with the earliest versions of &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt; (1.1 in the image above). This was a simpler time when the web was new, and everything was possible!&lt;/p&gt;
&lt;p&gt;Today, we know that the &lt;strong&gt;web is hard&lt;/strong&gt;. While everything is still possible, building the web requires a tremendous amount of hard work. But it doesn&amp;#8217;t have to be all drudgery. There is still quite a bit of fun to be had building the web, if you know where to look (in addition to all the unavoidable hard work).&lt;/p&gt;
&lt;p&gt;Enter: Plone. Both the web and Plone have changed drastically since The Plone Kitty once prowled the internet. And while the Plone Kitty is all but extinct, Plone lives on; continously modernizing itself to keep up with the fast pace of today&amp;#8217;s modern web.&lt;/p&gt;
&lt;p&gt;From the &lt;a class=&quot;reference external&quot; href=&quot;http://plone-1-fun.herokuapp.com&quot;&gt;Plone Kitty website&lt;/a&gt; (now running on Heroku!):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;If you used Plone &amp;quot;back in the day&amp;quot; (early 2000s), please add a comment below about your experiences then. If you are new to Plone or just curious
about it now, please add a comment below about your initial impressions.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So if you&amp;#8217;d like to add &lt;strong&gt;your bit of nostalgia&lt;/strong&gt;, or first impressions of Plone, &lt;a class=&quot;reference external&quot; href=&quot;http://plone-1-fun.herokuapp.com/#disqus&quot;&gt;please do so here&lt;/a&gt;. I appreciate any and all comments.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hello Plone Again</title>
    <id>http://blog.aclark.net/2013/01/09/hello-plone-again/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/hello-plone-again/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone-again&quot;&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#8217;m back!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Regarding my recent &amp;#8220;Goodbye Plone&amp;#8221; post:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s come to my attention that the style of my departure post, and associated actions, may be perceived poorly. I&amp;#8217;m sorry. This was not my intention, and I apologize if I&amp;#8217;ve upset anyone. The Plone Community deserves the best, so let me see what I can do to address this.&lt;/li&gt;
&lt;li&gt;Several folks have reached out to express their concern about my departure, I appreciate this very much.&lt;/li&gt;
&lt;li&gt;While I stand behind my need to distance myself from such conflicts, I don&amp;#8217;t want to give the Plone Community or the outside world the wrong impression.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, let me say this: I&amp;#8217;m thinking about what happened today, and I&amp;#8217;m going to comment about it in the future. I.e. after 24 hours or so. Regardless of future updates, please consider me: &amp;#8220;around in some capacity, but not as fully engaged for personal reasons&amp;#8221;. This is an attempt to revert my abrubt departure, while at the same time not fully re-engaging until such time as I can determine the best course of action. Note that above all, and aside from my personal and professional goals, I don&amp;#8217;t want to be disruptive to the community if I can help it.&lt;/p&gt;
&lt;p&gt;Thanks for reading.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Goodbye Plone</title>
    <id>http://blog.aclark.net/2013/01/09/goodbye-plone/</id>
    <updated>2013-01-09T00:00:00Z</updated>
    <published>2013-01-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2013/01/09/goodbye-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;goodbye-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;I quit!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After experiencing an unexpectedly negative reaction in #plone to my most recent post &amp;#8220;Introducing The Plone Kitty&amp;#8221; (which was intended to be light-hearted and fun), I have decided to leave the Plone community for good. I wish you all the best! It&amp;#8217;s been fun.&lt;/p&gt;
&lt;p&gt;To be clear: I&amp;#8217;ll still be doing some Plone consulting as part of my &amp;#8220;day job&amp;#8221; at ACLARK.NET, LLC. But I won&amp;#8217;t be participating in any community events because it has become clear to me that my vision for Plone, and the Plone Community, may be inconsistent with the vision held by other members of the core team.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Guide</title>
    <id>http://blog.aclark.net/2012/11/23/plone-guide/</id>
    <updated>2012-11-23T00:00:00Z</updated>
    <published>2012-11-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/11/23/plone-guide/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-guide&quot;&gt;

&lt;p&gt;&lt;strong&gt;For anyone new to my blog, welcome.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;who&quot;&gt;
&lt;h2&gt;Who&lt;/h2&gt;
&lt;p&gt;For anyone new to my blog, welcome. I am Alex Clark: Python Web Developer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what&quot;&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;Recently with a tweet, I announced the start of a new personal project:&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/tweet.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;when&quot;&gt;
&lt;h2&gt;When&lt;/h2&gt;
&lt;p&gt;I have tentatively scheduled this project to be completed by the end of 2013, because it&amp;#8217;s important to set a deadline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;where&quot;&gt;
&lt;h2&gt;Where&lt;/h2&gt;
&lt;p&gt;This project will be hosted on one of my current favorite websites: &lt;a class=&quot;reference external&quot; href=&quot;http://readthedocs.org&quot;&gt;http://readthedocs.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;why&quot;&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I think about Plone a lot as it relates to my current professional work. And I have more thoughts than I can currently keep track of in blogs, tweets, etc. So I decided to make an effort to write them all down.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how&quot;&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;p&gt;I think a lot about what other people think about Plone, so I decided this book will feature comments from the general public in it. E.g.:&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/comments.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-much&quot;&gt;
&lt;h2&gt;How much?&lt;/h2&gt;
&lt;p&gt;This book will be free. But if you&amp;#8217;d like to support its development, please &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip me&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s not much to it yet, but feel free to head over and add some comments: &lt;a class=&quot;reference external&quot; href=&quot;https://plone-guide.readthedocs.org/en/latest/&quot;&gt;https://plone-guide.readthedocs.org/en/latest/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Secrets 5: The Community</title>
    <id>http://blog.aclark.net/2012/10/23/plone-secrets-episode-5-the-community/</id>
    <updated>2012-10-23T00:00:00Z</updated>
    <published>2012-10-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/23/plone-secrets-episode-5-the-community/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-5-the-community&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a non-technical post on the Plone community, why it&amp;#8217;s so great, how it functions, and some details that may help one understand it from the outside looking in (AKA The &amp;#8220;secrets&amp;#8221;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;size-and-activity&quot;&gt;
&lt;h2&gt;Size and Activity&lt;/h2&gt;
&lt;p&gt;The Plone community is &lt;strong&gt;HUGE&lt;/strong&gt;. I don&amp;#8217;t have any numbers handy, but I&amp;#8217;m sure there is as much if not more activity going on in the Plone Community right now as there is in the White House &amp;#8220;reelection department&amp;#8221;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;structure&quot;&gt;
&lt;h2&gt;Structure&lt;/h2&gt;
&lt;p&gt;The Plone community consists (roughly) of Founders, Contributors, and Users. It has formalized itself into a &lt;strong&gt;501(c)(3) organization&lt;/strong&gt; with a corresponding board and membership. The board conducts business to &amp;#8220;protect and promote Plone&amp;#8221; on behalf of the community and the foundation members (but not necessarily board members) are all recognized contributors. Contributors control the speed and direction of the project. Some of the contributors are:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;teams&quot;&gt;
&lt;h3&gt;Teams&lt;/h3&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;The Framework Team&lt;/strong&gt; (arguably the most important team, next to the core developers themselves &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[0]&lt;/a&gt;.) Responsible for &amp;#8220;evaluating PLIPS for inclusion in Plone&amp;#8221;. PLIPS are &amp;#8220;Plone Improvement Proposals&amp;#8221; used to convey the message: &amp;#8220;I want to add this feature to (or remove from) Plone core and I, or the others listed here, will do the work.&amp;#8221;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Documentation Team&lt;/strong&gt; (arguably equally as important) Responsible for documenting the Plone software for developers and end users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The QA Team&lt;/strong&gt; (arguably… oh hell they&amp;#8217;re all important) Responsible for making sure the software is suitable for consumption by developers and end users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Marketing Team&lt;/strong&gt; Responsible for promoting Plone to prospective consumers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The AI Team&lt;/strong&gt; (Admin Infrastructure) &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; Responsible for maintaining software and systems infrastructure for the community.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Internationalization Team&lt;/strong&gt; Responsible for translating Plone&amp;#8217;s user interface text into multiple language.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security team&lt;/strong&gt; Responsible for addressing complex security issues with Plone core software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;And more…&lt;/strong&gt; I&amp;#8217;m sure I missed some teams, feel free to check out the entire list here: &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/team&quot;&gt;http://plone.org/team&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;factions&quot;&gt;
&lt;h3&gt;Factions&lt;/h3&gt;
&lt;p&gt;As is common in the world at large, the Plone community is comprised of various factions. From circles of friends, to the hundreds of Plone consulting firms, to the business sectors that embrace Plone (e.g. non-profits). These factions may never, in their lifetimes, interact with one another but they are critical to the success of Plone. (It would be a shame if they didn&amp;#8217;t, which is why we have the annual Plone Conference).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;individuals&quot;&gt;
&lt;h3&gt;Individuals&lt;/h3&gt;
&lt;p&gt;Finally, we have the noteworthy individuals of the project. These include the Founders, Board Presidents, Release Managers, Core Developers, and more. Most especially this includes &lt;strong&gt;YOU&lt;/strong&gt;. If you have contributed to the Plone project in any way large or small, your work is appreciated.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;greatness&quot;&gt;
&lt;h2&gt;Greatness&lt;/h2&gt;
&lt;p&gt;What&amp;#8217;s great is that it all works. I am struck by how much the Plone Community is a microcosm of the world. Especially during election time in the United States, I&amp;#8217;ve been thinking a lot about &amp;#8220;how the world works&amp;#8221; and I see the same patterns everywhere. Not everyone:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Enjoys the same activities&lt;/li&gt;
&lt;li&gt;Shares the same beliefs&lt;/li&gt;
&lt;li&gt;Likes the same people&lt;/li&gt;
&lt;li&gt;Has the same goals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But when you share a common goal e.g. Running a country, or a city, or a state, or business, or a community, or a project, you find ways to get along. Individuals work with other individuals, factions work with other factions, teams works with others teams, projects ship their product to the world. In this case, I&amp;#8217;m looking forward to the Plone project shipping its product to the world for the next 10 years or more.&lt;/p&gt;
&lt;p&gt;Good luck to us all!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Consider a&lt;/em&gt;&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
        src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
        width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&amp;lt;3&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[0]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I&amp;#8217;m not listing the core developers because there are over 100 of them and they don&amp;#8217;t formally meet as far as I know. But of course, without the Founders and Core Developers none of us would be here. So a very special thanks to them as well.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Term coined by Wyn Williams&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Why Split The Lists</title>
    <id>http://blog.aclark.net/2012/10/22/why-split-the-lists/</id>
    <updated>2012-10-22T00:00:00Z</updated>
    <published>2012-10-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/22/why-split-the-lists/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;why-split-the-lists&quot;&gt;

&lt;p&gt;&lt;strong&gt;The Plone community consists (roughly) of Founders, Contributors, and Users.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;background&quot;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;The Plone community consists (roughly) of Founders, Contributors, and Users. It has formalized itself into a 501(c)(3) software foundation with a corresponding board and membership. The board conducts business on behalf of the community and the board and foundation members are all recognized contributors. Both the board and the membership have their own private mailing list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issue&quot;&gt;
&lt;h2&gt;Issue&lt;/h2&gt;
&lt;p&gt;Over the years, issues have been raised on the membership list that have led to more discussion than all of the foundation membership are comfortable with. And some have expressed that concern (usually without addressing the orginal concern or &amp;#8220;topic&amp;#8221; of the thread).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;fix&quot;&gt;
&lt;h2&gt;Fix&lt;/h2&gt;
&lt;p&gt;While I am quite confident that folks can manage their own &lt;strong&gt;INBOXES&lt;/strong&gt; (or should be able to), I&amp;#8217;m not confident that folks (myself included) can resist engaging with others over issues like:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The &amp;#8220;religious&amp;#8221; aspect (The Plone community is better than this!)&lt;/li&gt;
&lt;li&gt;The practical aspect (Everyone can just control themselves!)&lt;/li&gt;
&lt;li&gt;The miscommunication (You are obviously &amp;#8220;wrong&amp;#8221; about XYZ which I won&amp;#8217;t address but rather suggest you stop!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To me, the fix is simple. Do the most practical thing and split the lists into: Membership-announce and Membership-discuss (note: discussions with the board list are a different matter.) This says nothing about the health of the community (which is strong), it just means: announce is for important information like &amp;#8220;please renew your foundation membership&amp;#8221; and discuss is for hashing out issues that foundation members care about.&lt;/p&gt;
&lt;p&gt;As someone who volunteers to help maintain the lists for the community, I don&amp;#8217;t take this suggestion lightly but I think it&amp;#8217;s the right thing to do to move forward and make the most number of people happy. That said, if a vote decides otherwise I am OK with that, but I&amp;#8217;ll be curbing the amount of discussion I would actually like to do on the membership list.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Review of Aspeli's Professional Plone 4 Development</title>
    <id>http://blog.aclark.net/2012/10/20/review-of-aspeli-plone-4-development/</id>
    <updated>2012-10-20T00:00:00Z</updated>
    <published>2012-10-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/20/review-of-aspeli-plone-4-development/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;review-of-aspeli-s-professional-plone-4-development&quot;&gt;

&lt;p&gt;&lt;strong&gt;I owe PACKT a review of this book, so here it is.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First: I liked it. Second: I appreciate Aspeli writing it. Third: Like many others, I couldn&amp;#8217;t wait for it to come out. Fourth: I know that it was a &lt;strong&gt;TON OF WORK&lt;/strong&gt; and &lt;strong&gt;PROBABLY NOT WORTH THE MONEY&lt;/strong&gt; to write it. So why write a Plone book? A few reasons (other than money):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s good for you&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s good for the community&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s good for Plone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So if you care about Plone: please go buy both an electronic and paper version of this book &lt;strong&gt;RIGHT NOW&lt;/strong&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id5&quot; id=&quot;id1&quot;&gt;[0]&lt;/a&gt;. While you are at it, please pick up a copy of &lt;strong&gt;Plone 3.3 Site Administration&lt;/strong&gt;. It&amp;#8217;s quite good, and I hear the author is a &lt;strong&gt;swell guy&lt;/strong&gt; who would appreciate your generosity &lt;a class=&quot;footnote-reference&quot; href=&quot;#id6&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id7&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-i-like&quot;&gt;
&lt;h2&gt;What I like&lt;/h2&gt;
&lt;p&gt;First let me cover what I &lt;strong&gt;ABSOLUTELY LOVE&lt;/strong&gt; about this book.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout-eggs&quot;&gt;
&lt;h3&gt;buildout:eggs&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/buildout.png&quot; /&gt;
&lt;p&gt;Aspeli correctly addresses one of my biggest pet peeves (concerns) about what I believe to be an &lt;strong&gt;ANTI-PATTERN&lt;/strong&gt; in almost every Plone buildout: buildout:eggs (referring to the eggs parameter of the buildout section; it does not exist, other than as a convenient variable setting).&lt;/p&gt;
&lt;p&gt;If you know me, you know I&amp;#8217;ve spoken about this before and whilst I&amp;#8217;ve moved on from harping on it I will say this: with most software that uses ini-style configuration files when you set a parameter you expect something to happen. But since Buildout is more complicated than the average software that uses ini-style configuration, that expectation is not always met.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-ons&quot;&gt;
&lt;h3&gt;Add-ons&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;image://raw.github.com/ACLARKNET/blog/gh-pages/images/addons.png&quot; /&gt;
&lt;p&gt;Did you see? You might have missed it. No mention of &lt;strong&gt;Products&lt;/strong&gt; WHAT-SO-EVER. &amp;#8220;Product&amp;#8221; was a term that Zope2 used for Python libraries that enhanced the functionality of Zope2, and it stuck. Now, it should die in favor of a term everyone else in the world is familiar with (in this context): add-on. Well played, Aspeli. Well played.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-review&quot;&gt;
&lt;h2&gt;The Review&lt;/h2&gt;
&lt;p&gt;I will now talk about each chapter briefly. This will be TL;DR-style, but I hope you&amp;#8217;ll get a nice idea for why this book is so great. Every imaginable detail for each section is covered in the book in painstaking detail by Aspeli. If you have any questions, please don&amp;#8217;t hesitate to ask them in the comments.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-1-plone-in-context&quot;&gt;
&lt;h3&gt;Chapter 1: Plone in Context&lt;/h3&gt;
&lt;p&gt;In which we learn what, why &amp;amp; when Plone is, plus a bit more. My favorite sub-section is: Plone-the-application and Plone-the-framework, in which Aspeli describes the phenomenon of Plone the application being used by some folks as a generic Python web framework. Plone&amp;#8217;s strengh and indeed its raison d&amp;#8217;etre (reason to exist) is to provide a fully-featured CMS web application suitable for immediate use, or use immediately after a few simple customizations. So if you try to use it as a web framework, you may not get exactly what you expect (because it was not designed to be used that way).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-2-introduction-to-the-case-study&quot;&gt;
&lt;h3&gt;Chapter 2: Introduction to the Case Study&lt;/h3&gt;
&lt;p&gt;In which we learn how a professional may execute a typical website project with Plone. This is a nice little chapter with some great details about the fictional project that will be executed throughout the remainder of the book: requirements, mockups, and information architecture are the highlights here; as well as the necessary CMS details like users, groups, and content types.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-3-the-development-environment&quot;&gt;
&lt;h3&gt;Chapter 3: The Development Environment&lt;/h3&gt;
&lt;p&gt;In which we learn about how to setup an environment in which you can customize Plone to suit your needs. TL;DR: fairly typical Python development environment &lt;a class=&quot;footnote-reference&quot; href=&quot;#id8&quot; id=&quot;id4&quot;&gt;[3]&lt;/a&gt; with additional Plone details covered: Buildout recipes, development libraries, and more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-4-basics-of-customization&quot;&gt;
&lt;h3&gt;Chapter 4: Basics of Customization&lt;/h3&gt;
&lt;p&gt;In which we learn about the technical architecture of Plone: ZODB, GenericSetup, Zope2 CMF, Zope Component Architecture, and more (!). And the best way to implement your requirements within that architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-5-developing-a-site-strategy&quot;&gt;
&lt;h3&gt;Chapter 5: Developing a Site Strategy&lt;/h3&gt;
&lt;p&gt;In which we learn about how to bundle your customizations into a Python package for general use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-6-security-and-workflow&quot;&gt;
&lt;h3&gt;Chapter 6: Security and Workflow&lt;/h3&gt;
&lt;p&gt;In which we learn about how Plone implements generic web application features and how you can customize that implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-7-using-add-ons&quot;&gt;
&lt;h3&gt;Chapter 7: Using Add-ons&lt;/h3&gt;
&lt;p&gt;In which we learn about how to add additional Python libraries to Plone to provide additional features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-8-creating-a-custom-theme&quot;&gt;
&lt;h3&gt;Chapter 8: Creating a Custom Theme&lt;/h3&gt;
&lt;p&gt;In which we learn about Plone&amp;#8217;s new theming engine: Diazo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-9-nine-core-concepts-of-zope-programming&quot;&gt;
&lt;h3&gt;Chapter 9: Nine Core Concepts of Zope Programming&lt;/h3&gt;
&lt;p&gt;In which learn a bit more about the technical architecture of Plone. If you love this chapter (as many do), you might also enjoy: &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/reference_manuals/old/zope_secrets/index.html&quot;&gt;http://developer.plone.org/reference_manuals/old/zope_secrets/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-10-custom-content-types&quot;&gt;
&lt;h3&gt;Chapter 10: Custom Content Types&lt;/h3&gt;
&lt;p&gt;In which we learn about Plone&amp;#8217;s new content type framework: Dexterity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-11-standalone-views-and-forms&quot;&gt;
&lt;h3&gt;Chapter 11: Standalone Views and Forms&lt;/h3&gt;
&lt;p&gt;In which we learn about a topic that would be first, if Plone were a generic website framework: how to build forms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-12-relational-databases&quot;&gt;
&lt;h3&gt;Chapter 12: Relational Databases&lt;/h3&gt;
&lt;p&gt;In which we learn about how to integrate a relational database into your CMS application. Since Plone relies heavily on the ZODB, none is included by default.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-13-users-and-their-permissions&quot;&gt;
&lt;h3&gt;Chapter 13: Users and their Permissions&lt;/h3&gt;
&lt;p&gt;In which we learn about another topic that would be covered first if Plone were a generic website framework: authentication and authorization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-14-dynamic-user-interfaces-with-jquery&quot;&gt;
&lt;h3&gt;Chapter 14: Dynamic User Interfaces with jQuery&lt;/h3&gt;
&lt;p&gt;In which we learn about using jQuery in Plone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-15-summary-and-potential-enhancements&quot;&gt;
&lt;h3&gt;Chapter 15: Summary and Potential Enhancements&lt;/h3&gt;
&lt;p&gt;In which we learn about next steps. You&amp;#8217;ve just built and delivered a CMS application for your client. What will they ask you for next? And how will you implement it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope you have enjoyed this review; and I hope you&amp;#8217;ll consider purchasing a copy of Aspeli&amp;#8217;s book for your next Plone project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like this article? Consider a&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip&lt;/a&gt;. &lt;em&gt;You may also want to follow me on&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id5&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[0]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Disclaimer: I was given a copy of both versions in exchange for this review.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id6&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Seriously though, whilst PACKT literally forces you to include a software version number in your title, &lt;strong&gt;Plone 3.3 Site Administration&lt;/strong&gt; is still relevant to today&amp;#8217;s Plone. I expect it will be relevant through at least Plone 5.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id7&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The financial details of (at least) my contract for writing a book with PACKT &lt;strong&gt;CLEARLY FAVORED PACKT&lt;/strong&gt;. That said, I think they are a great organization and I am proud to be a PACKT author. But according to my statements, I still need to earn about $1K more in royalties before I have paid back my advance. Notice what I just said there: &lt;strong&gt;earn in royalties&lt;/strong&gt; i.e. I have to sell enough books in order to get PACKT to pay out enough money to meet the terms of the contract. I won&amp;#8217;t pretend to have any idea why PACKT does what it does with its contracts, except to say that I assume they expect to make money. I&amp;#8217;ll also assume everything is on the up and up. But unfortunately sometimes the &amp;#8220;up and up&amp;#8221; can look like this: &lt;a class=&quot;reference external&quot; href=&quot;http://www.techdirt.com/articles/20121018/01054720744/hollywood-accounting-how-19-million-movie-makes-150-million-still-isnt-profitable.shtml&quot;&gt;http://www.techdirt.com/articles/20121018/01054720744/hollywood-accounting-how-19-million-movie-makes-150-million-still-isnt-profitable.shtml&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id8&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Plone&lt;/span&gt;&lt;/code&gt; support may be available soon which may blow the lid off the Python popularity shack (raise the level of interest from generic Python developers interested in Python CMS applications).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Mailing List Etiquette</title>
    <id>http://blog.aclark.net/2012/10/20/mailing-list-etiquette/</id>
    <updated>2012-10-20T00:00:00Z</updated>
    <published>2012-10-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/20/mailing-list-etiquette/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;mailing-list-etiquette&quot;&gt;

&lt;p&gt;&lt;strong&gt;I read a lot of mailing lists.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/unison.png&quot; /&gt;
&lt;p&gt;Also, I&amp;#8217;ve been subscribing to, reading, and participating in discussions on mailing lists since about the time Mailman 1.0 was released circa 1999 &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. And I have fond memories of interacting administratively with MajorDomo and ListServ software. And by administratively, I mean sending the software commands and getting back a response. In fact, you might say I get along better with the software and machines than I do with the humans that use them. Which is not to say that I&amp;#8217;m not a people person: I love people. But I do struggle with striking the right balance between hacking machines and communicating with humans.&lt;/p&gt;
&lt;p&gt;Anyway, as you can imagine: I have &lt;strong&gt;VERY STRONG OPINIONS&lt;/strong&gt; about how folks should conduct themselves on mailing lists: call it a code of conduct. And regardless of what you might expect from a self-described &amp;#8220;hack&amp;#8221;: I work &lt;strong&gt;VERY HARD&lt;/strong&gt; to enforce that code of conduct on my own behavior. Do I occasionally step outside the lines? Of course. But make no mistake: I do not communicate in a vacuum. You can be as polite and courteous as The Pope and &lt;strong&gt;STILL GET THE SMACKDOWN&lt;/strong&gt; through no fault of your own. Why? Because humans make mistakes. Context gets lost. Do you think you know what&amp;#8217;s going on enough to make a comment? You might be wrong &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&amp;#8220;The single biggest problem in communication is the illusion that it has taken place.&amp;#8221;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;—  George Bernard Shaw quotes (Irish literary Critic, Playwright and Essayist. 1925 Nobel Prize for Literature, 1856-1950)&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;div class=&quot;section&quot; id=&quot;netiquette&quot;&gt;
&lt;h2&gt;Netiquette&lt;/h2&gt;
&lt;p&gt;So what is a human to do? Well, guess what! There&amp;#8217;s actually a set of rules or, code of conduct, for humans to follow. Someone wrote it all down. And it&amp;#8217;s commonly referred to today as &amp;#8220;netiquette&amp;#8221;. A quick glance at &lt;a class=&quot;reference external&quot; href=&quot;http://www.albion.com/netiquette/corerules.html&quot;&gt;The Core Rules of Netiquette&lt;/a&gt; and you&amp;#8217;ll be well on your way to being a better electronic human than you were the day before. I say this as someone familiar with netiquette, but not as someone who has actually studied up on the concepts recently. One of my favorites:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;From Rule #1: Remember The Human:&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;&amp;#8220;When you&amp;#8217;re holding a conversation online &amp;#8211; whether it&amp;#8217;s an email exchange or a response to a discussion group posting &amp;#8211; it&amp;#8217;s easy to misinterpret your correspondent&amp;#8217;s meaning. And it&amp;#8217;s frighteningly easy to forget that your correspondent is a person with feelings more or less like your own.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s ironic, really. Computer networks bring people together who&amp;#8217;d otherwise never meet. But the impersonality of the medium changes that meeting to something less &amp;#8211; well, less personal. Humans exchanging email often behave the way some people behind the wheel of a car do: They curse at other drivers, make obscene gestures, and generally behave like savages. Most of them would never act that way at work or at home. But the interposition of the machine seems to make it acceptable.&lt;/p&gt;
&lt;p&gt;The message of Netiquette is that it&amp;#8217;s not acceptable. Yes, use your network connections to express yourself freely, explore strange new worlds, and boldly go where you&amp;#8217;ve never gone before. But remember the Prime Directive of Netiquette: Those are real people out there.&lt;/p&gt;
&lt;p&gt;Would you say it to the person&amp;#8217;s face?&lt;/p&gt;
&lt;p&gt;Writer and Macintosh evangelist Guy Kawasaki tells a story about getting email from some fellow he&amp;#8217;s never met. Online, this fellow tells Guy that he&amp;#8217;s a bad writer with nothing interesting to say.&lt;/p&gt;
&lt;p&gt;Unbelievably rude? Yes, but unfortunately, it happens all the time in cyberspace.&amp;#8221;&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;One belief that I&amp;#8217;ve held for almost as long as I have been communicating electronically is: &lt;strong&gt;IF I SAY SOMETHING ELECTRONICALLY I PROBABLY MEAN IT&lt;/strong&gt;. That means you can expect to hear the same information from me in person, as you would in an email or other electronic corresponence. That also means that I rarely look back and &lt;strong&gt;CRINGE&lt;/strong&gt; and think to myself: &amp;#8220;Oh my gosh I can&amp;#8217;t believe I wrote that.&amp;#8221; Do I make mistakes? Of course. But less and less as I get older and older. More frequently than not, I stand 100% behind my electronic correspondence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;is-netiquette-enough&quot;&gt;
&lt;h2&gt;Is netiquette enough?&lt;/h2&gt;
&lt;p&gt;Netiquette covers almost everything you can think of. From trying to be sensitive to the context of the list (RULE #3 and #4) to helping guide the discussion the right way (RULE #7) to giving everyone the benefit of the doubt all the time (RULE #10).&lt;/p&gt;
&lt;p&gt;Still, sometimes &lt;strong&gt;CRAZY THINGS HAPPEN&lt;/strong&gt; like someone forgets to mail the list directly and the direction of the membership &amp;#8220;forks&amp;#8221;. Follow &lt;a class=&quot;reference external&quot; href=&quot;http://lists.plone.org/pipermail/plone-com/Week-of-Mon-20120903/000039.html&quot;&gt;this thread&lt;/a&gt; to see me both issue a &lt;strong&gt;SMACKDOWN&lt;/strong&gt; then &lt;strong&gt;APOLOGIZE&lt;/strong&gt; when I realized I&amp;#8217;d acted upon information only I and one other person was privy to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;policy-makes-perfect&quot;&gt;
&lt;h2&gt;Policy makes perfect&lt;/h2&gt;
&lt;p&gt;Sometimes, people will pop on to a list and say &amp;#8220;Is this the right place to ask about XYZ?&amp;#8221; Other times, they&amp;#8217;ll just ask it: &amp;#8220;I have an XYZ that I&amp;#8217;m looking to sell…&amp;#8221; If the primary topic of the list is &amp;#8220;ABC&amp;#8221; and if the popping in happens frequently enough, you may want to define a policy e.g. my non-profit organization DC Python has a &lt;a class=&quot;reference external&quot; href=&quot;http://dcpython.org/#job-postings&quot;&gt;policy for job postings&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&amp;#8220;DC Python helps Python programmers get jobs. We allow job postings on our meetup.dcpython.org mailing list provided the following criteria are met:&lt;/p&gt;
&lt;p&gt;You are posting for a Python job in Washington, DC or the surrounding metro area — please don&amp;#8217;t try to recruit PHP or Ruby or .NET developers here, and please don&amp;#8217;t try to recruit for other cities.&lt;/p&gt;
&lt;p&gt;You will put [JOB] in the subject line of the email and include a description of the job (including duties and location) in the body of the email.&lt;/p&gt;
&lt;p&gt;You are an active member of DC Python or you are willing to contribute financially either through a sponsorship or by providing food/drink at one of our meetings.&amp;#8221;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;That way whenever someone posts to the list or emails me personally about job postings, I can point them to the link:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dcpython.org/#job-postings&quot;&gt;http://dcpython.org/#job-postings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pointing them at netiquette may help too, but that would require them to read through the archives to discover things like &amp;#8220;Wow, that recruiter got the smackdown when they identified themselves as a recruiter.&amp;#8221; So, a policy of netiquette plus an additional set of rules can go along way toward making communication better for everyone involved.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like this article? Consider a&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip&lt;/a&gt;. &lt;em&gt;You may also&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://mail.python.org/pipermail/mailman-announce/1999-July/000004.html&quot;&gt;http://mail.python.org/pipermail/mailman-announce/1999-July/000004.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://thinkexist.com/quotation/the_single_biggest_problem_in_communication_is/155222.html&quot;&gt;http://thinkexist.com/quotation/the_single_biggest_problem_in_communication_is/155222.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Why I Criticize The Plone Foundation Board</title>
    <id>http://blog.aclark.net/2012/10/17/why-i-criticize-the-plone-foundation-board/</id>
    <updated>2012-10-17T00:00:00Z</updated>
    <published>2012-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/17/why-i-criticize-the-plone-foundation-board/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;why-i-criticize-the-plone-foundation-board&quot;&gt;

&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/aclark-conf.jpg&quot; /&gt;
&lt;p&gt;&lt;strong&gt;TL;DR: Because I care.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As some of you can probably relate to, I&amp;#8217;ve had my fair share of disagreements with the Plone Foundation Board over the years. The good news is, for the most part, it (just like the community) is staffed with &lt;strong&gt;very reasonable people&lt;/strong&gt; who if you push them on an issue, will acknowledge that there are always competing viewpoints to any issue you can think of.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-fallacy-of-false-cause&quot;&gt;
&lt;h2&gt;The Fallacy Of False Cause&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I don&amp;#8217;t like what you have to say, therefore you must be quiet.&lt;/em&gt; &lt;strong&gt;Not necessarily. You may choose not to listen.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As long as you are polite, respectful, and on topic: you can have a civil discussion with almost any human individual or group in today&amp;#8217;s world. The challenge is in &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2012/10/17/top-3-favorite-logical-fallacies/&quot;&gt;sticking to those criteria&lt;/a&gt;. Conversations often become heated and stray outside of respectful lines, because we are human.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issues&quot;&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;p&gt;From the famous (?) pricing scrap of 2010 (i wanted a more expensive server with VM capability, they didn&amp;#8217;t) to various financially sensitive issues: i.e. I occasionally want to be financially compensated as a &amp;#8220;volunteer&amp;#8221;. And while the Board does compensate volunteers in many ways, they frequently don&amp;#8217;t agree with the ways I&amp;#8217;ve suggested. And who could forget &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt;? This was the first year that the Foundation received a percentage of the ticket sales. Now if I recall correctly there were certainly some heated debates, but none were too taxing or unreasonable (unless you count the ones we collectively had with The Ronald Reagan Building ;-)).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;success&quot;&gt;
&lt;h2&gt;Success&lt;/h2&gt;
&lt;p&gt;Plone&amp;#8217;s success &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; is my success and vice versa. I do a lot of different things in life, so I&amp;#8217;m not going to say that Plone must succeed for me to succeed. But I must succeed, and if I can help Plone succeed too, I&amp;#8217;m going to do everything within my power to make it happen. Let me be clear: Plone does not need me to be successful. But if you&amp;#8217;ve seen the &amp;#8220;Plone: I wish I could quit you.&amp;#8221; T-Shirt by Tarek Ziadé (shown above), you may know why I keep struggling to make Plone as good as it can be, albeit by my excessively high and overly strict (but not unrealistic) standards; which some, I am sure, do not like.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope, after reading this, you may have some better idea of who I am and why I do what I do. I&amp;#8217;ve made a commitment in my life to open source software, helping people, and being the best human I can be. I hope you will join me in my quest. If not, at the very least I hope you will respect my right to undertake it. If you have any questions or concerns, please do not hesitate to contact me to express them. Either in the comments below, or here: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s to you, Plone. And to the next 10 years of success.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Success means different things to different people.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone 4-3 Alpha 1 In Production</title>
    <id>http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/</id>
    <updated>2012-10-03T00:00:00Z</updated>
    <published>2012-10-03T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-4-3-alpha-1-in-production&quot;&gt;

&lt;p&gt;&lt;strong&gt;I love upgrading Plone. Given the choice between an afternoon in the sun and upgrading Plone… OK I&amp;#8217;d probably pick the sun, but it&amp;#8217;d be close.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;always-upgrading&quot;&gt;
&lt;h2&gt;Always upgrading?&lt;/h2&gt;
&lt;p&gt;I would love to see the trend of continuous integration make its way all the way to deployment, so that one day our Plone sites are getting new code as soon as it&amp;#8217;s released. Until then, it&amp;#8217;s nice to know that Plone&amp;#8217;s upgrade procedure is fairly predictable and stable, if not entirely straightforward &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-do-i-upgrade&quot;&gt;
&lt;h2&gt;How do I upgrade?&lt;/h2&gt;
&lt;p&gt;Unfortunately we &lt;em&gt;still&lt;/em&gt; get asked this question in IRC. The TLDR (short) explanation is as follows. Got an old Plone? Here&amp;#8217;s what you should do:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Don&amp;#8217;t touch it! Leave it alone. It&amp;#8217;s probably doing something important.&lt;/li&gt;
&lt;li&gt;Install the latest Plone somewhere that is not the location of your current site. Maybe not even on the same machine.&lt;/li&gt;
&lt;li&gt;Copy the production Data.fs file (usually in var/ somewhere) and any blobs you may have (Plone 4 or greater) to the new installation.&lt;/li&gt;
&lt;li&gt;Restart Plone in the foreground (bin/instance fg). If it starts, great! If it doesn&amp;#8217;t, look for missing add-ons and add their newest-Plone counterparts (this is usually where all the real work happens). Can&amp;#8217;t find the latest version? Try contacting the author. Stuck? Try Plone support (&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/support&quot;&gt;http://plone.org/support&lt;/a&gt;) or hire a consultant (e.g. &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;). Otherwise, continue.&lt;/li&gt;
&lt;li&gt;Once your add-ons are in place, start the site in the foreground and give the ZMI a poke (stay out of Plone). Look for broken objects. If you find some, repeat the previous step. Otherwise, continue.&lt;/li&gt;
&lt;li&gt;Once the ZMI looks good, trigger the migration with the Dry Run checkbox selected. See what you get. If it completes, do it for real. If it doesn&amp;#8217;t, open a ticket on &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org&quot;&gt;http://dev.plone.org&lt;/a&gt; so we can track the kinds of issues that folks are encountering in the wild. At this point if you are stuck, try to get help from the support forums (&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/support&quot;&gt;http://plone.org/support&lt;/a&gt;) or hire a consultant (e.g. &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;). Otherwise, you are almost done!&lt;/li&gt;
&lt;li&gt;Run the upgrade for real i.e. with the Dry Run checkbox unselected. When it finishes (it could take a while depending on the size of your site) check Plone. If everything looks OK, rejoice! If not, don&amp;#8217;t worry. Check: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Site&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Setup&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;ZMI&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;portal_skins&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;custom&lt;/span&gt;&lt;/code&gt;. If there is anything inside the custom folder, rename the custom folder to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;custom_X_X&lt;/span&gt;&lt;/code&gt; where &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;X_X&lt;/span&gt;&lt;/code&gt; equals the previous Plone version e.g. &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;custom_3_3&lt;/span&gt;&lt;/code&gt;. Or, rename it to whatever you like. Or delete it if you don&amp;#8217;t care about any in-database customizations that have been made. You probably should care, but maybe you don&amp;#8217;t. Now check Plone again. If everything looks OK, you are done! If not… well you really should be done by now. So if not, please email me: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt; and I will try to help.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;#8217;s still a lot to swallow for a summary. The key point is this: &lt;strong&gt;test the upgrade away from the production site. Don&amp;#8217;t put yourself in an unpleasant situation you can easily avoid&lt;/strong&gt;. Once everything works as expected, make a copy of your Data.fs and perform the upgrade on the production site (by editing the buildout.cfg if you know how, or just make the new Plone installation the production site. Need help? Please feel free to email me: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt; to discuss professional assistance.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-did-i-upgrade&quot;&gt;
&lt;h2&gt;How did I upgrade?&lt;/h2&gt;
&lt;p&gt;Anyway, the point of this blog entry is to cover the recent upgrade of &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt; to Plone 4.3a1, and the bliss that ensued. Plone 4.3 has lots of goodness in it, most notably the new theme editor from Martin Aspeli. Whilst I haven&amp;#8217;t fully explored its possibilites, I definitely liked seeing it in place; it&amp;#8217;s an impressive piece of work and I suspect will be very useful to lots of folks. So here is a brief summary of my upgrade steps, which took about 2-3 days.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;create-a-new-empty-repo&quot;&gt;
&lt;h3&gt;Create a new empty repo&lt;/h3&gt;
&lt;p&gt;I started with a public repo in my personal GitHub account, then forked it to my organization for showcasing:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/new_style&quot;&gt;https://github.com/ACLARKNET/new_style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-the-buildout&quot;&gt;
&lt;h3&gt;Add the buildout&lt;/h3&gt;
&lt;p&gt;Yes, we are still married to Buildout for even the simplest deployments :-/. So in order to make this easy for myself and others, I maintain buildouts for every version of Plone under the &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;http://pythonpackages.com&lt;/a&gt; umbrella. I typically start like this from within the checked out repo:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I then &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extend&lt;/span&gt;&lt;/code&gt; the desired base configuration (&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;4.3.x-dev&lt;/span&gt;&lt;/code&gt; in this case) and add additional customizations as needed.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = http://pythonpackages.com/buildout/plone/4.3.x-dev

[plone]
eggs +=
    z3c.jbot
    ZODB3
scripts = ZODB3
resources = ${buildout:directory}/resources
zcml-additional =
# XXX Can this be done with p.r.zope2instance yet?
    &amp;lt;configure
        xmlns:browser=&amp;quot;http://namespaces.zope.org/browser&amp;quot;
        &amp;gt;
        &amp;lt;include package=&amp;quot;z3c.jbot&amp;quot; file=&amp;quot;meta.zcml&amp;quot; /&amp;gt;
        &amp;lt;browser:jbot directory=&amp;quot;${buildout:directory}/templates&amp;quot; /&amp;gt;
    &amp;lt;/configure&amp;gt;

[versions]
Cheetah = 2.2.1
Pillow = 1.7.7
Products.DocFinderTab = 1.0.5
Products.FSDump = 0.9.5
collective.recipe.supervisor = 0.17
gdata = 2.0.17
meld3 = 0.6.9
plone.app.debugtoolbar = 1.0a2
supervisor = 3.0b1
z3c.jbot = 0.7.1
zope2-bootstrap = 0.0.7
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;develop-the-diazo-theme&quot;&gt;
&lt;h3&gt;Develop the Diazo theme&lt;/h3&gt;
&lt;p&gt;With Diazo, Python packaging is optional. And the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;resources&lt;/span&gt;&lt;/code&gt; parameter available from &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plone.recipe.zope2instance&lt;/span&gt;&lt;/code&gt; makes it easy to start theming without a Python package. I started with a bootstrap template:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Bootstrap, from Twitter&amp;lt;/title&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;

    &amp;lt;!-- Le styles --&amp;gt;
    &amp;lt;link href=&amp;quot;/++theme++static/css/bootstrap.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
    &amp;lt;link href=&amp;quot;/++theme++static/css/new_style.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
    &amp;lt;link href=&amp;#39;http://fonts.googleapis.com/css?family=Oswald&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;
    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
    &amp;lt;/style&amp;gt;

    &amp;lt;!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --&amp;gt;
    &amp;lt;!--[if lt IE 9]&amp;gt;
      &amp;lt;script src=&amp;quot;http://html5shim.googlecode.com/svn/trunk/html5.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;![endif]--&amp;gt;

    &amp;lt;!-- Le fav and touch icons --&amp;gt;
    &amp;lt;link rel=&amp;quot;shortcut icon&amp;quot; href=&amp;quot;/++theme++static/img/favicon.ico&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;144x144&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-144-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;114x114&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-114-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;72x72&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-72-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-57-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;

      var _gaq = _gaq || [];
      _gaq.push([&amp;#39;_setAccount&amp;#39;, &amp;#39;UA-35125830-1&amp;#39;]);
      _gaq.push([&amp;#39;_trackPageview&amp;#39;]);

      (function() {
        var ga = document.createElement(&amp;#39;script&amp;#39;); ga.type = &amp;#39;text/javascript&amp;#39;; ga.async = true;
        ga.src = (&amp;#39;https:&amp;#39; == document.location.protocol ? &amp;#39;https://ssl&amp;#39; : &amp;#39;http://www&amp;#39;) + &amp;#39;.google-analytics.com/ga.js&amp;#39;;
        var s = document.getElementsByTagName(&amp;#39;script&amp;#39;)[0]; s.parentNode.insertBefore(ga, s);
      })();

    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;

    &amp;lt;div class=&amp;quot;navbar navbar-inverse navbar-fixed-top&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;navbar-inner&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;a class=&amp;quot;btn btn-navbar&amp;quot; data-toggle=&amp;quot;collapse&amp;quot; data-target=&amp;quot;.nav-collapse&amp;quot;&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;/a&amp;gt;
          &amp;lt;a class=&amp;quot;brand&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Project name&amp;lt;/a&amp;gt;
          &amp;lt;div class=&amp;quot;nav-collapse collapse&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;nav&amp;quot;&amp;gt;
              &amp;lt;li class=&amp;quot;active&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#about&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#contact&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li class=&amp;quot;dropdown&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;dropdown-toggle&amp;quot; data-toggle=&amp;quot;dropdown&amp;quot;&amp;gt;Dropdown &amp;lt;b class=&amp;quot;caret&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;dropdown-menu&amp;quot;&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Another action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Something else here&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li class=&amp;quot;divider&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li class=&amp;quot;nav-header&amp;quot;&amp;gt;Nav header&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;One more separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
              &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
          &amp;lt;/div&amp;gt;&amp;lt;!--/.nav-collapse --&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;

      &amp;lt;!-- Main hero unit for a primary marketing message or call to action --&amp;gt;
      &amp;lt;div class=&amp;quot;hero-unit&amp;quot;&amp;gt;
        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;This is a template for a simple marketing or informational website.
            It includes a large callout called the hero unit and three supporting pieces of content.
            Use it as a starting point to create something more unique.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn btn-primary btn-large&amp;quot;&amp;gt;Learn more &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;!-- Example row of columns --&amp;gt;
      &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;span6 col1&amp;quot;&amp;gt;
          &amp;lt;h2&amp;gt;Heading&amp;lt;/h2&amp;gt;
          &amp;lt;p&amp;gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo,
            tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada
            magna mollis euismod. Donec sed odio dui. &amp;lt;/p&amp;gt;
          &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;View details &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&amp;quot;span6 col2&amp;quot;&amp;gt;
          &amp;lt;h2&amp;gt;Heading&amp;lt;/h2&amp;gt;
          &amp;lt;p&amp;gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor
            mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis
            euismod. Donec sed odio dui. &amp;lt;/p&amp;gt;
          &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;View details &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
       &amp;lt;/div&amp;gt;

      &amp;lt;hr&amp;gt;

      &amp;lt;footer&amp;gt;
        &amp;lt;p&amp;gt;&amp;amp;copy; Company 2012&amp;lt;/p&amp;gt;
      &amp;lt;/footer&amp;gt;

    &amp;lt;/div&amp;gt; &amp;lt;!-- /container --&amp;gt;

    &amp;lt;!-- Le javascript
    ================================================== --&amp;gt;
    &amp;lt;!-- Placed at the end of the document so the pages load faster --&amp;gt;
    &amp;lt;script src=&amp;quot;/++theme++static/js/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;/++theme++static/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;http://platform.twitter.com/widgets.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        $(document).ready(function() {
            $(&amp;#39;a.lightbox&amp;#39;).lightBox();
            $(&amp;quot;.client&amp;quot;).collapse()
            $(&amp;#39;.carousel&amp;#39;).carousel({
                interval: 10000,
            }
            )
        });
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then added some Diazo rules:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;rules
    xmlns=&amp;quot;http://namespaces.plone.org/diazo&amp;quot;
    xmlns:css=&amp;quot;http://namespaces.plone.org/diazo/css&amp;quot;
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&amp;gt;

    &amp;lt;append css:content=&amp;quot;#category&amp;quot; css:theme=&amp;quot;.hero-unit&amp;quot; /&amp;gt;
    &amp;lt;before content=&amp;#39;/html/head/title&amp;#39; theme=&amp;#39;/html/head/title&amp;#39; /&amp;gt;
    &amp;lt;theme href=&amp;quot;index.html&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;.nav&amp;quot; css:theme=&amp;quot;.nav&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#content&amp;quot; css:theme-children=&amp;quot;.hero-unit&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-column-one&amp;quot; css:theme-children=&amp;quot;.col1&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-column-two&amp;quot; css:theme-children=&amp;quot;.col2&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;footer&amp;quot; css:theme=&amp;quot;footer&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-logo&amp;quot; css:theme=&amp;quot;.brand&amp;quot; /&amp;gt;

&amp;lt;/rules&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then styled to fit with CSS:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#about {
    padding-top: 9px;
}
.alex {
    border-bottom: 1px solid #FAFAFA;
}
body {
    background: url(&amp;quot;/++theme++static/img/aclark-net-background.png&amp;quot;) repeat-x;
    background-color: black;
}
.brand {
    color: #FAFAFA !important;
    font-family: Georgia;
}
.brand .alpha {
    font-size: 360%;
    font-style: italic;
}
.brand .name {
    font-size: 50px;
}
.carousel-inner {
    border-bottom: 1px solid #CCC;
    padding-bottom: 2em;
}
#content {
    color: #FAFAFA;
}
.description {
    font-size: 125%;
    margin: 1em 0 1em 0;
}
.documentDescription {
    font-size: 125%;
    margin: 1em 0 1em 0;
}
dt {
    margin: 1em 0 1em 0;
}
#facebook {
    padding-top: 1px;
}
footer {
    border-top: 1px solid #999999;
    color: #999999;
    margin-top: 600px;
    width: 100%;
    padding-top: 1em;
}
footer li {
    list-style-type: none;
}
.hero-unit {
    background: black;
}
hr {
    border: none;
    background-color: #CCC;
    color: #CCC;
    height: 1px;
}
.image-left {
    float: left;
    margin: 0 1em 0 0;
}
.navbar-inner {
    background: #AA001F !important;
    height: 50px;
}
.portletHeader {
    font-size: 125%;
}
#portal-column-one {
    color: #FAFAFA;
}
#portal-column-two {
    color: #FAFAFA;
}
.team-member {
    border-bottom: 1px solid #FAFAFA;
}
.service {
    padding: 30px 0 30px 0;
}
#twitter {
    padding-top: 15px;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;customize-templates&quot;&gt;
&lt;h2&gt;Customize templates&lt;/h2&gt;
&lt;p&gt;As you may have noticed above I use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;z3c.jbot&lt;/span&gt;&lt;/code&gt; to customize various Plone templates.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/custom-templates.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-content&quot;&gt;
&lt;h2&gt;Add content&lt;/h2&gt;
&lt;p&gt;I then cut/pasted all my content from the old site to the new site. This is a lot of work, but I like mimicking the experience of someone non-tech-savvy using Plone for the first time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-s-left&quot;&gt;
&lt;h2&gt;What&amp;#8217;s left?&lt;/h2&gt;
&lt;p&gt;I am very happy with this upgrade, but of course it&amp;#8217;s not perfect.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;use-sunburst-theme-for-content-editing&quot;&gt;
&lt;h3&gt;Use Sunburst theme for content editing&lt;/h3&gt;
&lt;p&gt;If you are Diazo-savvy, you may notice I completely ignore styling the content editing interface. Instead I rely on the unthemed &lt;a class=&quot;footnote-reference&quot; href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; site for content editing.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;../../../_images/edit-ui.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;use-diazo-theme-for-public-facing-view&quot;&gt;
&lt;h3&gt;Use Diazo theme for public facing view&lt;/h3&gt;
&lt;p&gt;Of course, visitors to &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt; see the Diazo theme.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;../../../_images/diazo-theme.png&quot; /&gt;
&lt;p&gt;I&amp;#8217;m hoping that the Plone team can unify the content editing experience again in Plone 5, possibly via simplifying the &amp;#8220;old style&amp;#8221; templates such that it&amp;#8217;s easier to map them to custom Diazo themes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;hightlights&quot;&gt;
&lt;h2&gt;Hightlights&lt;/h2&gt;
&lt;p&gt;Lastly, I&amp;#8217;ll cover some of the remaining highlights.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;it-works&quot;&gt;
&lt;h3&gt;It works!&lt;/h3&gt;
&lt;p&gt;Plone 4.3a1 is remarkably stable. The TinyMCE UI is a bit rough, and the sitemap is broken &lt;a class=&quot;footnote-reference&quot; href=&quot;#id6&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;, but it works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-all-content-view-is-awesome&quot;&gt;
&lt;h3&gt;The &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;content&lt;/span&gt;&lt;/code&gt; view is awesome&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;../../../_images/all-content.png&quot; /&gt;
&lt;p&gt;Contributed by Laurence Rowe for Plone 4, I use the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;content&lt;/span&gt;&lt;/code&gt; view in two places:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/services&quot;&gt;http://aclark.net/services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/team&quot;&gt;http://aclark.net/team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I love the ability to easily aggregate the contents of pages within a folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;my-deployment-is-awesome&quot;&gt;
&lt;h3&gt;My deployment is awesome&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;m really happy with the following trick I used this time around:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Content is stored in Data.fs (of course) which I&amp;#8217;ve checked into a private repo on bitbucket, and save nightly with an automated commit and push. I&amp;#8217;m able to present the site buildout and theme to the public but keep the Data.fs private via git submodules.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prior to this, the entire site was stored in a private repo on bitbucket. And finally:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;If you load the site, you&amp;#8217;ll notice the images (configured as static resources) are a bit laggy. I&amp;#8217;m a big fan of of CloudFlare and current user via pythonpackages.com, so I&amp;#8217;ll probably be configuring aclark.net to use it soon too. Once that is done, the site should be lightning fast instead of just really fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like this article and/or my open source work in general? Please &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;consider supporting me on gittip&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Some ideas for improving upgrades: 1.) optionally rename portal_skins/custom during the upgrade process. 2.) Include suggestions in the form copy to stage the upgrade away from the current production site. 3.) Report on availability of add-ons compatible with latest version of Plone.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id5&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Unthemed meaning un-diazo-themed. The content UI is themed with the Sunburst theme &amp;#8220;the old way&amp;#8221;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id6&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/ticket/13178&quot;&gt;https://dev.plone.org/ticket/13178&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Diazo Themes Revisited</title>
    <id>http://blog.aclark.net/2012/09/24/diazo-themes-revisited/</id>
    <updated>2012-09-24T00:00:00Z</updated>
    <published>2012-09-24T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/24/diazo-themes-revisited/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;diazo-themes-revisited&quot;&gt;

&lt;p&gt;&lt;strong&gt;With Diazo theming on the rise (going in to 4.3 core) I&amp;#8217;d like to take a look at the Diazo theming ecosystem again.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For that matter, since I know that some folks will never commit to Diazo, I&amp;#8217;d like to take a look at the entire Plone theming ecosystem.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-are-themes&quot;&gt;
&lt;h2&gt;What are themes?&lt;/h2&gt;
&lt;p&gt;Themes control the way the site looks. For the scope of this post, at least, I don&amp;#8217;t care about &amp;#8220;views&amp;#8221;, &amp;#8220;viewlets&amp;#8221;, &amp;#8220;portlets&amp;#8221;, &amp;#8220;tiles&amp;#8221;, etc. In fact, I&amp;#8217;m not sure I ever want to mix &amp;#8220;templating&amp;#8221; (for lack of a better word) with theming. There is a bit of discussion going on right now amongst the core developers regarding how to make it easier for themers to associate their template code with application code. And while I fully support this discussion, at present the bottom line is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&amp;#8220;Old style&amp;#8221;&lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; theming is still a valid way to control the look and feel of a Plone system.&lt;/li&gt;
&lt;li&gt;&amp;#8220;New style&amp;#8221; (Diazo) theming is a great way to isolote the complexity of the stack and get HTML/CSS/JavaScript folks going quickly (especially in 4.3a1 with the new theme editor!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;where-are-themes&quot;&gt;
&lt;h2&gt;Where are themes?&lt;/h2&gt;
&lt;p&gt;In short: all over the place. Why is that? Because we are in the middle of several fluctuating &amp;#8220;best practice&amp;#8221; approaches that have fluctuated over the past half decade or so:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Plone developers should release their Plone add-ons &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; to PyPI!&lt;/li&gt;
&lt;li&gt;Plone developers should release their Plone add-ons to plone.org (in addition to PyPI)!&lt;/li&gt;
&lt;li&gt;Plone developers should release their Diazo themes as zip archives (i.e. no Python package)!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, the need for this post to clarify the status quo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-should-i-do&quot;&gt;
&lt;h2&gt;What should I do?&lt;/h2&gt;
&lt;p&gt;Everyone should form their own opinion based on the information in this post and act accordingly or however they see fit. If we can all agree on an approach, great! If not, here&amp;#8217;s what I&amp;#8217;m doing.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-am-i-doing&quot;&gt;
&lt;h3&gt;What am I doing?&lt;/h3&gt;
&lt;p&gt;While I have a large interest in seeing plone.org work well (and am also in the middle of helping to cat herd a plone.com marketing site effort), I have given up on plone.org as a reliable, consistent source for add-ons (in favor of PyPI). This abandonment is perhaps only temporary, but in any event for now: if it&amp;#8217;s on PyPI, it&amp;#8217;s good enough for me. Also to close the loop on Diazo zip themes, while I fully support this approach I don&amp;#8217;t use it myself much.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-the-point&quot;&gt;
&lt;h3&gt;What is the point?&lt;/h3&gt;
&lt;p&gt;All of this brings me to the actual point of this post which is to take a quick look at the Plone themeing landscape in order to spur more Diazo theme development (or old style theming, if that is your thing). Quickly, using pip to search PyPI by package namespace I see:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;88 plonetheme themes&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plonetheme.Bangalore      - An installable theme for Plone 3
plonetheme.GreenEarthTheme3_0 - An installable theme for Plone 3
plonetheme.ReOrg          - Theme that reorganizes screen real-estate abd gives plone a fresh look
plonetheme.aclark_twitter - Complete silliness: make your Plone site look like Alex Clark&amp;#39;s Twitter profile.
plonetheme.andreas01      - An installable theme for Plone 3.0.
plonetheme.andreas02      -
plonetheme.aqueouslight   - An installable Diazo theme for Plone 4.1
plonetheme.bananaleaf     - An installable Diazo theme for Plone 4.1
plonetheme.basic          - An easily customizable theme for Plone 4
plonetheme.blueblog       - An installable theme for Plone 3.0
plonetheme.bluegray       - An installable theme for Plone
plonetheme.bootstrap      - bootstrap css integration
plonetheme.broadcaster    - An installable theme for Plone 3.0
plonetheme.bronzecube     - An installable theme for Plone 3
plonetheme.burned         - An installable Diazo theme for Plone 4.1
plonetheme.classic        - The classic Plone 3 default theme.
plonetheme.cleantheme     - An installable theme for Plone 3.0
plonetheme.codapress      - An installable Diazo theme for Plone 4.1
plonetheme.colorcontext   - Total CSS rebuild and color themed sections
plonetheme.colorfulworld  - An installable theme for Plone 4
plonetheme.coolblue       - An installable Diazo theme for Plone 4.1
plonetheme.corporatemale  - An elastic layout presentation suitable for a corporate business.
plonetheme.criticas       - An installable theme for Plone 3.0
plonetheme.cultureCab     - An installable theme for Plone 3
plonetheme.darkened       - An installable Diazo theme for Plone 4.1
plonetheme.delicious2     - An installable theme for Plone 3.0
plonetheme.discovery      - An installable Diazo theme for Plone 4.1
plonetheme.drupal         - Get all the power of Drupal for Plone ;)
plonetheme.earthlingtwo   - An installable Diazo theme for Plone 4.1
plonetheme.elemental      - Elemental Plone 4 Theme
plonetheme.equipoteih     - An installable theme for Plone 3.0
plonetheme.essay          -
plonetheme.evergreen      - An installable Diazo theme for Plone 4.1
plonetheme.ewb_case       - A Plone 4 theme for EWB Case
plonetheme.flowerbuds     - UNKNOWN
plonetheme.freshpick      - An installable Diazo theme for Plone 4.1
plonetheme.fui            - A Plone 3.0 theme for FUI
plonetheme.gemstone       - Arcsin&amp;#39;s Gemstone web design for Plone4
plonetheme.gov            - An installable theme for Plone 4
plonetheme.greencommunity - An installable theme for Plone 3.0.
plonetheme.grungeera      - An installable Diazo theme for Plone 4.1
plonetheme.hamnavoe       - An installable theme for Plone 3.0
plonetheme.html5_hotpink  - Diazo theme for Plone
plonetheme.inbusiness     - An installable theme for Plone 3.0
plonetheme.intk           - An installable theme for Plone 3
plonetheme.intkBase       - An installable theme for Plone 4
plonetheme.jsjamba        - An installable theme for Plone 4
plonetheme.keepitsimple   - An installable theme for Plone 4, fluid 3-column theme, minimalistic and light colored design
plonetheme.laboral        - An installable theme for Plone 4
plonetheme.labs           - An installable theme for Plone
plonetheme.leavesdew      - An installable Diazo theme for Plone 4.1
plonetheme.level2         - An installable theme for Plone 3.0
plonetheme.lithium        - An installable theme for Plone 3.0
plonetheme.mimbo          - An installable theme for Plone 3.0 based on the Mimbo theme by Darren Hoyt
plonetheme.minimalist     - An installable theme for Plone 3.0
plonetheme.mvob           - An installable Plone4 theme
plonetheme.nautica05      - An installable theme for Plone 3.x
plonetheme.netsightintranet - A clean, intranet theme for Plone 3.0
plonetheme.nonzero        - A theme for Plone 3 based on the Nonzero design by NodeThirtyThree
plonetheme.notredame      - Theme for Plone 3 with color scheme based on new Plone Logo
plonetheme.overlappedtabs - A theme for plone 3.x with overlapping tabs
plonetheme.p2             - An installable theme for Plone 3.0
plonetheme.peerstheme     - An installable theme for Plone 3.0
plonetheme.ploneorg       - Plone.org theme
plonetheme.pollination    - Pollination Theme
plonetheme.porseleinplaats - An installable theme for Plone 3
plonetheme.portaltwodotoh - An elastic lounded corners.
plonetheme.pyar           - A PyAr theme for Plone 3.x
plonetheme.python         -
plonetheme.rcom           - An installable theme for Plone 3.0.
plonetheme.redmusic       - An installable Diazo theme for Plone 4.1
plonetheme.relic          - An installable theme for Plone 3.0.
plonetheme.responsive1140 - A responsive theme for Plone
plonetheme.responsivetheme - An installable theme for Plone 4 that uses a fluid grid system
plonetheme.sait2009       - SAIT-2009 installable Plone theme
plonetheme.simplicity     - An installable theme for Plone 3.0
plonetheme.solemnity      - An installable theme for Plone 3.0 based on the solemnity theme by Six Shooter Media.
plonetheme.stylized       - An installable theme for Plone 3.0 based on the stylized theme by NodeThirtyThree.
plonetheme.subordinate    - An installable theme for Plone 3.0
plonetheme.sunburst       - The default theme for Plone 4.
plonetheme.terrafirma     - An installable theme for Plone 3.0
plonetheme.tidyblog       - An installable theme for Plone 3.0
plonetheme.transition     - An installable Diazo theme for Plone 4.1
plonetheme.twinapex       - Twinapex Theme is a theming product for Plone to give your site a professional corporate look
plonetheme.unilluminated  - An installable Diazo theme for Plone 4.1
plonetheme.wmoWonen       - An installable theme for Plone 4
plonetheme.woodexperience - An installable Diazo theme for Plone 4.1
plonetheme.xtheme         - An installable theme for Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1 diazotheme theme&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;diazotheme.bootstrap      - Plone theme based on Twitter&amp;#39;s Bootstrap CSS
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;5 Products themes&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Products.Andreas09Theme   - An example theme for Plone 3.0
Products.HSCustom         - The HSCustom theme was originally created for my band&amp;#39;s website.
Products.naked_plone      - An installable theme for Plone 3.0 that does little but override default public stylesheets with empty ones.
Products.NuPlone          - A new theme for Plone 3.0
Products.PloneTableless   - Plone Tableless provides a completly tableless version of the Plone Default theme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;60 other themes (WTF?!)&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alterootheme.busycity     - Free City Plone 3.0 Theme
alterootheme.intensesimplicity - A Plone 3.0 Theme based on a free template by David Uliana
alterootheme.lazydays     - A Theme for Plone 3.0 based on OpenWebDesign.org Lazy Days theme
atrealtheme.algol         - An installable theme for Plone 3.0
atrealtheme.gienah        - An installable theme for Plone 3.0
beyondskins.ploneday.site - Installable Plone 3 theme for World Plone Day
beyondskins.ploneday.site2009 - Installable Plone 3 theme developed to promote World Plone Day 2009 (April 22nd)
beyondskins.ploneday.site2010 - World Plone Day 2010 theme.
beyondskins.ploneday.site2011 - World Plone Day 2011 theme.
beyondskins.pyconbrasil2008 - Plone Theme developed by Simples Consultoria
beyondskins.pythonbrasil.site - This product is a installable Plone 3 Theme developed by Simples Consultoria for use in Python Brasil [7] Conference web site.
collective.fastview       - View and viewlet helper modules for Plone theme and five.grok developers
collective.jqueryuithememanager - JQueryUI theme manager for Plone
collective.lesscss        - This package allow theme developers to add LESS stylesheets into a Plone site.
collective.phantasy       - dynamic theme for Plone
collective.responsivetheme - A responsive theme based on sunburst for Plone 4
collective.shinythings    - Jazz up your Plone theme
collective.threecolorstheme - A Phantasy theme variation for Plone, with 3 dynamic colors
cooking.theme             - This is plone theme created from css/html ready design.
dgsanco.plone3theme       - Plone3 Theme for DG Sanco
freearch.theme            - Free Arch Theme for Plone
gameprog.theme            - An installable theme for Plone 3.0
gomobile.templates        - Project templates creating Web and Mobile themes for Plone
heddex.cityportal         - Installable theme for Plone
heddex.greenfield         - An installable theme for Plone 4
heddex.tranquility        - An installable visual theme for Plone 3
ilrt.migrationtool        - A site migration tool for Plone that uses the site&amp;#39;s theme egg version releases
iscorpio.themes.redmaple  - iscorpio readmaple Plone 3 theme
ityou.bluetheme           - An installable theme for Plone 4
jalon.theme               - An installable theme for Plone 3
jalonedit.theme           - JalonEdit Theme for PLONE 4
medialog.kuliadentheme    - An installable theme for Plone 3.0
medialog.roundskin        - An installable theme for Plone 3
medialog.subskins         - An installable theme and theming tool for Plone 4
medialog.subskinsiii      - An installable theme for Plone 3.0
plone.app.themeeditor     - Theme Editor for Plone, Customize your theme resources
plone.theme               - Tools for managing themes in CMF and Plone sites
quintagroup.sunrain.policy - extension for SunRain Plone theme
quintagroup.theme.estatelite - Free Diazo Theme for Plone 4.1
quintagroup.theme.lite    - Free Diazo Theme for Plone 4.1
quintagroup.theme.schools - Free Diazo theme for Plone 4.2
quintagroup.theme.sunrain - Free Diazo Theme for Plone 4.2
quintagroup.theme.techlight - Free diazo theme for Plone 4.1
quintagroup.theme.whiteblack - Free Diazo Theme for Plone 4.1
quintagroup.themetemplate - Quintagroup theme template for Plone 3 with nested namespace
raptus.theme.plonebartop  - move the plone-bar on the top
raptus.theme.ploneformgen - set standard theme for ploneformgen
redomino.css3theme        - A responsive (and mobile) theme for Plone 4 (based on sunburst)
sc.paster.theme           - Produto de tema para o portal Plone (skin).
semicinternet.theme.cambrils - A free Plone theme from SEMIC Internet for Plone 4
soniatheme                - An installable theme for Plone 3.0
themetweaker.themeswitcher - A product for switching themes in Plone.
uofl.dztheme.simplesite   - A Diazo theme for Plone 4 and UofL Simple Left-Nav Sites
uvsq.theme                - An installable theme for Plone 3
v2.theme                  - An installable theme for Plone 4
webcouturier.city.theme   - Plone visual theme
webcouturier.icompany.theme - Plone theme in blue/green colors
xdvtheme.inventions       - A xdvtheme for Plone
xdvtheme.sparkling        - An xdv Theme for Plone
zettwerk.ui               - Adding jquery.ui&amp;#39;s themeroller to plone 4 for easy theme customization.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That last one is a surprise, and that&amp;#8217;s a total of &lt;strong&gt;154 themes for Plone on PyPI&lt;/strong&gt; (assuming I didn&amp;#8217;t miss any which I probably did). If we had the man power, all of these themes could be made to work with the latest Plone and work with either old style or new style technology. So if we can&amp;#8217;t do that (which is a hugely ambitious goal) let&amp;#8217;s at least try to come close!&lt;/p&gt;
&lt;p&gt;Do you like this post, and/or appreciate my open source work? Help build the commons by gittiping me: &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/aclark4life/&quot;&gt;https://www.gittip.com/aclark4life/&lt;/a&gt;.&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
    src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
    width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It&amp;#8217;s getting harder to define what &amp;#8220;old style&amp;#8221; theming is. For this blog entry, old style theming is some form of customizing the main_template in Plone (I&amp;#8217;m ignoring the fact that macros called by main_template are customizable, for now). If we could (consistently, in a core supported way) get newer ways to do that (e.g. browser views instead of CMF skin layers) then &amp;#8220;old style&amp;#8221; would become &amp;#8220;newer style&amp;#8221;. It wouldn&amp;#8217;t become &amp;#8220;new style&amp;#8221; because Diazo technology is &amp;#8220;newer&amp;#8221; than browser view technology. Get it? I think my point is this: in addition to seeing Diazo help with isolating the complexity of the stack, I&amp;#8217;d like to see the underlying technology modernized. Give me something that looks and feels like &amp;#8220;old style&amp;#8221; theming (i.e. putting templates in CMF skin layers) but that is built on modern technology (i.e. the ZCA).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;lt;rant&amp;gt; Have I mentioned today yet that I hate the term &amp;#8220;product&amp;#8221;? when it&amp;#8217;s used to refer to a Plone add-on? It&amp;#8217;s 2012 people. Zope 2 products died last decade. :-p&amp;lt;/rant&amp;gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">All My Python Packages Are Belong To GitHub</title>
    <id>http://blog.aclark.net/2012/08/10/all-my-python-packages-are-belong-to-github/</id>
    <updated>2012-08-10T00:00:00Z</updated>
    <published>2012-08-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/10/all-my-python-packages-are-belong-to-github/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;all-my-python-packages-are-belong-to-github&quot;&gt;

&lt;p&gt;&lt;strong&gt;Including many Plone add-ons.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hi. My name is Alex &amp;#8220;please don&amp;#8217;t call them products&amp;#8221; Clark. But you may call me aclark or aclark4life. In the spirit of continuing the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.293351.n2.nabble.com/DVCS-options-for-Plone-Core-tt6295582.html&quot;&gt;great git migration&lt;/a&gt;, and in order to &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/signup&quot;&gt;beta test pythonpackages.com&lt;/a&gt;, I&amp;#8217;ve just moved the last of my Subversion repositories to GitHub. This means &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/3317288&quot;&gt;any package I have Owner or Maintainer permission for on PyPI&lt;/a&gt; now lives in one of 8 GitHub organizations, or my personal GitHub account on github.com. Great Success!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;plone-devs-y-u-no-move-repos&quot;&gt;
&lt;h2&gt;PLONE DEVS: Y U NO MOVE REPOS?&lt;/h2&gt;
&lt;p&gt;The Plone AI team has tentatively scheduled the end-of-2012 as the time to flip &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/&quot;&gt;svn.plone.org/svn/collective&lt;/a&gt; to read only (/plone and /archetypes are already read only). So if you are still using the old collective, please take a minute to start thinking about migrating. As always, I&amp;#8217;m happy to provide assistance to anyone that needs it to move their code. (I&amp;#8217;m in #plone on irc.freenode.net or you can email &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">The Plones Templer</title>
    <id>http://blog.aclark.net/2012/07/12/the-plones-templer/</id>
    <updated>2012-07-12T00:00:00Z</updated>
    <published>2012-07-12T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/07/12/the-plones-templer/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;the-plones-templer&quot;&gt;

&lt;p&gt;&lt;strong&gt;(c.f. Knights Templar)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(c.f. Knights Templar) I think we have a situation that could use the
help of the Plone and Python communities at large. It goes something
like this:&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;About 6 years ago, &lt;a class=&quot;reference external&quot; href=&quot;http://danielnouri.org/blog/devel/zope/quickstart-with-pastescript.html&quot;&gt;Daniel Nouri started the ZopeSkel project&lt;/a&gt; to
provide a Zope project template to &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/PasteScript/1.7.5&quot;&gt;PasteScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sometime between then and now, the Plone community latched on to the
ZopeSkel project to include templates for its projects.&lt;/li&gt;
&lt;li&gt;About 3 years ago, as part of the ZopeSkel project, &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/zopeskel-bbq-sprint/project-home&quot;&gt;some folks at
the BBQ&lt;/a&gt; sprint built a more user friendly UI on top of PasteScript.
And some refactoring of the project was planned or occurred, during
which time the entire project was renamed to &amp;#8220;Templer&amp;#8221;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At present, if you install the latest ZopeSkel (3.0b3) you get:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/paster create --list-templates
Available templates:
  archetype:         A Plone project that uses Archetypes content types
  basic_buildout:    A basic buildout skeleton
  basic_namespace:   A basic Python project with a namespace package
  basic_package:     A basic setuptools-enabled package
  nested_namespace:  A basic Python project with a nested namespace (2 dots in name)
  paste_deploy:      A web application deployed through paste.deploy
  plone_basic:       A package for Plone add-ons
  plone_nested:      A package for Plone add-ons with a nested namespace
  recipe:            A recipe project for zc.buildout
  zope2_basic:       A Zope project
  zope2_nested:      A nested-namespace Zope package
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Looks nice, but some templates are missing. If you install the previous
stable version (2.21.2), you get this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/paster create --list-templates
Available templates:
  archetype:          A Plone project that uses Archetypes content types
  basic_namespace:    A basic Python project with a namespace package
  basic_package:      A basic setuptools-enabled package
  basic_zope:         A Zope project
  kss_plugin:         A project for a KSS plugin
  nested_namespace:   A basic Python project with a nested namespace (2 dots in name)
  paste_deploy:       A web application deployed through paste.deploy
  plone:              A project for Plone add-ons
  plone2.5_buildout:  A buildout for Plone 2.5 projects
  plone2.5_theme:     A theme for Plone 2.5
  plone2_theme:       A theme for Plone 2.1
  plone3_buildout:    A buildout for Plone 3 installation
  plone3_portlet:     A Plone 3 portlet
  plone3_theme:       A theme for Plone 3
  plone4_buildout:    A buildout for Plone 4 developer installation
  plone_app:          A project for Plone add-ons with a nested namespace (2 dots in name)
  plone_hosting:      Plone hosting: buildout with ZEO and Plone versions below 3.2
  plone_pas:          A project for a Plone PAS plugin
  recipe:             A recipe project for zc.buildout
  silva_buildout:     A buildout for Silva projects
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Looks a lot better. Additionally, with the previous release (2.21.2) you
can install zopeskel.dexterity, and &amp;#8220;dexterity&amp;#8221; will show up in the list
of available templates (but not so with 3.0b3). So what&amp;#8217;s left to finish
the move from ZopeSkel to Templer? I&amp;#8217;m told by Chris Ewing (the current
project lead) that it&amp;#8217;s mostly a matter of missing imports in various
Python packages that provide templates to PasteScript. Let&amp;#8217;s. Finish.
This. This frustrates me because Paster is a nice system (that provides
pluggable commands, and code gen from templates). And ZopeSkel was a
nice system (that provided additional templates and a friendly UI). And
Templer will be a great system, but it&amp;#8217;s not there yet. So we need to
help Chris et. al. get it there ASAP. In addition to the code
refactoring, they have produced some &lt;a class=&quot;reference external&quot; href=&quot;http://templer-manual.readthedocs.org/en/latest/index.html&quot;&gt;nice documentation available on
readthedocs.org&lt;/a&gt;. If you are interested in helping, please gather
around the #plone on irc.freenode.net to discuss options (I am aclark on
IRC).&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Zope2 Bootstrap</title>
    <id>http://blog.aclark.net/2012/06/12/zope2-bootstrap/</id>
    <updated>2012-06-12T00:00:00Z</updated>
    <published>2012-06-12T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/06/12/zope2-bootstrap/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;zope2-bootstrap&quot;&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap all the things, including Zope2.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zope2_bootstrap&quot;&gt;zope2_bootstrap&lt;/a&gt; is a new Python package that &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.monkeypatcher&quot;&gt;monkey patches&lt;/a&gt; Zope2 in order to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Replace &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Zope/trunk/src/App/dtml/manage_page_style.css.dtml&quot;&gt;manage_page_styles.css.dtml&lt;/a&gt; styles with &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.github.com/bootstrap/base-css.html&quot;&gt;Twitter Bootstrap&lt;/a&gt; styles.&lt;/li&gt;
&lt;li&gt;Adds CSS classes to &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Zope/trunk/src/OFS/dtml/main.dtml&quot;&gt;main&lt;/a&gt; and/or &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_main.dtml&quot;&gt;manage_main&lt;/a&gt; tables.&lt;/li&gt;
&lt;li&gt;Inserts a Plone logo (if Plone is installed) above &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_tabs.dtml&quot;&gt;manage_tabs.dtml&lt;/a&gt; tabs (h/t: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/patches/addzmiplonesite.py&quot;&gt;https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/patches/addzmiplonesite.py&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Inserts a ZMI warning (if Plone is installed) below &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_tabs.dtml&quot;&gt;manage_tabs.dtml&lt;/a&gt; tabs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the next version, I&amp;#8217;ll try to import &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.github.com/bootstrap/javascript.html&quot;&gt;Twitter Bootstrap JavaScript&lt;/a&gt; for even more goodness. Enjoy, and give feedback in the comments, or &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/zope2_bootstrap/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Test-plone tmp</title>
    <id>http://blog.aclark.net/2012/04/04/test-plone-tmp/</id>
    <updated>2012-04-04T00:00:00Z</updated>
    <published>2012-04-04T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/04/04/test-plone-tmp/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;test-plone-tmp&quot;&gt;

&lt;p&gt;&lt;strong&gt;Since Day 1 with Plone circa 2004, I&amp;#8217;ve always taken pride in and greatly enjoyed refining my development environment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s been stable for a while now (&amp;gt; 1 year or so) so I thought I&amp;#8217;d share.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;operating-system&quot;&gt;
&lt;h2&gt;Operating system&lt;/h2&gt;
&lt;p&gt;Mac OS X Latest (Lion, at the time of this writing)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;terminal&quot;&gt;
&lt;h2&gt;Terminal&lt;/h2&gt;
&lt;p&gt;Mac OS X Terminal&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;editor&quot;&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;Vim&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Yes. All versions, via the collective Python buildout:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/buildout.python&quot;&gt;https://github.com/collective/buildout.python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone&quot;&gt;
&lt;h2&gt;Plone&lt;/h2&gt;
&lt;p&gt;Yes. All versions, via pythonpackages.com:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/advanced.html&quot;&gt;http://docs.pythonpackages.com/en/latest/advanced.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;additional-tools&quot;&gt;
&lt;h2&gt;Additional tools&lt;/h2&gt;
&lt;p&gt;A &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/binfiles/blob/master/test-plone&quot;&gt;shell script to run virtualenv, buildout, etc&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[bash] #!/bin/sh if ! [ -n &amp;quot;$1&amp;quot; ] then echo &amp;quot;Usage:nn$0 &amp;lt;dir&amp;gt;n&amp;quot; exit 1
fi if ! [ -d $1 ] then mkdir $1 fi cd $1 virtualenv-2.7 . bin/pip
install zc.buildout bin/buildout init cat &amp;lt;&amp;lt; EOF &amp;gt; buildout.cfg
[buildout] extends =
http://build.pythonpackages.com/buildout/plone/4.2.x-dev EOF
bin/buildout bin/plone start sleep 4 echo &amp;quot;Adding Plone site...&amp;quot; curl -d
form.submitted:boolean=&amp;quot;True&amp;quot;
http://admin:admin@localhost:8080/@@plone-addsite?site\_id=Plone
bin/plone stop bin/plone fg [/bash]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/binfiles/blob/master/tmp&quot;&gt;Python script to create temporary directories&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[python] #!/usr/bin/env python

import os import tempfile print os.path.abspath(tempfile.mkdtemp())
[/python]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A default buildout config file:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
eggs-directory = /Users/aclark/Developer/eggs-directory
download-cache = /Users/aclark/Developer/download-cache
extends-cache = /Users/aclark/Developer/extends-cache
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;workflow&quot;&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;My typical workflow looks like this:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Hang in #plone on irc.freenode.net and wait for questions&lt;/li&gt;
&lt;li&gt;Hear question and get inspired to run Plone&lt;/li&gt;
&lt;li&gt;Run: &lt;strong&gt;$ test-plone `tmp`&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/2304317&quot;&gt;~ 1 minute later&lt;/a&gt; I&amp;#8217;m browsing &lt;strong&gt;http://localhost:8080/Plone&lt;/strong&gt; and can install add-ons, check ZMI settings, etc.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">New Vanity Release</title>
    <id>http://blog.aclark.net/2012/01/30/new-vanity-release/</id>
    <updated>2012-01-30T00:00:00Z</updated>
    <published>2012-01-30T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/01/30/new-vanity-release/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-vanity-release&quot;&gt;

&lt;p&gt;&lt;strong&gt;This release features the ability to display per package download statistics.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With all the Python &lt;a class=&quot;reference external&quot; href=&quot;http://crate.io/&quot;&gt;stats&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://python3wos.appspot.com/&quot;&gt;goodness&lt;/a&gt; going on recently, I got inspired to make a new &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/info/vanity&quot;&gt;vanity&lt;/a&gt; release. This release features the ability to display per package download statistics via the `-v` or `&amp;#8211;verbose` command line argument.&lt;/p&gt;
&lt;p&gt;Here are some of my favorite results.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;vanity&quot;&gt;
&lt;h2&gt;Vanity&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity vanity -v
     vanity-1.0.zip     2011-04-14      352
   vanity-1.1.0.zip     2011-10-26      139
   vanity-1.1.1.zip     2011-10-28      114
   vanity-1.1.2.zip     2011-10-28      145
vanity-1.2.0.tar.gz     2012-01-30        0
-------------------------------------------
Package `vanity` has been downloaded 750 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;django&quot;&gt;
&lt;h2&gt;Django&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity django -v
Django-1.1.3.tar.gz     2010-12-23    2,618
Django-1.1.4.tar.gz     2011-02-09    4,476
  Django-1.2.tar.gz     2010-05-17   15,876
Django-1.2.1.tar.gz     2010-05-24   65,120
Django-1.2.2.tar.gz     2010-09-09    2,467
Django-1.2.3.tar.gz     2010-09-11   73,984
Django-1.2.4.tar.gz     2010-12-23   49,904
Django-1.2.5.tar.gz     2011-02-09   63,977
Django-1.2.6.tar.gz     2011-09-10      427
Django-1.2.7.tar.gz     2011-09-11    6,825
  Django-1.3.tar.gz     2011-03-23  238,504
Django-1.3.1.tar.gz     2011-09-10  176,054
-------------------------------------------
Package `Django` has been downloaded 700,232 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone&quot;&gt;
&lt;h2&gt;Plone&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity plone -v
     Plone-3.2.zip     2008-12-31    1,690
   Plone-3.2.1.zip     2009-02-04    2,466
   Plone-3.2.2.zip     2009-03-03    4,893
   Plone-3.2.3.zip     2009-06-20    2,731
   Plone-3.2a1.zip     2008-10-10      976
  Plone-3.2rc1.zip     2008-12-15      758
     Plone-3.3.zip     2009-08-19    4,611
   Plone-3.3.1.zip     2009-09-09    4,148
Plone-3.3.2.tar.gz     2009-11-03    3,043
   Plone-3.3.3.zip     2009-12-08    1,733
   Plone-3.3.4.zip     2010-01-14    4,906
   Plone-3.3.5.zip     2010-03-03   12,131
Plone-3.3.6.tar.gz     2011-07-19      787
   Plone-3.3b1.zip     2009-03-12      940
  Plone-3.3rc1.zip     2009-03-30      743
  Plone-3.3rc2.zip     2009-04-05    1,822
  Plone-3.3rc3.zip     2009-05-23    2,036
  Plone-3.3rc4.zip     2009-07-07    2,163
  Plone-3.3rc5.zip     2009-08-01    1,211
     Plone-4.0.zip     2010-08-30    3,659
   Plone-4.0.1.zip     2010-10-04    4,224
   Plone-4.0.2.zip     2010-11-22    4,022
   Plone-4.0.3.zip     2011-01-21    3,339
   Plone-4.0.4.zip     2011-03-01    2,711
   Plone-4.0.5.zip     2011-04-09    3,152
   Plone-4.0.6.zip     2011-05-22    1,469
   Plone-4.0.7.zip     2011-06-06    2,192
   Plone-4.0.8.zip     2011-07-17      509
   Plone-4.0.9.zip     2011-07-29      958
  Plone-4.0.10.zip     2011-10-12      495
   Plone-4.0a1.zip     2009-11-19      946
   Plone-4.0a2.zip     2009-12-04      921
   Plone-4.0a3.zip     2009-12-21    1,272
   Plone-4.0a4.zip     2010-02-01    1,121
   Plone-4.0a5.zip     2010-02-19      850
   Plone-4.0b1.zip     2010-03-09    1,308
   Plone-4.0b2.zip     2010-04-10    1,028
   Plone-4.0b3.zip     2010-05-04    1,722
   Plone-4.0b4.zip     2010-06-13    1,642
Plone-4.0b5.tar.gz     2010-07-08    1,995
  Plone-4.0rc1.zip     2010-08-06    1,598
     Plone-4.1.zip     2011-07-17    4,479
Plone-4.1.1.tar.gz     2011-09-21      429
Plone-4.1.2.tar.gz     2011-10-08    2,187
Plone-4.1.3.tar.gz     2011-11-29    1,883
   Plone-4.1a1.zip     2011-01-21      699
   Plone-4.1a2.zip     2011-02-11      451
   Plone-4.1a3.zip     2011-02-15      680
   Plone-4.1b1.zip     2011-03-08      958
   Plone-4.1b2.zip     2011-04-09    1,040
  Plone-4.1rc2.zip     2011-05-22      797
  Plone-4.1rc3.zip     2011-06-06    1,329
   Plone-4.2a1.zip     2011-08-10      521
   Plone-4.2a2.zip     2011-09-16      884
Plone-4.2b1.tar.gz     2011-12-06      619
------------------------------------------
Package `Plone` has been downloaded 111,877 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pyramid&quot;&gt;
&lt;h2&gt;Pyramid&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity pyramid -v
   pyramid-1.0.tar.gz     2011-01-31   24,055
 pyramid-1.0.1.tar.gz     2011-08-13      460
 pyramid-1.0.2.tar.gz     2011-12-15      185
 pyramid-1.0a1.tar.gz     2010-11-05    1,128
 pyramid-1.0a2.tar.gz     2010-11-09      952
 pyramid-1.0a3.tar.gz     2010-11-16      803
 pyramid-1.0a4.tar.gz     2010-11-21    1,732
 pyramid-1.0a5.tar.gz     2010-12-15      639
 pyramid-1.0a6.tar.gz     2010-12-16      834
 pyramid-1.0a7.tar.gz     2010-12-20      912
 pyramid-1.0a8.tar.gz     2010-12-27    1,233
 pyramid-1.0a9.tar.gz     2011-01-08    1,313
pyramid-1.0a10.tar.gz     2011-01-18      960
 pyramid-1.0b1.tar.gz     2011-01-22      871
 pyramid-1.0b2.tar.gz     2011-01-25    1,003
 pyramid-1.0b3.tar.gz     2011-01-28      816
   pyramid-1.1.tar.gz     2011-07-22    5,674
 pyramid-1.1.1.tar.gz     2011-08-13    1,057
 pyramid-1.1.2.tar.gz     2011-08-17    1,560
 pyramid-1.1.3.tar.gz     2011-12-15      160
 pyramid-1.1a1.tar.gz     2011-06-20    1,146
 pyramid-1.1a2.tar.gz     2011-06-23    1,003
 pyramid-1.1a3.tar.gz     2011-06-26    1,252
 pyramid-1.1a4.tar.gz     2011-07-01    1,517
 pyramid-1.1b1.tar.gz     2011-07-10      981
 pyramid-1.1b2.tar.gz     2011-07-13      844
 pyramid-1.1b3.tar.gz     2011-07-15      742
 pyramid-1.1b4.tar.gz     2011-07-18    1,094
   pyramid-1.2.tar.gz     2011-09-13    6,450
 pyramid-1.2.1.tar.gz     2011-09-28   10,357
 pyramid-1.2.2.tar.gz     2011-11-20      322
 pyramid-1.2.3.tar.gz     2011-11-21    3,078
 pyramid-1.2.4.tar.gz     2011-12-06    1,193
 pyramid-1.2.5.tar.gz     2011-12-15      555
 pyramid-1.2.6.tar.gz     2012-01-05      514
 pyramid-1.2.7.tar.gz     2012-01-20      472
 pyramid-1.2a1.tar.gz     2011-08-24      907
 pyramid-1.2a2.tar.gz     2011-08-27      696
 pyramid-1.2a3.tar.gz     2011-08-29    3,268
 pyramid-1.2a4.tar.gz     2011-09-02      593
 pyramid-1.2a5.tar.gz     2011-09-04      840
 pyramid-1.2a6.tar.gz     2011-09-07      602
 pyramid-1.2b1.tar.gz     2011-09-08      493
 pyramid-1.2b2.tar.gz     2011-09-08      700
 pyramid-1.2b3.tar.gz     2011-09-11      674
 pyramid-1.3a1.tar.gz     2011-12-09    1,264
 pyramid-1.3a2.tar.gz     2011-12-14    1,641
 pyramid-1.3a3.tar.gz     2011-12-21    2,716
 pyramid-1.3a4.tar.gz     2012-01-05      675
 pyramid-1.3a5.tar.gz     2012-01-09    2,369
 pyramid-1.3a6.tar.gz     2012-01-20    1,917
---------------------------------------------
Package `pyramid` has been downloaded 97,222 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enjoy the new release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hello Plone theming</title>
    <id>http://blog.aclark.net/2012/01/25/hello-plone-theming/</id>
    <updated>2012-01-25T00:00:00Z</updated>
    <published>2012-01-25T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/01/25/hello-plone-theming/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone-theming&quot;&gt;

&lt;p&gt;&lt;strong&gt;In this post, we introduce a new tutorial.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this post, we introduce a new tutorial aimed at bridging the gap between the &lt;strong&gt;incredibly easy to use and enormously powerful Diazo theming engine for Plone&lt;/strong&gt;, and bootstrapping your first new theme. You do not need to have any Python skills whatsoever to perform these tasks. New Plone themes are:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;HTML/CSS/JavaScript/images (Sound familiar? You don&amp;#8217;t need to know any Plone to understand this part.)&lt;/li&gt;
&lt;li&gt;A set of rules that map your HTML/CSS/JavaScript/images to Plone content. (This part is Diazo-specific; and while Diazo is not part of Plone, integration is provided by a Python package called plone.app.theming.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Diazo rules can get complex, but it&amp;#8217;s very easy to get your first rule done and working and then off you go. You may find this &lt;a class=&quot;reference external&quot; href=&quot;http://readthedocs.org/docs/pythonpackages-docs/en/latest/features/examples/ex8-diazo.html&quot;&gt;new tutorial on pythonpackages.com&lt;/a&gt;. Enjoy, and get busy theming Plone.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone.org maintenance</title>
    <id>http://blog.aclark.net/2011/11/29/plone-org-maintenance/</id>
    <updated>2011-11-29T00:00:00Z</updated>
    <published>2011-11-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/11/29/plone-org-maintenance/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-org-maintenance&quot;&gt;

&lt;p&gt;&lt;strong&gt;I am planning to do some work on the plone.org server and website by the end of the year.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Including:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;plans&quot;&gt;
&lt;h2&gt;Plans&lt;/h2&gt;
&lt;p&gt;Upgrade to the latest 4.2.x series&lt;/p&gt;
&lt;p&gt;Switch from xdv to &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/info/plone.app.theming&quot;&gt;plone.app.theming&lt;/a&gt;&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Reduce the number of NGINXes running on the server by 1 (we currently have an nginx doing the xdv transform)&lt;/li&gt;
&lt;li&gt;Repackage the current plone.org theme as plonetheme.ploneorg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clean up the server&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Separate vendor package configs from buildout generated configs&lt;/li&gt;
&lt;li&gt;Remove archived files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prune tickets on &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/&quot;&gt;dev.plone.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve done some of this work already, earlier this year:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.PloneOrg/commits/4.1-compat&quot;&gt;https://github.com/plone/Products.PloneOrg/commits/4.1-compat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pitch&quot;&gt;
&lt;h2&gt;Pitch&lt;/h2&gt;
&lt;p&gt;To ensure it gets done by the end of the year, I would like to add this project to my calendar as paid work. So if you are able to help out by donating some portion of the goal, I would appreciate it. Please use the chip-in below to contribute to this effort.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone secrets: Episode 4 - Varnish in front</title>
    <id>http://blog.aclark.net/2011/11/09/plone-secrets-episode-4-varnish-in-front/</id>
    <updated>2011-11-09T00:00:00Z</updated>
    <published>2011-11-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/11/09/plone-secrets-episode-4-varnish-in-front/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-episode-4-varnish-in-front&quot;&gt;

&lt;p&gt;&lt;strong&gt;This just in from the production department: use Varnish. (And please forgive the heavily meme-laden approach to describing these techniques.)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;cache-all-the-hosts&quot;&gt;
&lt;h2&gt;Cache ALL the hosts&lt;/h2&gt;
&lt;p&gt;Our ability to use Varnish in production is no secret by now, or at least it shouldn&amp;#8217;t be. What is often less clear is exactly how to use it. One way I like[1], is to run Varnish on your public IP port 80 and make Apache listen on your private IP port 80. Then proxy from Varnish to Apache and enjoy easy caching goodness on all your virtual hosts in Apache.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;configuration&quot;&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;This should require less than five minutes of down time to implement. First, configure the appropriate settings. (Well, first install Apache and Varnish if you haven&amp;#8217;t already: `aptitude install varnish apache2` on Ubuntu Linux[0].)&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;varnish&quot;&gt;
&lt;h3&gt;Varnish&lt;/h3&gt;
&lt;p&gt;To modify the listen IP address and port, we typically edit a file like &lt;em&gt;/etc/default/varnish&lt;/em&gt; (in Ubuntu). However you do it, configure the equivalent of the following on your system:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DAEMON_OPTS=&amp;quot;-a 174.143.252.11:80
             -T localhost:6082
             -f /etc/varnish/default.vcl
             -s malloc,256m&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This environment variable is then passed to &lt;em&gt;varnishd&lt;/em&gt; on the command line. Next, pass traffic to Apache like so (in &lt;em&gt;/etc/varnish/default.vcl&lt;/em&gt; on Ubuntu):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;backend default {
 .host = &amp;quot;127.0.0.1&amp;quot;;
 .port = &amp;quot;80&amp;quot;;
 }
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now on to Apache.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*Please note that the syntax above is for Varnish 3.x and the syntax has (annoyingly) changed from 2.x to 3.x.*&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;apache&quot;&gt;
&lt;h3&gt;Apache&lt;/h3&gt;
&lt;p&gt;The Apache part is a bit simpler. You just need to change the listen port (on Ubuntu this is done in &lt;em&gt;/etc/apache2/ports.conf&lt;/em&gt;), typically from something like:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Listen *:80
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Listen 127.0.0.1:80
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;restart-all-the-services&quot;&gt;
&lt;h2&gt;Restart ALL the services&lt;/h2&gt;
&lt;p&gt;Now restart both services. If all goes well you shouldn&amp;#8217;t notice any difference, except better performance, and when you make a website change and need to clear the cache[2]. For this, I rely on telnetting to the varnish port and issuing the `ban.url` command (formerly `url.purge` in 2.x):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ telnet localhost 6082
Trying 127.0.0.1...
Connected to localhost.
Escape character is &amp;#39;^]&amp;#39;.
200 205
-----------------------------
Varnish Cache CLI 1.0
-----------------------------
Linux,2.6.35.4-rscloud,x86_64,-smalloc,-smalloc,-hcritbitType &amp;#39;help&amp;#39; for command list.
Type &amp;#39;quit&amp;#39; to close CLI session.ban.url /
200 0
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;cache-all-the-disks&quot;&gt;
&lt;h2&gt;Cache ALL the disks&lt;/h2&gt;
&lt;p&gt;This site has Varnish and Apache configured as described in this article. It also has disk caching in Apache enabled, thanks to Elizabeth Leddy&amp;#8217;s article:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plonechix.blogspot.com/2011/08/10-minute-caching-with-apache.html&quot;&gt;http://plonechix.blogspot.com/2011/08/10-minute-caching-with-apache.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a result, it&amp;#8217;s &lt;strong&gt;PEPPY AS THE DICKENS™&lt;/strong&gt; on a 512MB &amp;#8220;slice&amp;#8221; (Cloud server) from Rackspace Cloud. And now you know yet another &amp;#8220;Plone secret&amp;#8221;. Now go make your Plone sites faster, and let me know how it goes in the comments section below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;notes&quot;&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;[0] Using the latest distribution, &amp;#8220;oneric&amp;#8221;.&lt;/p&gt;
&lt;p&gt;[1] I first saw this technique at NASA when NASA Science was powered by
Plone; I found it odd at the time but years later it makes perfect
sense.&lt;/p&gt;
&lt;p&gt;[2] Ideally you&amp;#8217;d configure this in p.a.caching, but I&amp;#8217;ve not been able
to stomach this yet.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone: First Class Python Citizen</title>
    <id>http://blog.aclark.net/2011/10/24/plone-first-class-python-citizen/</id>
    <updated>2011-10-24T00:00:00Z</updated>
    <published>2011-10-24T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/10/24/plone-first-class-python-citizen/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-first-class-python-citizen&quot;&gt;

&lt;p&gt;&lt;strong&gt;The Plone community and software fit nicely within the larger Python ecosystem. Here&amp;#8217;s why.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For almost as long as I have been involved in the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt; project, I&amp;#8217;ve been interested in Plone&amp;#8217;s role in the Python ecosystem. Today as I look across the current landscape, I&amp;#8217;m proud to announce a new milestone the Plone community can take pride in. But the change didn&amp;#8217;t happen overnight, so first let&amp;#8217;s take a quick look back.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;pypi-support-in-psc&quot;&gt;
&lt;h2&gt;PyPI support in PSC&lt;/h2&gt;
&lt;p&gt;Circa 2008, Tarek Ziadé and others finished the PyPI integration branch of PloneSoftwareCenter started by Sidnei Da Silva 2 years before.&lt;/p&gt;
&lt;p&gt;This was a big step towards the &amp;#8220;Pythonification&amp;#8221; of Plone, mainly because Plone packages could now be published on plone.org in the same way Python packages are published to the Python Package Index: via &amp;#8220;python setup.py upload&amp;#8221;. In fact if you are publishing Plone packages, it is recommended that you release to &lt;em&gt;both&lt;/em&gt; PyPI and plone.org simultaneously. This ensures your package is visible to the most number of potential users. And you can use &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/jarn.mkrelease&quot;&gt;mkrelease&lt;/a&gt; to automate the process.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;collective-docs-at-rtd&quot;&gt;
&lt;h2&gt;Collective docs at RTD&lt;/h2&gt;
&lt;p&gt;Just when you thought things couldn&amp;#8217;t get more exciting in Python land, along came &lt;a class=&quot;reference external&quot; href=&quot;http://readthedocs.org/&quot;&gt;readthedocs.org&lt;/a&gt; (a Django Dash production, IIRC). And to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/collective.developermanual/commit/4dc34d113b1a62064c83f3c431acc7d8deb42f1a&quot;&gt;join the fun in July 2011&lt;/a&gt;, I moved Mikko Ohtamaa&amp;#8217;s awesome &lt;strong&gt;Plone Community Managed Developer Manual&lt;/strong&gt; to the &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/collective&quot;&gt;Github collective&lt;/a&gt; and configured the RTD &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/blog/41-service-integration&quot;&gt;service hook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This means that whenever anyone commits a change to the developer manual, within a few minutes a new Sphinx build &lt;a class=&quot;reference external&quot; href=&quot;http://collective-docs.readthedocs.org/en/latest/index.html&quot;&gt;gets published&lt;/a&gt;. It was so easy to set this up, I wish I had done it sooner.&lt;/p&gt;
&lt;p&gt;So you can that see over the years, we have been working ourselves into a frenzy of Python goodness! And last week, it got even better.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;introducing-plone-packages&quot;&gt;
&lt;h2&gt;Introducing: Plone packages!&lt;/h2&gt;
&lt;p&gt;Thanks to the good folks at &lt;a class=&quot;reference external&quot; href=&quot;http://www.cartwheelweb.com/&quot;&gt;Cartwheel Web&lt;/a&gt;, makers of the fine &lt;a class=&quot;reference external&quot; href=&quot;http://opencomparison.org/&quot;&gt;Open Comparison&lt;/a&gt; service, Plone now has its very own &lt;a class=&quot;reference external&quot; href=&quot;http://plone.opencomparison.org&quot;&gt;grid comparison website&lt;/a&gt;! (&lt;a class=&quot;reference external&quot; href=&quot;http://djangopackages.com&quot;&gt;Djangopackages.com&lt;/a&gt; was first, followed by &lt;a class=&quot;reference external&quot; href=&quot;http://pyramid.opencomparison.org&quot;&gt;pyramid.opencomparison.org&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;This is a site where folks can add packages hosted elsewhere (e.g. svn, github, pypi), vote on them, and add grid comparisons to compare similarly-featured add-ons, frameworks, and other related software.  Grids are the killer feature of this site, and personally I&amp;#8217;ve been waiting to use them to answer questions like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&lt;strong&gt;Q: What&amp;#8217;s the best blogging add-on for Plone?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A: http://plone.opencomparison.org/grids/g/weblogs/&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;The content is entirely user driven (TTW only) so please head over to &lt;a class=&quot;reference external&quot; href=&quot;http://plone.opencomparison.org&quot;&gt;plone.opencomparison.org&lt;/a&gt;, login with your github ID, and start adding packages! And while you are at it, please report any issues you find here: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/opencomparison/opencomparison/issues&quot;&gt;https://github.com/opencomparison/opencomparison/issues&lt;/a&gt;. Lastly, let&amp;#8217;s all tweet a big thanks to &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/#!/pydanny&quot;&gt;&amp;#64;pydanny&lt;/a&gt;and &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/#!/audreyr&quot;&gt;&amp;#64;audreyr&lt;/a&gt; for their hard work and generosity!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hello mod_wsgi</title>
    <id>http://blog.aclark.net/2011/08/28/hello-mod_wsgi/</id>
    <updated>2011-08-28T00:00:00Z</updated>
    <published>2011-08-28T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/08/28/hello-mod_wsgi/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-mod-wsgi&quot;&gt;

&lt;p&gt;&lt;strong&gt;It seems I&amp;#8217;ve inadvertently started another series of blog entry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It seems I&amp;#8217;ve inadvertently started another series of blog entry:&amp;nbsp;the &amp;#8220;hello world&amp;#8221; series, wherein I explain how to easily get started with &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/08/20/hello-plone/&quot;&gt;various exciting Python technologies&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This time, in order to familiarize myself with &lt;a class=&quot;reference external&quot; href=&quot;http://code.google.com/p/modwsgi/&quot;&gt;mod_wsgi&lt;/a&gt;, I&amp;#8217;ve created a buildout to automate some of the processes explained in:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide&quot;&gt;http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(This series also helps me to subtly introduce the zc.buildout &amp;#8220;extendables&amp;#8221; I have been working on. More on those in a future post.)&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-extendables&quot;&gt;
&lt;h2&gt;The extendables&lt;/h2&gt;
&lt;p&gt;The extendables make it easy to bootstrap a development environment with complex software requirements, via &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zc.buildout/1.5.2&quot;&gt;zc.buildout&lt;/a&gt;. In this case, I want to be able to type:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ test-apache test-dir
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And get a working, &lt;em&gt;disposable&lt;/em&gt; Apache instance minutes later. I also want that Apache to come with a mod_wsgi app installed and working.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;setup&quot;&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;First we use the &lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/pythonpackages/buildout-apache-modwsgi/master/2.2.x&quot;&gt;aforementioned extendable&lt;/a&gt;, like so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv test-dir
$ cd test-dir
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Edit the buildout.cfg to look like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/pythonpackages/buildout-apache-modwsgi/master/2.2.x
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Run buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Assuming successful completion, you should be able to run Apache in the foreground via:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/supervisord -e debug -n
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now check &lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This works because the &lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/pythonpackages/buildout-apache-modwsgi/master/2.2.x&quot;&gt;&amp;#8220;extendable&amp;#8221; (buildout configuration file)&lt;/a&gt; contains:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The &lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/pythonpackages/buildout-apache-modwsgi/master/conf/app.wsgi.in&quot;&gt;little WSGI app&lt;/a&gt; from the QuickInstallationGuide, templatized via &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recipe.template/1.9&quot;&gt;collective.recipe.template&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/build/blob/master/apache/2.2.x/httpd.conf.in&quot;&gt;templatized httpd.conf file&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I like to automate the process even further with the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/binfiles/blob/master/test-apache&quot;&gt;following script&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#!/bin/shmkdir $1
virtualenv-2.6 $1
cd $1
bin/easy_install zc.buildout
bin/buildout init
cat &amp;lt;&amp;lt; EOF &amp;gt; buildout.cfg
[buildout]
extends = https://raw.github.com/pythonpackages/buildout-apache-modwsgi/master/2.2.x
EOF
bin/buildout
bin/supervisord -e debug -n
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Thus closing the loop on this blog entry, and making the following possible:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ test-apache test-dir
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I&amp;#8217;ve been using my &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/binfiles/blob/master/test-plone&quot;&gt;test-plone&lt;/a&gt; script for years now, and I&amp;#8217;m hoping that the test-apache script proves just as useful (especially as Plone moves closer to a WSGI-supporting stack via &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Zope2/2.13.9&quot;&gt;Zope 2.13&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hello Plone</title>
    <id>http://blog.aclark.net/2011/08/20/hello-plone/</id>
    <updated>2011-08-20T00:00:00Z</updated>
    <published>2011-08-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/08/20/hello-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a Plone &amp;#8220;Hello, World!&amp;#8221; style tutorial/application for Python programmers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a Plone &amp;#8220;Hello, World!&amp;#8221; style tutorial/application for Python programmers. See &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/hello_plone&quot;&gt;https://github.com/aclark4life/hello_plone&lt;/a&gt; for more.&lt;/p&gt;
&lt;div class=&quot;admonition note&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Note&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;This post has been edited post-publication to improve the wording.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonition warning&quot;&gt;
&lt;p class=&quot;first admonition-title&quot;&gt;Warning&lt;/p&gt;
&lt;p class=&quot;last&quot;&gt;This is not a particularly good example since a template can be specified via ZCML. However once you understand hello_plone you will understand the difference between the two approaches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1-setup&quot;&gt;
&lt;h2&gt;Step 1 - Setup&lt;/h2&gt;
&lt;p&gt;Create a directory called &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;hello_plone&lt;/span&gt;&lt;/code&gt; and inside it create a &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;virtualenv&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir hello_plone
$ cd hello_plone
$ virtualenv-2.7 .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then install Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/pip install zc.buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then create an empty buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then add a Plone buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = https://raw.github.com/plock/pins/plone-4-3
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And start Plone:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Open &lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Click the button and follow the steps. You don&amp;#8217;t need to select any additional add-ons from the list. Afterward, you should see your Plone site here: &lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080/Plone&quot;&gt;http://localhost:8080/Plone&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2-develop&quot;&gt;
&lt;h2&gt;Step 2 - Develop&lt;/h2&gt;
&lt;p&gt;Plone is customized via Python packages called Add-ons (née Products). So first we need to create a Python package:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p my.app/my/app
$ touch my.app/my/app/__init__.py
$ touch my.app/my/__init__.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next we add our Python package to the buildout. The &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;develop&lt;/span&gt;&lt;/code&gt; line makes the buildout aware of the Python package. The &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;eggs&lt;/span&gt;&lt;/code&gt; line makes Plone aware of it:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
develop = ./my.app
extends = https://raw.github.com/plock/pins/plone-4-3

[plone]
eggs += my.app
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we can add some view code:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;from Products.Five.browser.pagetemplatefile import
    ViewPageTemplateFile
from zope.publisher.browser import BrowserPage

class Hello(BrowserPage):
    &amp;quot;&amp;quot;&amp;quot;
    &amp;quot;&amp;quot;&amp;quot;

    template = ViewPageTemplateFile(&amp;#39;hello.pt&amp;#39;)

    def __call__(self):
        return self.template()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And load the view code via &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/components/zcml.html&quot;&gt;ZCML&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;configure
    xmlns:browser=&amp;quot;http://namespaces.zope.org/browser&amp;quot;&amp;gt;

    &amp;lt;browser:page
        class=&amp;quot;.hello.hello&amp;quot;
        for=&amp;quot;*&amp;quot;
        name=&amp;quot;hello&amp;quot;
        permission=&amp;quot;zope2.View&amp;quot;
        /&amp;gt;

&amp;lt;/configure&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And add a &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/templates_css_and_javascripts/template_basics.html&quot;&gt;template&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;div metal:use-macro=&amp;quot;here/main_template/macros/master&amp;quot;&amp;gt;

    &amp;lt;div metal:fill-slot=&amp;quot;main&amp;quot;&amp;gt;

        &amp;lt;h1&amp;gt;Hello world!&amp;lt;/h1&amp;gt;

    &amp;lt;/div&amp;gt;

&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3-next-steps&quot;&gt;
&lt;h2&gt;Step 3 - Next steps&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Easy through-the-web form generation with &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/reference_manuals/active/ploneformgen/&quot;&gt;PloneFormGen&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Content types with &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/content/dexterity.html&quot;&gt;Dexterity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Theming with &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/templates_css_and_javascripts/diazo.html&quot;&gt;Diazo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Secrets: Episode 3 - Collective Recaptcha Installation</title>
    <id>http://blog.aclark.net/2011/08/09/plone-secrets-episode-3-collective-recaptcha-installation/</id>
    <updated>2011-08-09T00:00:00Z</updated>
    <published>2011-08-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/08/09/plone-secrets-episode-3-collective-recaptcha-installation/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-episode-3-collective-recaptcha-installation&quot;&gt;

&lt;p&gt;&lt;strong&gt;Another one from the: &amp;#8220;wow, this approach is totally and completely non-obvious to beginners&amp;#8221; department.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;my-kingdom-for-a-custom-contact-form-with-captcha&quot;&gt;
&lt;h2&gt;My kingdom for a (custom) contact form (with captcha)&lt;/h2&gt;
&lt;p&gt;I don&amp;#8217;t know if I&amp;#8217;ve made written-mention of this anywhere else, but &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;aclark.net&lt;/a&gt;has a new customized &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/contact-info&quot;&gt;contact form&lt;/a&gt; with captcha. ;-) It is customized via &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/z3c.jbot&quot;&gt;z3c.jbot&lt;/a&gt; which is an awesome tool (more on that later). This in and of itself is not-so-terribly newsworthy. What is interesting, though, is &lt;em&gt;how&lt;/em&gt; this new customized form came to be; and how its features compare to the default contact form.&lt;/p&gt;
&lt;p&gt;So here goes: In Plone, we have a page template called &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/plone/Products.CMFPlone/trunk/Products/CMFPlone/skins/plone_templates/contact-info.cpt&quot;&gt;contact-info.cpt&lt;/a&gt;. It&amp;#8217;s not so special (in that it is pretty feature-&lt;em&gt;less&lt;/em&gt;, though it will send mail if you ask it to) but it does the job for most folks. And it almost has to, because customizing it is beyond the realm of what &lt;em&gt;anyone&lt;/em&gt; would call &amp;#8220;straight forward&amp;#8221; or &amp;#8220;reasonable to expect from TTW customizers, integrators, or even developers&amp;#8221;¹.&lt;/p&gt;
&lt;p&gt;Why do I say this?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;been-there-done-that-cmfformcontroller&quot;&gt;
&lt;h2&gt;Been there, done that: CMFFormController&lt;/h2&gt;
&lt;p&gt;First, let me start with the technology that is used to implement the contact form.&amp;nbsp;It&amp;#8217;s called &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.CMFFormController&quot;&gt;CMFFormController&lt;/a&gt; and it went out of style in the 1970s, along with disco and bell bottoms. Bell bottoms came back, but CMFFormController didn&amp;#8217;t! Don&amp;#8217;t get me wrong: CMFFormController is a decent technology/implementation. It works. But it&amp;#8217;s not very &amp;#8220;modern&amp;#8221; by today&amp;#8217;s coding standards. As such, it will simply be dragged along Plone-version-after-Plone-version until either: a.) someone wants to replace it, or b.) it becomes too big of a maintenance burden to support and someone has to replace it. This is the way of many things, and there is nothing inherently wrong with this phenomenon. In fact, there are even good things about it: e.g. the release manager, framework team, and core developers&amp;#8217; ability to publish release-after-solid-release under such code-aging circumstances is a testament to their skill and dedication.&lt;/p&gt;
&lt;p&gt;BUT… and this is a BIG BUT.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;we-can-do-better&quot;&gt;
&lt;h2&gt;We can do better&lt;/h2&gt;
&lt;p&gt;Leaving this old stuff laying around, with no new stuff to point new users to does a huge disservice to &lt;em&gt;all&lt;/em&gt; of our users. It flies &lt;em&gt;directly&lt;/em&gt; in the face of one of our core missions: as &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/#!/asigottech&quot;&gt;Wyn Williams&lt;/a&gt; put it once, to be the&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;strong&gt;&amp;#8220;best damn enterprise content manage system on the planet&amp;#8221;.&lt;/strong&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, I&amp;#8217;ve been around the block, so I am not suggesting we must fix everything at once. Legacy software can be supported for years and years and years (and &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Zope2&quot;&gt;YEARS&lt;/a&gt;). What I am suggesting is that we need to make a very significant effort to &lt;strong&gt;COMPLETELY HIDE&lt;/strong&gt; these implementation details to newcomers. I don&amp;#8217;t want to tell people in IRC to go to &lt;strong&gt;portal_skins&lt;/strong&gt; anymore. I want my &amp;#8220;OS X Lion release for Plone&amp;#8221;, please (sans Vista overtones.)&lt;/p&gt;
&lt;p&gt;So how do we get there? Well, in the case of portal_skins there is talk of decommissioning &lt;strong&gt;portal_view_customizations,&lt;/strong&gt; which was supposed to be the &amp;#8220;new portal_skins&amp;#8221; as I understand it. But since half of our templates are still in CMF skin layers, &lt;em&gt;and&lt;/em&gt; because this feature was not technically well received (i.e. it needs &lt;em&gt;more&lt;/em&gt; features and development), &lt;em&gt;and&lt;/em&gt; because &lt;strong&gt;portal_resources&lt;/strong&gt; came along around the same time as &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.app.theming&quot;&gt;plone.app.theming&lt;/a&gt;, folks are considering removing portal_view_customizations. I have no strong opinion about it (other than I hate the name, too long) and I trust the Framework Team to handle it. What I do care about is that whatever remains in the ZMI be very clearly designated as either &amp;#8220;new style&amp;#8221; or &amp;#8220;old style&amp;#8221;. We can&amp;#8217;t get away from the ZMI yet, but portal tools do have title attributes so let&amp;#8217;s use them.&lt;/p&gt;
&lt;p&gt;Now, we can&amp;#8217;t ditch &lt;strong&gt;portal_skins&lt;/strong&gt; just yet, and who knows what will happen with &lt;strong&gt;portal_view_customizations&lt;/strong&gt;, but the *minute* we know some technology is out of date, we should reveal it in the user interface (even in the ZMI user interface). E.g.:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;Curiously, the attribute that holds this string is lowercase &amp;#8220;title&amp;#8221;
(I&amp;#8217;d expect camel case Description, though I&amp;#8217;m not entirely sure why
I expect that.)&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Hanno Schlichting has made some great progress recently with enhancing the ZMI for Plone users, especially with regard to&lt;em&gt;file-system vs.  through-the-web&lt;/em&gt; development, and &lt;em&gt;through-the-plone vs. through-the-zmi configuration&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I love this trend, and would like to see more of it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;secrets-revealed&quot;&gt;
&lt;h2&gt;Secrets revealed&lt;/h2&gt;
&lt;p&gt;Anyway, I&amp;#8217;ve been dancing around the secrets to be revealed in this blog post because it is fun to play with the future. And it&amp;#8217;s important to work hard toward achieving it. But enough of that, here is what you need to know today.&lt;/p&gt;
&lt;p&gt;Like I said, I customized the contact form.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;old-style-vs-new-style&quot;&gt;
&lt;h2&gt;Old style vs. new style&lt;/h2&gt;
&lt;p&gt;Back in the &amp;#8220;old days&amp;#8221; you had to create a CMF skin layer and put a copy of the template in a directory on the file system, configured as a File System Directory View. &lt;em&gt;Everything&lt;/em&gt; used to be customized via skin layers.&lt;/p&gt;
&lt;p&gt;Now-a-days, we have z3c.jbot. Though a bit of a hack², it does exactly what you&amp;#8217;d expect, almost exactly how you&amp;#8217;d expect it to. It &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website&quot;&gt;doesn&amp;#8217;t even require a Python package&lt;/a&gt;. By convention though, folks typically do put z3c.jbot template customizations in Python packages.&lt;/p&gt;
&lt;p&gt;This requires a few steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1-create-a-python-package&quot;&gt;
&lt;h2&gt;Step 1: Create a Python package&lt;/h2&gt;
&lt;p&gt;First, a Python package. This is relatively simple, so I&amp;#8217;m not going to skip-and-point-you-somewhere-else just yet, I&amp;#8217;m going to explain first.
The &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/1123090&quot;&gt;gist of it&lt;/a&gt; is this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p my.package/my/package
$ touch my.package/setup.py
$ touch my.package/my/__init__.py
$ touch my.package/my/package/__init__.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now you would edit setup.py and the &amp;#8220;middle&amp;#8221; __init__.py with code.
Something like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#!/bin/sh
mkdir -p my.package/my/package
touch my.package/setup.py
touch my.package/my/__init__.py
touch my.package/my/package/__init__.py
cat &amp;gt; my.package/setup.py &amp;lt;&amp;lt; EOF
from setuptools import setup, find_packages
setup(
    name=&amp;#39;my.package&amp;#39;,
    packages=find_packages(),
    namespace_packages=[
        &amp;#39;my&amp;#39;,
    ]
)
EOF
cat &amp;gt; my.package/my/__init__.py &amp;lt;&amp;lt; EOF
from pkg_resources import declare_namespace
declare_namespace(__name__)
EOF
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Alternatively, use &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/ZopeSkel&quot;&gt;ZopeSkel&lt;/a&gt; to generate all this boilerplate code for you. It does a much better, and more complete job than what I have done here. The important thing is that you &lt;em&gt;understand what is going on&lt;/em&gt;. In the case of aclark.net, our Python package is called &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/tree/master/src/plonetheme.aclarknet&quot;&gt;plonetheme.aclarknet&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2-add-template-overrides&quot;&gt;
&lt;h2&gt;Step 2: Add template overrides&lt;/h2&gt;
&lt;p&gt;Now that we have a Python package we can start customizing Plone. By convention, we&amp;nbsp; create a &amp;#8220;templates&amp;#8221; directory inside the namespaced package e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir my.package/my/package/templates
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or you can check out aclark.net&amp;#8217;s &amp;#8220;templates&amp;#8221; directory here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/tree/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/tree/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because of the way z3c.jbot works, in the &amp;#8220;templates&amp;#8221; directory, we add files with names that correspond to the Python module we want to customize. E.g.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates/Products.CMFPlone.skins.plone_templates.contact-info.cpt&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates/Products.CMFPlone.skins.plone_templates.contact-info.cpt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(For some reason, github thinks that file is binary, so &lt;a class=&quot;reference external&quot; href=&quot;http://dpaste.com/589529/&quot;&gt;here are the contents&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Now, this is the amazing part: in addition to templates in views, viewlets and portlets, we can customize any &lt;a class=&quot;reference external&quot; href=&quot;http://old.zope.org/Products/CMF/&quot;&gt;CMF&lt;/a&gt; object! E.g. the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/RestrictedPython&quot;&gt;RestrictedPython&lt;/a&gt; (more technology anyone?) CMFFormController validation script used to validate our contact form:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates/Products.CMFPlone.skins.plone_form_scripts.validate_site_feedback.vpy&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates/Products.CMFPlone.skins.plone_form_scripts.validate_site_feedback.vpy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That brings us to adding recaptcha, but first let us finish configuring template overrides.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3-configure-template-overrides&quot;&gt;
&lt;h2&gt;Step 3: Configure template overrides&lt;/h2&gt;
&lt;p&gt;Now that we have customized Plone templates, we can configure Plone to use our customizations.&lt;/p&gt;
&lt;p&gt;This is done via a technology you may have heard of: &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/documentation/manual/theme-reference/buildingblocks/components/wiring&quot;&gt;ZCML&lt;/a&gt;. Using ZCML, we can tell Plone (or jbot in this case) to use the templates in our &amp;#8220;templates&amp;#8221; directory.&lt;/p&gt;
&lt;p&gt;The ZCML we are going to use is placed in the &amp;#8220;top level&amp;#8221; configure.zcml file in our package. That means we need a top level configure.zcml file:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ touch my.package/my/package/configure.zcml
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next we add ZCML to &amp;#8220;configure our application&amp;#8221;. Note in addition to the ZCML used to configure jbot, there is ZCML for Diazo and ZCML to hold our &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/06/20/plone-secrets-episode-1-%e2%80%94-site-actions-contact-link/&quot;&gt;Genericsetup customizations:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;configure
    xmlns:browser=&amp;quot;http://namespaces.zope.org/browser&amp;quot;
    xmlns:genericsetup=&amp;quot;http://namespaces.zope.org/genericsetup&amp;quot;
    xmlns:plone=&amp;quot;http://namespaces.plone.org/plone&amp;quot;
    xmlns=&amp;quot;http://namespaces.zope.org/zope&amp;quot;&amp;gt;    &amp;lt;plone:static directory=&amp;quot;theme/aclarknet&amp;quot; type=&amp;quot;theme&amp;quot; /&amp;gt;    &amp;lt;include package=&amp;quot;z3c.jbot&amp;quot; file=&amp;quot;meta.zcml&amp;quot; /&amp;gt;
    &amp;lt;browser:jbot directory=&amp;quot;templates&amp;quot; /&amp;gt;    &amp;lt;genericsetup:registerProfile
        name=&amp;quot;default&amp;quot;
        title=&amp;quot;ACLARK.NET, LLC profile&amp;quot;
        description=&amp;quot;Installs ACLARK.NET, LLC site
            customizations&amp;quot;
        directory=&amp;quot;profiles/default&amp;quot;
        provides=&amp;quot;Products.GenericSetup.interfaces.EXTENSION&amp;quot;
        /&amp;gt;&amp;lt;/configure&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This file is located here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/configure.zcml&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/configure.zcml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can see that everything inside the &amp;lt;configure&amp;gt;&amp;lt;/configure&amp;gt; tag(s) is associated with an XML namespace. If you don&amp;#8217;t add the appropriate namespace inside the &amp;lt;configure&amp;gt; tag, your configuration will fail spectacularly (because without the proper XML namespace configured, there is no code loaded to handle your configuration.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-4-add-recaptcha&quot;&gt;
&lt;h2&gt;Step 4: Add recaptcha&lt;/h2&gt;
&lt;p&gt;Now, finally, we get to the exciting part. We have customized our contact form, but we are receiving a fair amount of spam due to spammers&amp;#8217; ability to automate form submission. To foil the spammers, we want to add a captcha form that will hopefully require that an actual human to fill out the form.&lt;/p&gt;
&lt;p&gt;Thanks to David Glick and Groundwire, we have &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recaptcha&quot;&gt;collective.recaptcha&lt;/a&gt; which provides an integration of &lt;a class=&quot;reference external&quot; href=&quot;http://www.google.com/recaptcha&quot;&gt;Google&amp;#8217;s Recaptcha service&lt;/a&gt; into Plone.&lt;/p&gt;
&lt;p&gt;In order to use it, first we add the package to our buildout, e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;…
[plone]
# Eggs are Python packages
eggs +=
#   Diazo theming
    plonetheme.aclarknet
#   Add-ons
    collective.portlet.wordpress
    collective.recaptcha# Need zcml for c.recaptcha until 1.1.3 is released
zcml = collective.recaptcha
…
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;See the rest of the file here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://raw.github.com/ACLARKNET/aclark_net_website/master/buildout.cfg&quot;&gt;https://raw.github.com/ACLARKNET/aclark_net_website/master/buildout.cfg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now run buildout and restart Plone.&lt;/p&gt;
&lt;p&gt;With collective.recaptcha installed via buildout, you should now be able to open &lt;a class=&quot;reference external&quot; href=&quot;http://yoursite:8080/Plone/&amp;#64;&amp;#64;recaptcha-settings&quot;&gt;http://yoursite:8080/Plone/&amp;#64;&amp;#64;recaptcha-settings&lt;/a&gt; to configure Recaptcha.&lt;/p&gt;
&lt;p&gt;(To get a public and private key, you can sign up for recaptcha here: &lt;a class=&quot;reference external&quot; href=&quot;http://www.google.com/recaptcha&quot;&gt;http://www.google.com/recaptcha&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Lastly, make the appropriate changes to the contact form and validation script. E.g. &lt;a class=&quot;reference external&quot; href=&quot;http://dpaste.com/589529/&quot;&gt;include the captcha image:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;…
&amp;lt;tal:block tal:replace=&amp;quot;structure
    context/@@captcha/image_tag&amp;quot;/&amp;gt;
…
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And make sure to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/templates/Products.CMFPlone.skins.plone_form_scripts.validate_site_feedback.vpy&quot;&gt;validate the submission&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;…
    # Re-captcha validation
    if not context.restrictedTraverse(&amp;#39;@@captcha&amp;#39;).verify():
        context.plone_utils.addPortalMessage(_(u&amp;#39;You entered
            an invalid captcha.&amp;#39;), &amp;#39;error&amp;#39;)
        return state.set(status=&amp;#39;failure&amp;#39;)
    else:
        return state
…
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;notes&quot;&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;¹ I&amp;#8217;m pushing &amp;#8220;reasonable&amp;#8221; limits here for argument&amp;#8217;s sake. For those who know Plone already, a lot of what might seem impossible to newcomers is &amp;#8220;reasonable&amp;#8221; for them. No flames please. Unless you absolutely must.  ;-)&lt;/p&gt;
&lt;p&gt;² I hear people call it that, though I don&amp;#8217;t know the details. I assume it &amp;#8220;monkey patches&amp;#8221; which template to use at render-time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Secrets: Episode 2 - Collective Python Buildout</title>
    <id>http://blog.aclark.net/2011/07/06/plone-secrets-episode-2-collective-python-buildout/</id>
    <updated>2011-07-06T00:00:00Z</updated>
    <published>2011-07-06T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/07/06/plone-secrets-episode-2-collective-python-buildout/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-episode-2-collective-python-buildout&quot;&gt;

&lt;p&gt;&lt;strong&gt;You know who uses the (Plone) Collective Python buildout?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You know who uses the (Plone) Collective Python buildout? Me neither, because we don&amp;#8217;t have any good statistics on its use (that I know of).  If it were a Python package, we could at least &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/06/16/youre-so-vain-so-why-not-use-vanity/&quot;&gt;count the number of times it has been downloaded&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You know who should use it? Everyone.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[dramatic pause…]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;OK maybe not everyone, but at least everyone that regularly develops with &lt;strong&gt;multiple versions of Python&lt;/strong&gt;. Here&amp;#8217;s why.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;actively-maintained&quot;&gt;
&lt;h2&gt;Actively maintained&lt;/h2&gt;
&lt;p&gt;Check out the log. It has been going strong for over 3 years.&lt;/p&gt;
&lt;p&gt;If I recall correctly, it was born out of the frustration¹ of having to compile Python on Mac OS X Leopard. Python &lt;em&gt;never&lt;/em&gt; compiles correctly on new versions of OS X (which is a complete mystery to me given that Apple ships with Python, don&amp;#8217;t they think people will want to compile it?).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;easy-to-install&quot;&gt;
&lt;h2&gt;Easy to install&lt;/h2&gt;
&lt;p&gt;Got Subversion? Then you &lt;em&gt;can haz&lt;/em&gt; the Collective Python buildout². You will also need to bootstrap it with whatever Python version you happen to have laying around. I won&amp;#8217;t go into detail about this; but suffice it to say depending on your OS, one of the following or something like it should work:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ aptitude install python2.5
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install python
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you are on Windows, give up (unless you have a Microsoft C compiler). Sorry.&lt;/p&gt;
&lt;p&gt;Now, check out the code from the repository (if you are a member of the &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/collective&quot;&gt;Collective&lt;/a&gt; and may potentially contribute something back, make sure you use https):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn co http://svn.plone.org/svn/collective/buildout/python
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next, bootstrap and run the buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cd python
$ python bootstrap.py -d
$ bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That&amp;#8217;s it. The buildout should go merrily on it&amp;#8217;s way compiling Python 2.4 through 3.2. When it finishes, you can install it in /opt (or wherever you like) with the following command (you might need sudo):&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/install-links
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then you should see:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /bin/ls -1 /opt/local/bin
easy_install-2.4
easy_install-2.5
easy_install-2.6
easy_install-2.7
easy_install-3.2
pip-2.4
pip-2.5
pip-2.6
pip-2.7
pip-3.2
python2.4
python2.5
python2.6
python2.7
python3.2
virtualenv-2.4
virtualenv-2.5
virtualenv-2.6
virtualenv-2.7
virtualenv-3.2
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;easy-to-configure&quot;&gt;
&lt;h2&gt;Easy to configure&lt;/h2&gt;
&lt;p&gt;Now you can add &lt;strong&gt;/opt/local/bin&lt;/strong&gt; to your environment PATH variable.  This will make it easy to choose a particular Python, PIP, or Virtualenv at your leisure.&lt;/p&gt;
&lt;p&gt;Unfortunately, if you pip install something, it will end up in the checkout instead of &lt;em&gt;/opt/local/bin&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To get around this, I usually pick one Python for daily use, and add its bin directory to my environment PATH variable:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ echo $PATH | tr &amp;#39;:&amp;#39; &amp;#39;n&amp;#39;
/sbin
/usr/sbin
/usr/local/bin
/opt/local/bin
/Users/aclark/Developer/collective/python/python-2.7/bin
/usr/bin
/bin
/sbin
/usr/X11/bin
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After various pip installs, my 2.7 bin directory contains the usual tools of the trade:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ /bin/ls -1 /Users/aclark/Developer/collective/python/
python-2.7/bin
__dotcloud_git_ssh
activate
activate.csh
activate.fish
activate_this.py
bfg2pyramid
checkoutmanager
cloudservers
dotcloud
easy_install
easy_install-2.7
eye
flake8
fsdump
fsoids
fsrefs
fstail
hg
mako-render
mkrelease
paster
pilconvert.py
pildriver.py
pilfile.py
pilfont.py
pilprint.py
pip
pip-2.7
playerpiano
pygmentize
python
python2.7
recorderpiano
repozo
rfc2397
rst2html.py
rst2latex.py
rst2man.py
rst2newlatex.py
rst2odt.py
rst2odt_prepstyles.py
rst2pseudoxml.py
rst2s5.py
rst2xml.py
rstpep2html.py
runzeo
sphinx-autogen
sphinx-build
sphinx-quickstart
vanity
zconfig
zconfig_schema2html
zdaemon
zeoctl
zeopack
zeopasswd
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;wrap-it-up-i-ll-take-it&quot;&gt;
&lt;h2&gt;Wrap it up, I&amp;#8217;ll take it&lt;/h2&gt;
&lt;p&gt;That&amp;#8217;s it! There is not too much more to say, other than I hope you find this post useful and will consider using the &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/buildout/python&quot;&gt;Collective Python buildout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, comments are always welcome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;notes&quot;&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;¹ Experienced by its creator, &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/fschulze&quot;&gt;fschulze&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;² It will likely end up on &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/collective&quot;&gt;Github&lt;/a&gt; at some point.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Secrets Episode 1 Site Actions Contact Link</title>
    <id>http://blog.aclark.net/2011/06/20/plone-secrets-episode-1-site-actions-contact-link/</id>
    <updated>2011-06-20T00:00:00Z</updated>
    <published>2011-06-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/06/20/plone-secrets-episode-1-site-actions-contact-link/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-episode-1-site-actions-contact-link&quot;&gt;

&lt;p&gt;&lt;strong&gt;Today I am introducing a new category of blog entry called Plone secrets.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The goal is to describe a set of developer/integrator techniques that are extremely valuable, but completely non-obvious to newcomers.&lt;/p&gt;
&lt;p&gt;The first episode, called: &lt;strong&gt;Site actions contact link&lt;/strong&gt;, is really just a technique that involves the Zope Management Interface, Plone interface, file system, Diazo, and quite possibly a few other technologies. This is no secret, but certainly convoluted. Noticeably absent is anything Python-related, unless you count the &lt;cite&gt;plonetheme.aclarknet&lt;/cite&gt; namespace package.&lt;/p&gt;
&lt;p&gt;We begin by pointing your attention to the new &amp;#8220;Contact us today!&amp;#8221; link on aclark.net.&lt;/p&gt;
&lt;p&gt;This is a gratuitous rip off of any Plone firm&amp;#8217;s website that has contact info in the upper right of their site (e.g.  &lt;a class=&quot;reference external&quot; href=&quot;http://sixfeetup.com&quot;&gt;http://sixfeetup.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I knew I wanted to do &amp;#8220;my version&amp;#8221; of adding contact info to the upper right, and I think I&amp;#8217;ve seen someone use this exact technique somewhere else (I would credit them if I could remember.)&lt;/p&gt;
&lt;p&gt;Long story short: Plone 4&amp;#8217;s sunburst theme has a nice JavaScript drop down menu for the personal tools menu. As long as I was willing to give up a link to the login form (which I don&amp;#8217;t like displaying on public sites anyway), I could use this JavaScript menu to quickly and easily provide a link to my contact form.&lt;/p&gt;
&lt;p&gt;It &amp;#8220;only&amp;#8221; required the following:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1&quot;&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Get the personal tools menu to show up in my site. This was accomplished via the following Diazo rule:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;prepend content=&amp;#39;//*[@id=&amp;quot;portal-personaltools&amp;quot;]&amp;#39;
     theme=&amp;#39;//*[@id=&amp;quot;search&amp;quot;]&amp;#39; /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note also that I am using the early-supported XPath syntax, but the more friendly CSS syntax is supported now too. See &lt;a class=&quot;reference external&quot; href=&quot;http://diazo.org&quot;&gt;http://diazo.org&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;For the full set of Diazo rules for this site, see here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Plone: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/theme/aclarknet/rules.xml&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/theme/aclarknet/rules.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wordpress: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/theme/blog.xml&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/theme/blog.xml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2&quot;&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Next, we need to create and display only the &amp;#8220;Contact us today!&amp;#8221; link, which also involves disabling the &amp;#8220;Log in&amp;#8221; link. These tricks can be performed in the Zope Management Interface via the portal_actions tool.&lt;/p&gt;
&lt;p&gt;First, browse to &lt;cite&gt;Site Setup -&amp;gt; Zope Management Interface -&amp;gt; portal_actions -&amp;gt; user&lt;/cite&gt; and create a &lt;cite&gt;contact&lt;/cite&gt; action.&lt;/p&gt;
&lt;p&gt;Fill in the appropriate fields and click &lt;cite&gt;Save changes&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;Finally, hide the &lt;cite&gt;Log in&lt;/cite&gt; action by unchecking &lt;cite&gt;Visible&lt;/cite&gt; and clicking &lt;cite&gt;Save changes&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3&quot;&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;Lastly and most importantly, persist your work on the file system outside of the database. You don&amp;#8217;t want to be forced to recreate this site action ever again through the web.&lt;/p&gt;
&lt;p&gt;This involves exporting the action via portal setup, and adding it to your package&amp;#8217;s GenericSetup profile. Browse to &lt;cite&gt;Site Setup -&amp;gt; Zope Management Interface -&amp;gt; portal_setup -&amp;gt; Export. Check the `Action providers&lt;/cite&gt; step.&lt;/p&gt;
&lt;p&gt;Then scroll all the way down to bottom and click &lt;cite&gt;Export selected steps&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;This will give you a tarred/gzipped file that when extracted will give you an &lt;cite&gt;actions.xml&lt;/cite&gt; file. Edit this file to include only the action you created, like so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;/object&amp;gt;
&amp;lt;/object&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can find this file in its entirety here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/profiles/default/actions.xml&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/profiles/default/actions.xml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You also have to register a default profile in your package with ZCML (more technology!), like so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;genericsetup:registerProfile
 name=&amp;quot;default&amp;quot;
 title=&amp;quot;ACLARK.NET, LLC profile&amp;quot;
 description=&amp;quot;Installs ACLARK.NET, LLC site customizations&amp;quot;
 directory=&amp;quot;profiles/default&amp;quot;
 provides=&amp;quot;Products.GenericSetup.interfaces.EXTENSION&amp;quot;
 /&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can find this file in its entirety here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/configure.zcml&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/configure.zcml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-4&quot;&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;Style the results. This is more like Step 3.5, but still important.  Because we are doing Diazo theming, styling is easy. It&amp;#8217;s just a matter of editing the style sheet on the file system like you would expect to do in any web project. Of course, you need to know a bit about CSS and the CSS ids that Plone uses:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#personaltools-contact {
    color: #AA001F;
    background: white;
    text-transform: uppercase;
    font-size: 150%;
}
#portal-personaltools {
    background: white;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can find this file in its entirety here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/theme/aclarknet/static/css/plone.css#L519&quot;&gt;https://github.com/ACLARKNET/aclark_net_website/blob/master/src/plonetheme.aclarknet/plonetheme/aclarknet/theme/aclarknet/static/css/plone.css#L519&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course, these styles apply to the public facing site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;results&quot;&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;p&gt;I hope this post captures the essence of why I think many folks may be intimidated by Plone: in more cases than not, one must understand way too many technologies in order to get the job done. I hope to continue to demystify Plone through a series of &amp;#8220;Plone secrets&amp;#8221; posts, and ultimately I think the Plone project hopes to resolve these issues once and for all, however long that takes.&lt;/p&gt;
&lt;p&gt;I will speculate that long term Plone will move away from Zope 2, and everything from the Zope Management Interface that was useful will be recreated in Plone (i.e. ported). Or rather, that is what I would like to see happen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">New Plone Theming Has Arrived</title>
    <id>http://blog.aclark.net/2011/05/27/new-plone-theming-has-arrived/</id>
    <updated>2011-05-27T00:00:00Z</updated>
    <published>2011-05-27T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/05/27/new-plone-theming-has-arrived/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-plone-theming-has-arrived&quot;&gt;

&lt;p&gt;&lt;strong&gt;Due to the new Diazo theming features now available, I am very excited about the recent release of Plone 4.1rc2&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit2:&lt;/strong&gt;Enfold/Ploud.net looking for theme developers, see Alan Runyan&amp;#8217;s comment below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: Laurence Rowe made new Diazo and plone.app.theming releases so the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plonetheme.unilluminated/blob/master/unilluminated.zip?raw=true&quot;&gt;zip file&lt;/a&gt;now works! Thanks Laurence.&lt;/p&gt;
&lt;p&gt;Due to the new Diazo theming features now available, I am very excited about the recent release of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Plone/4.1rc2&quot;&gt;Plone 4.1rc2&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.app.theming/1.0b2&quot;&gt;plone.app.theming 1.0b2&lt;/a&gt;. So much so, I created a couple themes (in just a few hours) to demonstrate my &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Rapture&quot;&gt;rapture [1]&lt;/a&gt;:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;(released)
&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plonetheme.unilluminated/0.1.0&quot;&gt;http://pypi.python.org/pypi/plonetheme.unilluminated/0.1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(unreleased) &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plonetheme.coolblue&quot;&gt;https://github.com/aclark4life/plonetheme.coolblue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Granted, these aren&amp;#8217;t entirely &amp;#8220;finished&amp;#8221; (e.g. lots of CSS improvements are needed) but it is truly impressive how much you can do with so little effort (thanks to the hard work of the Diazo team, Plone team, and of course the theme designers themselves).&lt;/p&gt;
&lt;p&gt;The best part has got to be the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.app.theming/1.0b2#zip-file-format&quot;&gt;zip file packaging features&lt;/a&gt; in plone.app.theming (provided by &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.resource/1.0b2&quot;&gt;plone.resource&lt;/a&gt;). While I did have a bit of trouble getting &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plonetheme.unilluminated/blob/master/plonetheme/unilluminated/theme/unilluminated.zip&quot;&gt;my zip file&lt;/a&gt; to work, I suspect I&amp;#8217;ll get that issue resolved this week (I don&amp;#8217;t think I was able to import any zipped themes, even the ones from p.a.theming tests).&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;suprise-i-like-it&quot;&gt;
&lt;h2&gt;Suprise! I like it&lt;/h2&gt;
&lt;p&gt;What I am most surprised about is how much I like this approach:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Developers can easily distribute themes in Python packages, and pay a much smaller &amp;#8220;theming tax&amp;#8221; with new style Diazo theming.&lt;/li&gt;
&lt;li&gt;They can also optionally choose to distribute Diazo themes as zip files for easy public consumption (although I can&amp;#8217;t think of any
good, automated way to publish just the zip files.)&lt;/li&gt;
&lt;li&gt;If I am not mistaken the contents of a zipped theme can be loaded &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plonetheme.unilluminated/blob/master/plonetheme/unilluminated/configure.zcml&quot;&gt;quite elegantly&lt;/a&gt;, without changing their contents, via a &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/plonetheme.unilluminated/&quot;&gt;Python
package&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, let us now commence the spamming of PyPI and the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products&quot;&gt;Plone.org downloads section&lt;/a&gt; with &amp;#8220;fun&amp;#8221; easy-to-install (read: no buildout) Plone themes! [2]&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;disclaimer&quot;&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;These are my experiences with relatively new Plone technologies. If I&amp;#8217;ve made a mistake or if your experiences are different, please let me know in the comments.&lt;/p&gt;
&lt;p&gt;[1] Please forgive gratuitous belated rapture humor.&lt;/p&gt;
&lt;p&gt;[2] Before you get upset over any suggested spamming, I only mean to suggest that the ability to distribute a theme as a zip file lowers the bar to Plone adoption tremendously. Personally (and tentatively, since I&amp;#8217;m not even sure if everything is meant to work the way I currently expect it to), I plan to include a zipped archive of any theme I distribute as a Python package because it is so easy to do so (or hopefully will be very soon). But how the community chooses to capitalize on this new-found ability remains to be seen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Top 10 Reasons Plone 3.3 Site Admin Book is Still for You</title>
    <id>http://blog.aclark.net/2011/05/10/top-10-reasons-plone-3-3-site-admin-book-is-still-for-you/</id>
    <updated>2011-05-10T00:00:00Z</updated>
    <published>2011-05-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/05/10/top-10-reasons-plone-3-3-site-admin-book-is-still-for-you/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;top-10-reasons-plone-3-3-site-admin-book-is-still-for-you&quot;&gt;

&lt;p&gt;&lt;strong&gt;About a year ago, I was frantically trying to finish &amp;#8216;Plone 3.3 Site Administration&amp;#8217; …&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;About a year ago, I was frantically trying to finish &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/book&quot;&gt;Plone 3.3 Site Administration&lt;/a&gt; in time to teach it at Plone Symposium East 2010 at Penn State University as well as publish it. I remember staying up all night to finish &amp;amp; submit the final drafts then driving 4 hours to Penn State, then teaching for 8 hours before I was finally able to crash (but not before consuming a large and delicious cheeseburger and a Yuengling from the &lt;a class=&quot;reference external&quot; href=&quot;http://www.nittanylioninn.psu.edu/&quot;&gt;Nittany Lion Inn&lt;/a&gt; room service, yum).&lt;/p&gt;
&lt;p&gt;The class went well and everyone seemed happy with the results and I am very grateful to PSU for the opportunity. I remember struggling to get some Windows users up to speed, so this year I&amp;#8217;ve decided to &amp;#8220;require&amp;#8221; students to install Plone before the class via the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/plone/releases/4.0.5&quot;&gt;appropriate installer for their platform&lt;/a&gt;. Most &amp;#8220;site admin-ing&amp;#8221; we do will be &amp;#8220;ad hoc&amp;#8221; preferably on top of a stand-alone Python installation. But we can refer to the installer-based Plone as needed and in fact the installer-based Plone is all some folks will ever need or want.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-list&quot;&gt;
&lt;h2&gt;The list&lt;/h2&gt;
&lt;p&gt;Anyway, this post is about this year&amp;#8217;s class taught from the same material but updated to account for any changes that have occurred since the book was first published. Most importantly, it addresses the release of Plone 4 in the context of the book title &amp;#8220;Plone 3.3 Site Administration&amp;#8221;. So without further ado, why &amp;#8220;Plone 3.3 Site Administration&amp;#8221; is still for you:&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;The version reference in the title is mostly meaningless&lt;/strong&gt;.  &lt;a class=&quot;reference external&quot; href=&quot;http://www.packtpub.com&quot;&gt;PACKT&lt;/a&gt; insist on incorporating a software version number into the title of their books. I would have called it: &amp;#8220;Plone Site Administration&amp;#8221;, or &amp;#8220;Buildout for Plone&amp;#8221;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The book teaches valuable *techniques*, using Plone 3.3 as an example&lt;/strong&gt;. Most, if not all of the techniques still apply today i.e. w/Plone 4.0.x and Plone 4.1.x. They will likely continue to apply as long as Plone continues to rely on &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zc.buildout&quot;&gt;zc.buildout&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plone makes it relatively easy to upgrade&lt;/strong&gt; by providing &lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/release/4.1b2/versions.cfg&quot;&gt;version numbers&lt;/a&gt; for all of the packages it requires. In many cases an upgrade simply involves referring to a newer list of package versions. In the case of upgrading from Plone 3.3.x to Plone 4.0.x, the [zope2] section goes away because Zope2 became an egg. (Compare &lt;a class=&quot;reference external&quot; href=&quot;http://raw.github.com/plock/pins/master/plone-3-3&quot;&gt;this buildout&lt;/a&gt; with &lt;a class=&quot;reference external&quot; href=&quot;http://raw.github.com/plock/pins/master/plone-4-0&quot;&gt;this one&lt;/a&gt;.) Also Plone 4 buildouts should be bootstrapped with Python 2.6 instead of Python 2.4 as was required by Plone 3.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Python tools &amp;#8220;goodness&amp;#8221;&lt;/strong&gt;. This book goes to great lengths to demonstrate how Plone fits &amp;#8220;naturally&amp;#8221; on top of the Python software stack. It also includes information about non-Plone-specific Python-related technologies like &lt;a class=&quot;reference external&quot; href=&quot;http://packages.python.org/setuptools/&quot;&gt;Setuptools&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/pip&quot;&gt;pip&lt;/a&gt;. This in theory makes Plone more approachable to &amp;#8220;regular&amp;#8221; Python folk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Python buildout&lt;/strong&gt;. One of the most useful things the Plone community has to offer the Python community at large is the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/buildout.python&quot;&gt;Python buildout&lt;/a&gt;. If you do development that requires multiple versions of Python e.g. Plone 3.3.x/4.0.x you could do worse than to rely on this buildout to provide them multiple versions quickly and easily. The book dances around the subject, but the point is: use it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;. This book goes to great lengths to demonstrate the Plone installation process on three popular operating systems: Mac OS X, Ubuntu Linux, and Windows. The point is to show off how similar the process is across platforms because Python does all the hard work, and of course to deal with the cases where it is not similar e.g. it&amp;#8217;s &amp;#8220;hard&amp;#8221; to compile &lt;a class=&quot;reference external&quot; href=&quot;http://python.org/download/windows/&quot;&gt;Python on Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Add-ons&lt;/strong&gt;! A lot of the value of Plone comes from the ability to customize it to fit your needs. If that customization has already been done by some other member of the community, even better. This is one of the core essences of the Plone community: everyone working hard to contribute to the available pool of add-ons, and then &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products&quot;&gt;sharing the results&lt;/a&gt;. This book aims to make you better at evaluating the myriad of options you may be presented with when you need to &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi&quot;&gt;find and install an add-on&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upgrades&lt;/strong&gt;! The final chapter of the book holds your hand and walks you through an upgrade from Plone 3.3.x to Plone 4.0.x. It doesn&amp;#8217;t contain anything you can&amp;#8217;t find at &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/upgrade&quot;&gt;http://plone.org/upgrade&lt;/a&gt; (in fact it contains much less information), but in the context of a book full of buildout configuration file examples, it should feel more like a natural step than an intimidating process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;! The book covers how to deal with security patches, &lt;em&gt;not&lt;/em&gt; in the common case of when a hotfix is released as a Zope 2 Product or Python egg, but in the &lt;a class=&quot;reference external&quot; href=&quot;http://raw.github.com/plock/pins/master/plone-2-1&quot;&gt;somewhat more obscure case&lt;/a&gt; where a newer (non-egg) Zope2 release replaces an older one with a vulnerability. The modern equivalent would be a Plone release post-security-hotfix release. Such releases simply contain a newer KGS listing package versions that contain the appropriate fixes.  This &amp;#8220;old school&amp;#8221; example is included to give readers as broad a perspective as possible, so that they may better handle anything they may come across in the wild.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;All the boring stuff too&lt;/strong&gt;. This book also walks you through the remaining &amp;#8220;hot&amp;#8221; topics not covered yet in this list, all from a heavy zc.buildout configuration management perspective: site basics e.g. customizing navigation, appearance (AKA theming, strictly &amp;#8220;old style&amp;#8221; sorry), administration e.g. mail settings, ldap, deployment and maintenance e.g. automating database backups and packing, and optimization e.g. load balancing, supervisor, and &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/munin.plone&quot;&gt;munin graphs&lt;/a&gt;!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That&amp;#8217;s it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-training&quot;&gt;
&lt;h2&gt;The training&lt;/h2&gt;
&lt;p&gt;Sound even the &lt;em&gt;slightest&lt;/em&gt; bit interesting? And/or are these things you &lt;em&gt;need&lt;/em&gt; to know about Plone for your job? If so, then you or your employees will not want to miss my one day class next week at the &lt;a class=&quot;reference external&quot; href=&quot;http://weblion.psu.edu/symposium&quot;&gt;Plone Symposium East 2011&lt;/a&gt;. In case you or your employees are interested, you can sign up here (separate from the symposium):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/services&quot;&gt;http://aclark.net/services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope to see you there.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-service&quot;&gt;
&lt;h2&gt;The service&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;baas-buildout-as-a-service&quot;&gt;
&lt;h3&gt;BaaS (Buildout as a Service)&lt;/h3&gt;
&lt;p&gt;(Yes, I am serious)&lt;/p&gt;
&lt;p&gt;And finally for whatever it is worth, many of the lessons learned from writing the book from the author&amp;#8217;s perspective ended up here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plock/pins&quot;&gt;https://github.com/plock/pins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That is to say: buildouts are frequently changing in response to what is going on in the Python package ecosystem around them even though their primary goal is to maintain stability and/or to only change when you want to change. When a change like a security fix or configuration change comes along, the author pushes changes out to the dist server than deploys the dist server changes to production.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Conference 2008 is Finally a Wrap</title>
    <id>http://blog.aclark.net/2011/05/03/plone-conference-2008-is-a-wrap/</id>
    <updated>2011-05-03T00:00:00Z</updated>
    <published>2011-05-03T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/05/03/plone-conference-2008-is-a-wrap/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-conference-2008-is-finally-a-wrap&quot;&gt;

&lt;p&gt;&lt;strong&gt;I have yet to finish my obligations to Plone Conference 2008 until NOW.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I have yet to finish my obligations to &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt; until NOW: approximately 2 years, 6 months, and 23 days after the end of the post-conference sprint.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-story&quot;&gt;
&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;We had some trouble with the video company and I had to hunt them down to get copies of missing talks. We still didn&amp;#8217;t get everything, but this is the last of what we did get. I got these missing DVDs about a year ago, and since then I&amp;#8217;ve been trying to find the time to upload them to &lt;a class=&quot;reference external&quot; href=&quot;http://zpugdc.blip.tv/&quot;&gt;blip.tv&lt;/a&gt;. Invariably, I got stuck on some aspect of the conversion process so I decided to &amp;#8220;give up&amp;#8221; and just upload the ripped copies to &lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org:5021/media/video/conference/2008/PloneConference2008/&quot;&gt;dist.plone.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As such, if anyone in the community has the time and expertise to convert these to Quicktime format, I would greatly appreciate it, and I would be happy to upload the results to blip.tv (this is how we did it the first time if I recall correctly.) Until then, they have at least reached their final resting place, and folks can get access to them if they are interested, here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-2/33-weblion-bringing-open-sources-practices-to-the-educational-enterprise.m4v&quot;&gt;WebLion: Bringing Open Sources Practices to the Educational
Enterprise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-3/43-introduction-to-z3c.form.m4v&quot;&gt;Introduction to z3c.form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-2/26-the-big-green-button-turning-plone-into-a-dynamic-site-factory.m4v&quot;&gt;The Big Green Button: Turning Plone into a dynamic site factory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-3/52-collective-good-best-practices-for-creating-releasing-and-maintaining-add-on-products-for-plone.m4v&quot;&gt;Collective Good: Best Practices for Creating, Releasing and
Maintaining Add-on Products for Plone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-3/42-why-through-the-web-development-isnt.m4v&quot;&gt;Why Through-The-Web Development Isn&amp;#8217;t&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-3/46-relational-database-applications-with-plone-and-sqlalchemy.m4v&quot;&gt;Relational database applications with Plone and SQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/media/video/conference/2008/PloneConference2008/day-3/41-reaching-deployment-nirvana-using-buildout.m4v&quot;&gt;Reaching Deployment Nirvana Using Buildout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remarkably, some of these newly added videos are &lt;em&gt;still&lt;/em&gt; relevant &lt;strong&gt;and&lt;/strong&gt; enjoyable to watch, as are many of the ones already available in the easily browsable &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/conferences/2008-washington-dc/agenda&quot;&gt;archive&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My sincerest apologies to the community and especially to those whose videos were amongst this group for the delay, you should not have had to wait 2 days let alone over 2 years!&lt;/p&gt;
&lt;p&gt;Thus, I now declare &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt; to be wrapped. Thanks to Sean Kelly for the &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/ticket/11762&quot;&gt;help transferring the video&lt;/a&gt; to plone.org.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Collective.transmogrifier Without Plone?</title>
    <id>http://blog.aclark.net/2011/04/15/collective-transmogrifier-without-plone/</id>
    <updated>2011-04-15T00:00:00Z</updated>
    <published>2011-04-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/04/15/collective-transmogrifier-without-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;collective-transmogrifier-without-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;Yes!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since I began drinking the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.transmogrifier&quot;&gt;collective.transmogrifier&lt;/a&gt; Kool Aid a few months back, I&amp;#8217;ve gotten quite excited about the possibility of being able to use it outside Plone, i.e. like &amp;#8220;regular&amp;#8221; Python people would do.&lt;/p&gt;
&lt;p&gt;It just so happens I have a current project that requires me to import content to Plone 2.5; it took me a while to realize I could just setup a Plone 4 instance, run transmogrifier in it, and import content from it (i.e. from the file system) to Plone 2.5 over XML-RPC. But something about having to include Plone 4 in that scenario rubbed me the wrong way: Plone 4 is not needed, it&amp;#8217;s just executing the pipeline.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(I also don&amp;#8217;t like the idea of having to create a Python package and a GenericSetup profile in order to facilitate a migration.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;goals&quot;&gt;
&lt;h2&gt;Goals&lt;/h2&gt;
&lt;p&gt;So in addition to working on getting &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/mr.migrator&quot;&gt;mr.migrator&lt;/a&gt; to be able to configure and execute pipelines (currently only GenericSetup profiles and Python code are supported), I thought I&amp;#8217;d experiment with removing the CMFCore dependency.&lt;/p&gt;
&lt;p&gt;The initial, &lt;em&gt;experimental&lt;/em&gt; results can be seen in action here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/mr_migrator_demo&quot;&gt;https://github.com/aclark4life/mr_migrator_demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/mr_migrator_demo/raw/master/README.txt&quot;&gt;README&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Introduction
============

This demo is:* Proof of concept for mr.migrator: A tool that provides the ability to
register and execute collective.transmogrifier pipelines without creating a
Python package. It&amp;#39;s Miller Time™.* Also proof of concept for collective.transmogrifier with the CMFCore
dependency removed (and a zope.component dependency added in its place).
It&amp;#39;s Scotch time™.

Explanation
-----------
In order to work, it currently relies on:* https://svn.plone.org/svn/collective/collective.transmogrifier/branches/aclark-mr-migrator-compat
* https://svn.plone.org/svn/collective/transmogrify.filesystem/branches/aclark-mr-migrator-compat
* git@github.com:aclark4life/transmogrify.ploneremote.git These are, respectively:* A branch of c.transmogrifier with a setuptools entry point plugin system
added, and the CMFCore dependencies removed (gracefully, I hope).* A branch of t.filesystem with the collective.transmogrifier entry point
specified (and some CMFCore dependencies removed).* A fork of t.ploneremote with the collective.transmogrifier entry point
specified (and some CMFCore dependencies remove).
…
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It&amp;#8217;s a work in progress, but it actually imports content. You may try it locally, as explained in the rest of the &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/mr_migrator_demo/raw/master/README.txt&quot;&gt;README&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Installation
------------
You can try out this demo::

    $ git clone git@github.com:aclark4life/mr_migrator_demo.git
    $ cd mr_migrator_demo
    $ python bootstrap.py
    $ bin/buildout

Elsewhere, setup a Plone site listenining on localhost:8080 with a Plone site
object called &amp;quot;Plone&amp;quot; and then:

    $ bin/mr.migrator

You should end up with content in Plone that looks like this:
…
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I hope this helps move the state of the art forward a bit; it would be great to share this technology with the rest of the Python world. And in case you are curious about the changes, you can read the revision log here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/collective/log/collective.transmogrifier/branches/aclark-mr-migrator-compat&quot;&gt;http://dev.plone.org/collective/log/collective.transmogrifier/branches/aclark-mr-migrator-compat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start with the following revision, and click through the next 8 commits:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/collective/changeset/237628/collective.transmogrifier/branches/aclark-mr-migrator-compat&quot;&gt;http://dev.plone.org/collective/changeset/237628/collective.transmogrifier/branches/aclark-mr-migrator-compat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comments welcome.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;credits&quot;&gt;
&lt;h2&gt;Credits&lt;/h2&gt;
&lt;p&gt;Thanks Martijn Pieters for creating collective.transmogrifier; thanks Martin Aspeli and Dylan Jay for their blueprints; and thanks Dylan Jay for bringing transmogrifier to the masses via mr.migrator.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Introducing Charm; Death to Charm</title>
    <id>http://blog.aclark.net/2011/03/29/introducing-charm-death-to-charm/</id>
    <updated>2011-03-29T00:00:00Z</updated>
    <published>2011-03-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/03/29/introducing-charm-death-to-charm/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;introducing-charm-death-to-charm&quot;&gt;

&lt;p&gt;&lt;strong&gt;A long time ago (several years ago, or more) one of my first Plone jobs was importing content from the file system.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A long time ago (several years ago, or more) one of my first Plone jobs was importing content from the file system (put there by another CMS) to a client&amp;#8217;s Plone 2.5 website (see: &lt;a class=&quot;reference external&quot; href=&quot;http://blip.tv/file/761624/&quot;&gt;http://blip.tv/file/761624/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Some time later (last year or so) the client decided they wanted to scoop up even more content from the file system (we only grabbed the last few years prior to launch!)&lt;/p&gt;
&lt;p&gt;Unfortunately, the old migration code was truly a horror. So I&amp;#8217;ve been having a hard time making myself run it again (I was just learning Python at the time.)&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;about-charm&quot;&gt;
&lt;h2&gt;About charm&lt;/h2&gt;
&lt;p&gt;This is where &lt;em&gt;charm&lt;/em&gt; comes in; formerly &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/mr.importer&quot;&gt;mr.importer&lt;/a&gt;, formerly &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/parse2plone&quot;&gt;parse2plone&lt;/a&gt;. Get it? The third time is a… I had the &amp;#8220;big idea&amp;#8221; to rewrite, then open source the code I wrote for the client.  Unfortunately, the rewrite became a horror too.&lt;/p&gt;
&lt;p&gt;First, it was not well received amongst the more reusable approaches based on &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.transmogrifier&quot;&gt;collective.transmogrifier&lt;/a&gt;, and rightfully so. While it was unpleasant to be told I was heading in the wrong direction, it was &lt;strong&gt;*even more*&lt;/strong&gt; unpleasant to find out &amp;#8220;they&amp;#8221; were right.&lt;/p&gt;
&lt;p&gt;Second, as &amp;#8220;they&amp;#8221; predicted, I got to the point where I couldn&amp;#8217;t read or maintain it any more (and I &lt;strong&gt;*just*&lt;/strong&gt; wrote it).&lt;/p&gt;
&lt;p&gt;So, I decided to revert to a version which had much fewer configuration options, because making it configurable became a huge distraction. What&amp;#8217;s left is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The code is &amp;#8220;readable&amp;#8221;, for some value of readable (PEP8/pyflakes compliant) and it&amp;#8217;s in a single module: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/charm/blob/master/charm.py&quot;&gt;charm.py&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The concept is &amp;#8220;simple&amp;#8221;, for some value of simple; it&amp;#8217;s a recipe that creates a script for you, that you run via:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone run bin/charm /path/to/files
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The results are &amp;#8220;impressive&amp;#8221; for some value of impressive; it imports content from the file system into Plone:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2011-03-21 11:51:20,302 - charm - INFO - Imported 19 folders,
1 images, 20 pages, and 2 files.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It won&amp;#8217;t crash (!), for some value of &amp;#8220;keeps going&amp;#8221;; it tries to do try/except on operations more likely to fail&amp;nbsp; e.g. create_parts (via &amp;#8211;ignore-errors). This aims to ensure you at least get some content in your site post-execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone run bin/charm html --ignore-errors
...
2011-03-22 07:24:32,821 - charm - INFO - creating folder &amp;#39;id&amp;#39; inside
                          parent folder &amp;#39;/Plone&amp;#39;
2011-03-22 07:24:32,822 - charm - INFO - Keep going! Ignoring error
                          &amp;#39;The id &amp;quot;id&amp;quot; is invalid - it is already in use.&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It has some tests, 34% coverage at the time of this writing:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;619    34%   charm   (/Users/aclark/Developer/charm/charm.py)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Has &amp;#8220;cool&amp;#8221; features, for some value of cool. Most notably, the &amp;#8220;collapse&amp;#8221; feature (AKA &amp;#8220;slugify&amp;#8221;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone run bin/charm html --collapse
...
2011-03-22 07:13:28,673 - charm - INFO - path &amp;#39;html/2011/01/01/test-collapse&amp;#39;,
                          has subdirs &amp;#39;&amp;#39;, and files &amp;#39;index.html&amp;#39;
...
2011-03-22 07:13:28,693 - charm - INFO - object &amp;#39;test-collapse-20110101.html&amp;#39;
                          does not exist inside &amp;#39;/Plone&amp;#39;
2011-03-22 07:13:28,693 - charm - INFO - creating page &amp;#39;test-collapse-20110101.html&amp;#39;
                          inside parent folder &amp;#39;/Plone&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;And the &amp;#8220;publish&amp;#8221; feature to optionally publish content after creation:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/plone run bin/charm html --collapse --publish
...
2011-03-22 07:13:29,008 - charm - INFO - publishing page &amp;#39;test-collapse-20110101.html&amp;#39;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And a few more things, but as you can see we are quickly approaching the point where more functionality does not necessarily mean better software. It&amp;#8217;s hard to build something complex AND make it easy to use, which is why I am moving on.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;charming-demo&quot;&gt;
&lt;h2&gt;Charming demo&lt;/h2&gt;
&lt;p&gt;In writing this blog entry and releasing charm 1.0b4 I wanted to make sure to demonstrate how it works, so here is a screencast. This is how I envision content importing should work in Plone (or at least this is how I envision a &amp;#8220;simple&amp;#8221; way it could work.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;after-charm&quot;&gt;
&lt;h2&gt;After charm&lt;/h2&gt;
&lt;p&gt;After I began writing &lt;em&gt;charm&lt;/em&gt;, I began to collaborate with Dylan Jay on funnelweb and beyond (e.g. &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/mr.migrator&quot;&gt;mr.migrator&lt;/a&gt;). And I am now more determined than ever to write reusable code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Cioppino Sprint Report</title>
    <id>http://blog.aclark.net/2011/02/16/cioppino-sprint-report/</id>
    <updated>2011-02-16T00:00:00Z</updated>
    <published>2011-02-16T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/02/16/cioppino-sprint-report/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;cioppino-sprint-report&quot;&gt;

&lt;p&gt;&lt;strong&gt;The Cioppino Sprint was recently held in Bodega Bay, CA.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a class=&quot;reference external&quot; href=&quot;http://coactivate.org/projects/snow-sprint-west-2011/project-home&quot;&gt;Cioppino Sprint&lt;/a&gt; was recently held in Bodega Bay, CA. It was a &lt;a class=&quot;reference external&quot; href=&quot;http://twitpic.com/3y21yk&quot;&gt;beautiful location&lt;/a&gt; for a gathering of awesome Plone folks; and much was accomplished. Unfortunately on the second morning of the sprint, we were all deeply saddened to hear about the passing of Dorneles Treméa.&lt;/p&gt;
&lt;img alt=&quot;Bodega Bay&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/bodega.jpg&quot; /&gt;
&lt;div class=&quot;section&quot; id=&quot;the-passing-of-dorneles-tremea&quot;&gt;
&lt;h2&gt;The passing of Dorneles Treméa&lt;/h2&gt;
&lt;p&gt;I didn&amp;#8217;t know Dorneles very well, but he was certainly someone I idolized during my initial Plone fascination days (e.g. &amp;#8220;Who are all these cool people with such cool names!&amp;#8221;). And after digging through my old emails, I now remember we had several pleasant exchanges over the years.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;memories&quot;&gt;
&lt;h3&gt;Memories&lt;/h3&gt;
&lt;p&gt;In particular, I have this memory of Dorneles and Alan Runyan sitting together at the Plone Conference 2008 sprint, smiling and working on their laptops. Before his death, it was just a random image that would occasionally pop into my head. Now, it&amp;#8217;s something I&amp;#8217;ll remember him by.&lt;/p&gt;
&lt;p&gt;We also corresponded briefly about his &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.ExternalStorage&quot;&gt;ExternalStorage&lt;/a&gt; add-on for Plone, around the time we upgraded plone.org from Plone 2.5 to Plone 3.0 (circa 2008), as well as traded emails about his invitation to attend Plone Conference 2008 in DC (for his visa application).&lt;/p&gt;
&lt;p&gt;The funniest thing he ever said to me was when I was making the rounds asking for donations for Plone Conference 2008. He replied,&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&amp;#8220;Are you aware that you&amp;#8217;re talking with a 3rd world citizen?&amp;#8221;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;I&amp;#8217;m not sure if I offended him, or what. But it struck me funny at the time (and he went on to joke about how donations usually flow in the other direction, ending with his tongue stuck out i.e. &amp;#8221;:-p&amp;#8221;). It also reminded me of one the things I love most about Plone: the opportunity (I may never get otherwise) to correspond/collaborate with cool, passionate people all over the world.&lt;/p&gt;
&lt;p&gt;To me, Dorneles was one of the living embodiments of the &lt;em&gt;coolness&lt;/em&gt; and &lt;em&gt;worldliness&lt;/em&gt; of the Plone project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;wishes&quot;&gt;
&lt;h3&gt;Wishes&lt;/h3&gt;
&lt;p&gt;My condolences and best wishes to his family, I hope you know how much he meant to so many folks in the Plone and Python communities. And just how many lives he touched with his work. And goodbye Dorneles; though I knew you very little, I will miss you very much. May your legacy live on, long in to the future.&lt;/p&gt;
&lt;p&gt;Incidentally, if you would like to give money to help support Dorneles&amp;#8217; family in the aftermath of this tragedy, you can do so here: &lt;a class=&quot;reference external&quot; href=&quot;http://associacao.python.org.br/doacoes-familia-dorneles&quot;&gt;http://associacao.python.org.br/doacoes-familia-dorneles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, the sprint (or at least my part of it) was awesome! Amidst the very sad and shocking news of Dorneles&amp;#8217; passing, we all kept busy with our work.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sprint-report&quot;&gt;
&lt;h2&gt;Sprint report&lt;/h2&gt;
&lt;p&gt;It&amp;#8217;s a bit overwhelming to try and capture everything that happened (and I was only there for two days!); hopefully this report will be useful. The focus of this sprint was evaluator approachability (i.e. making Plone look good to prospective new users).&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;day-1-and-day-2&quot;&gt;
&lt;h3&gt;Day 1 and Day 2&lt;/h3&gt;
&lt;p&gt;Steve McMahon (SteveM) was our host. Alex Limi (limi) provided general direction regarding strategies to improve plone.net, documentation, and end user support. But most importantly, he pointed out that the first stop for any prospective new user is the website, so it&amp;#8217;s important that it look good.&lt;/p&gt;
&lt;p&gt;David Glick (davisagli) and Elizabeth Leddy (eleddy) wasted no time in diving in to the 150 or so open tickets in the (now defunct) &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone.org&quot;&gt;plone.org issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I (aclark) quickly fell into the role of the &amp;#8220;deployment witch&amp;#8221; (a role I enjoy), and suggested people simply push the &lt;strong&gt;ACLARK&lt;/strong&gt; button (née Staples Easy Button) whenever they needed their code deployed to plone.org.&lt;/p&gt;
&lt;p&gt;We closed a good number of tickets this way.&lt;/p&gt;
&lt;p&gt;Additionally:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Ross Patterson (zenwryly) grabbed a hold of the &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/browser/plone.org/Products.PloneOrg/trunk&quot;&gt;PloneOrg add-on&lt;/a&gt; (the add-on that powers plone.org) and added tests (among other things).&lt;/li&gt;
&lt;li&gt;Tyler Randles (hennaheto) and Trish Ang (feeeeesh) fixed a number of CSS annoyances, which were &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/changeset/47345/&quot;&gt;committed by SteveM&lt;/a&gt; (while Tyler &amp;amp; Trish pondered core commit access). My favorite of which is the now-blissfully-aligned username and password fields of the login_form:&lt;/li&gt;
&lt;li&gt;zenwryly fixed the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/team&quot;&gt;team section&lt;/a&gt; of plone.org.&lt;/li&gt;
&lt;li&gt;davisagli completed the last remaining task to fix &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/collective/browser/Products.PloneSoftwareCenter/trunk&quot;&gt;PloneSoftwareCenter&lt;/a&gt; permissions on plone.org (the sharing tab finally works now!)&lt;/li&gt;
&lt;li&gt;limi &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/changeset/47428/&quot;&gt;fixed a CSS sprite issue&lt;/a&gt; on plone.org (involving https, I think).&lt;/li&gt;
&lt;li&gt;SteveM tackled &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/changeset/47507/&quot;&gt;SSL certificate issues&lt;/a&gt; on plone.org.&lt;/li&gt;
&lt;li&gt;aclark took a stab at plone.net by converting the old style add-on Product that powers it to a &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/collective/browser/Products.PloneServicesCenter/trunk&quot;&gt;new style Egg package&lt;/a&gt;. zenwryly then &lt;a class=&quot;reference external&quot; href=&quot;http://rpatterson.net/blog/cioppino-sprint&quot;&gt;took that ball and ran with it&lt;/a&gt;, added tests and otherwise prepared for the future (i.e. Plone 4 compat).&lt;/li&gt;
&lt;li&gt;Jon Stahl (remotely) added a &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/follow&quot;&gt;&amp;#8220;follow&amp;#8221; section&lt;/a&gt; to plone.org.&lt;/li&gt;
&lt;li&gt;hennaheto and feeeeesh produced this amazing (but &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/foundation/logo/logoguidelines.pdf/view&quot;&gt;possibly non-compliant&lt;/a&gt;) sprint logo&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;day-3-day-4-and-day-5&quot;&gt;
&lt;h3&gt;Day 3, Day 4 and Day 5&lt;/h3&gt;
&lt;p&gt;Unfortunately, I had to leave on Friday morning but these are some of the things that happened after I left. Most importantly, Tom Kapanka (spanktar) arrived Thursday night and Bill Deegan arrived on Friday. And then:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;zenwryly updated PloneServicesCenter to Plone 4.&lt;/li&gt;
&lt;li&gt;limi and zenwryly replaced images of &amp;#8220;showcased sites&amp;#8221; in PloneServicesCenter with a web screenshot service to eliminate the need for storing images. (This move is still in progress, and various folks are working on issues with the web screenshot service. Please be patient!)&lt;/li&gt;
&lt;li&gt;zenwryly and limi moved content from plone.net to plone.org.&lt;/li&gt;
&lt;li&gt;aclark (remotely) pulled the DNS trigger on plone.net (re-configured A records for plone.net, to resolve to the same IP as plone.org)&lt;/li&gt;
&lt;li&gt;eleddy and spanktar created and released &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/cioppino.twothumbs/1&quot;&gt;cioppino.twothumbs&lt;/a&gt; to facilitate &amp;#8220;thumb style&amp;#8221; (up/down) ratings in PloneSoftwareCenter.&lt;/li&gt;
&lt;li&gt;davisagli made it so Plone can start without PIL (via fixes to PlonePAS and plone.app.blob). And these fixes even made it in to Plone 4.1a3! To be clear, Plone still requires PIL to render images but it will start if it&amp;#8217;s missing.&lt;/li&gt;
&lt;li&gt;davisagli and eleddy refactored the PloneOrg buildout&lt;/li&gt;
&lt;li&gt;Bill and limi moved the remaining old Plone installers from Sourceforge to &lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/archive/&quot;&gt;dist.plone.org&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;post-sprint-sprinting&quot;&gt;
&lt;h3&gt;Post-sprint sprinting&lt;/h3&gt;
&lt;p&gt;One of the great things about a sprint is that it really focuses
attendees on accomplishing their tasks, long after they have left the
event. To that end:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;aclark triaged the remaining tickets in the plone.org tracker, and did a final tally of closed ticket rankings: davisagli (55), aclark (32), eleddy (28), limi (7). davisagli wins!&lt;/li&gt;
&lt;li&gt;aclark got inspired to begin uploading the half dozen or so missing videos from various Plone Conference 2008 talks (which were finally sent to him by the video company circa last year). Look for these to &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;land on plone.org&lt;/a&gt; soon.&lt;/li&gt;
&lt;li&gt;eleddy continued to develop the “two thumbs” feature.&lt;/li&gt;
&lt;li&gt;eleddy and aclark deployed the &amp;#8220;two thumbs&amp;#8221; feature to plone.org.  (This feature may not work as expected yet, eleddy is resolving issues.) Check it out:&lt;/li&gt;
&lt;li&gt;limi continued to improve the documentation/ and support/ sections of plone.org. Here are some screenshots of how the new sections will look once they launch:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;#8217;s it! Just so you don&amp;#8217;t worry the sprinters worked too hard, you can rest assured everyone was in good hands with zenwryly and his travelling-bar.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you enjoyed reading this report and/or appreciate all the fun-but-hard work that goes in to attending a sprint, please consider&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/01/21/help-alex-clark-help-plone/&quot;&gt;donating to my travel fund&lt;/a&gt;. &lt;em&gt;Only three days left, and I&amp;#8217;m still a few dollars short!&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Hostout Rules</title>
    <id>http://blog.aclark.net/2011/01/26/hostout-rules/</id>
    <updated>2011-01-26T00:00:00Z</updated>
    <published>2011-01-26T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/01/26/hostout-rules/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hostout-rules&quot;&gt;

&lt;p&gt;&lt;strong&gt;As in &amp;#8220;dominates&amp;#8221;, not a &amp;#8220;list of rules&amp;#8221;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I spent a long time avoiding &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.hostout&quot;&gt;collective.hostout&lt;/a&gt; for reasons I will
call &amp;#8220;technical stylistic differences&amp;#8221; with the author Dylan Jay.&lt;/p&gt;
&lt;p&gt;But then I grew up (and in cases of Plone growth like this, I usually
end up crediting the probably-much-younger-than-me-in-years,
but-certainly-much-more-possessive-of-sage-like-wisdom-than-me-Martin-Aspeli;
and this time is certainly no exception. So thanks Martin!)&lt;/p&gt;
&lt;p&gt;As it turns out, Hostout (as I like to call it now, because we are on a
first name basis) is awesome! Let me break down the awesomeness for you.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout&quot;&gt;
&lt;h2&gt;Buildout&lt;/h2&gt;
&lt;p&gt;It starts with Buildout. I won&amp;#8217;t bore you with the details of why
Buildout is awesome, but I will mention one key feature:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;INI-style configuration, y&amp;#8217;all.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes you just want to specify something like:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and be done. I am not making this up folks. There is something about
INI-style configuration that transcends time and space, and reaches
across partisan-aisles to bring folks together in a &amp;#8220;let&amp;#8217;s just get this
done&amp;#8221; sort of way. Of course not everyone likes them, but if you are a
technical person and don&amp;#8217;t like them, I guarantee you at least
understand them and can see why they might be appropriate in some cases
over another technology.&lt;/p&gt;
&lt;p&gt;Anyway, back to the awesomeness.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;fabric&quot;&gt;
&lt;h2&gt;Fabric&lt;/h2&gt;
&lt;p&gt;Fabric is awesome! I won&amp;#8217;t bore you with the details of why Fabric is
awesome. But I will mention one key feature:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;SSH, people. SSH.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes you just want to type:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ fab -H foo.com bar
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and be done. Fabric lets you execute the Python code you wrote in a
function called &amp;#8220;bar&amp;#8221;, inside a (local) file called fabfile.py, on a
(remote) host called foo.com. All with the touch of a button, so to
speak. That is to say, you create a local fabfile.py file, and Fabric
runs the code remotely for you on any number of hosts you give it.
Brilliant.&lt;/p&gt;
&lt;p&gt;Now, what could be better than these two technologies? These two
technologies &lt;em&gt;together&lt;/em&gt;, that&amp;#8217;s what. (See where I am going with this?)
And what could be better than joining these two technologies? Joining
them with &lt;em&gt;absolutely no effort required on your part whatsoever&lt;/em&gt;,
that&amp;#8217;s what.&lt;/p&gt;
&lt;p&gt;I have a long history of touting software that makes my job (and life)
easier, and Hostout fits right in with that tradition. I&amp;#8217;m just sorry it
took me this long to try it out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;hostout&quot;&gt;
&lt;h2&gt;Hostout&lt;/h2&gt;
&lt;p&gt;As compelling as it is to write &amp;#8220;pure Python&amp;#8221; in fab files, and it is,
sometimes you just want to be done. And Hostout helps you get there. I
will explain in a minute, but first a slight detour.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;back-story&quot;&gt;
&lt;h3&gt;Back story&lt;/h3&gt;
&lt;p&gt;I recently blogged about the relaunch of this website &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/01/19/new-website-for-2011/&quot;&gt;here&lt;/a&gt;. Shortly
after the launch, I realized I needed a quick and easy way to deploy my
staging site to production. I pitched the idea of a utility called
&amp;#8220;mr.pusher&amp;#8221; to accomplish this task to Dylan, with the caveat that I was
interested in making it work with Hostout.&lt;/p&gt;
&lt;p&gt;As it turns out, between Hostout and a recipe I created years ago called
&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recipe.rsync&quot;&gt;collective.recipe.rsync&lt;/a&gt;, &amp;#8220;mr.pusher&amp;#8221; almost already existed. Now back
to the story.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;fabric-integration-made-easy&quot;&gt;
&lt;h3&gt;Fabric integration made easy&lt;/h3&gt;
&lt;p&gt;Since I knew I wanted to be able to execute a &amp;#8220;push&amp;#8221; command remotely, I
figured I would finally get acclimated with Hostout.&lt;/p&gt;
&lt;p&gt;After a small wrestling match in my head with the docs, I came up with
&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website/blob/master/buildout.cfg#L64&quot;&gt;this&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Hostout makes Fabric integration easy
[staging]
recipe = collective.hostout
host = aclark.net
path = /srv/staging[production]
recipe = collective.hostout
host = aclark.net
path = /srv/aclark_net_website
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;At this point (after running buildout) I was able to perform such great
feats of remote administration (on my already-deployed-sans-hostout
sites) as:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/hostout staging run git pull
$ bin/hostout staging run bin/buildout -c staging.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Armed with this ability, I added the following to my &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website/blob/master/staging.cfg&quot;&gt;staging.cfg:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Create scripts to deploy staging data to production.
# Be VERY careful with this. You could easily overwrite your
# live production data if you either forget to use the script
# option, or accidentally run the bin/rsync-filestorage-to-production
# script without stopping the production site first.
[filestorage-to-production]
recipe = collective.recipe.rsync
source = var/filestorage/Data.fs
target = ../aclark_net_website/var/filestorage/Data.fs
script = true[blobstorage-to-production]
recipe = collective.recipe.rsync
source = var/blobstorage/
target = ../aclark_net_website/var/blobstorage/
script = true
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The result was two scripts I could use to &amp;#8220;push&amp;#8221; staging to production,
but only after stopping the production site first:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/hostout production run bin/supervisorctl shutdown
$ bin/hostout staging run bin/rsync-filestorage-to-production
$ bin/hostout staging run bin/rsync-blobstorage-to-production
$ bin/hostout production run bin/supervisord
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And we&amp;#8217;re deployed! This technique is particularly elegant when used in
combination with a&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website/blob/master/apache.conf&quot;&gt;custom 503&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I really like this setup, and I really appreciate what Hostout gets me
&amp;#8220;for free&amp;#8221;; I didn&amp;#8217;t have to create a fabfile.py, I just configured my
staging and production host parameters in buildout.cfg and off I went.&lt;/p&gt;
&lt;p&gt;Of course, there is always room for improvement. The next most logical
step for me would be to add cloud integration. If I could provision a
new Rackspace cloud server via buildout, and then host-it-out, I think
the future will have arrived. And since that is exactly what
&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/hostout.cloud&quot;&gt;hostout.cloud&lt;/a&gt; appears to do, welcome to the future!&lt;/p&gt;
&lt;p&gt;Alex Clark (January 2011)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Did you enjoy reading this article? Please consider `helping me help
Plone in February 2011`_.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">You Should Buy Plone 3 for Education Right Now</title>
    <id>http://blog.aclark.net/2011/01/25/you-should-buy-plone-3-for-education-right-now/</id>
    <updated>2011-01-25T00:00:00Z</updated>
    <published>2011-01-25T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/01/25/you-should-buy-plone-3-for-education-right-now/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;you-should-buy-plone-3-for-education-right-now&quot;&gt;

&lt;p&gt;&lt;strong&gt;With what must be the fifth or sixth round of apologies to both Erik Rose and PACKT publishing for the delay (very sorry guys), here is my review! Better late than never.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I get bored with the same ol&amp;#8217; blog entry titles:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&amp;#8220;A review of so and so&amp;#8217;s book, by such and such…&amp;#8221;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Not that there is anything wrong with these titles, they serve their purpose. It&amp;#8217;s not you… it&amp;#8217;s me. Can we still be friends?&lt;/p&gt;
&lt;p&gt;Anyway, I will cut to the chase with this one: if you care about Plone and you have not done so already, you should buy &lt;strong&gt;`Plone 3 for Education`_&lt;/strong&gt;right now.&lt;/p&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;p&gt;Several reasons:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Erik Rose cares about Plone. He cares so much, he spent months of his life pouring his professional experiences into a book so you can benefit!&lt;/li&gt;
&lt;li&gt;PACKT publishing will donate a percentage of the proceeds to the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/foundation&quot;&gt;Plone Foundation.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You will learn a lot about Plone, from the perspective of someone who has supported its deployment and maintenance within a large educational institution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That is not to say every Plone book is for you. You have to decide for yourself if you want this beautiful creation (see above) of Erik&amp;#8217;s to shine on your mantle piece for years to come. Even if you are a giant Plone supporter, and even if you make your living off of Plone, you may still not want to purchase this book. That&amp;#8217;s just the way that it goes.  But, I will to try to convince you anyway! Here is my chapter-by-chapter review:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;preface&quot;&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;The preface sets the tone of the book, and I like the tone Erik sets.  Erik has used Plone for many years at &lt;a class=&quot;reference external&quot; href=&quot;http://weblion.psu.edu/&quot;&gt;Penn State&lt;/a&gt; and you will find his experiences valuable. He&amp;#8217;s made mistakes so you don&amp;#8217;t have to!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-1&quot;&gt;
&lt;h2&gt;Chapter 1&lt;/h2&gt;
&lt;p&gt;Chapter 1 covers creating courses (of course!) Erik makes the argument that Plone can hold it&amp;#8217;s own against expensive course management software, and I believe him. Of particular interest are Erik&amp;#8217;s recommendations to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Put courses in large Plone folders&lt;/li&gt;
&lt;li&gt;Use news items, events and collections in the context of a course.&lt;/li&gt;
&lt;li&gt;Cut and paste the course framework once you are done creating it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-2&quot;&gt;
&lt;h2&gt;Chapter 2&lt;/h2&gt;
&lt;p&gt;Chapter 2 introduces calendaring in Plone, and Erik suggests using &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/p4a.plonecalendar&quot;&gt;Plone4artists calendar&lt;/a&gt; to make your course content easily browsable.  Of particular interest are Erik&amp;#8217;s recommendations to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Replace the stock Plone events folder (which is a collection contained within a folder) with (just) a collection.&lt;/li&gt;
&lt;li&gt;Make clever use of keywords to support lots of events.&lt;/li&gt;
&lt;li&gt;Reorder subfolders in a collection &amp;#8220;the hard way&amp;#8221;. (Also interesting that he opened this ticket: &lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/plone/ticket/9109&quot;&gt;https://dev.plone.org/plone/ticket/9109&lt;/a&gt;and that it has received no &amp;#8220;love&amp;#8221; to date. Perhaps the new collections UI: &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/ticket/10902&quot;&gt;http://dev.plone.org/plone/ticket/10902&lt;/a&gt; will save the day!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-3&quot;&gt;
&lt;h2&gt;Chapter 3&lt;/h2&gt;
&lt;p&gt;Chapter 3 showcases the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.FacultyStaffDirectory&quot;&gt;Faculty/Staff Directory&lt;/a&gt; (FSD) add-on for Plone which allows you to create an online personnel directory. Of particular interest is Erik&amp;#8217;s explanation of how to categorize and correlate people within FSD.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-4&quot;&gt;
&lt;h2&gt;Chapter 4&lt;/h2&gt;
&lt;p&gt;Chapter 4 covers customizing Faculty/Staff Directory. Of particular interest is Erik&amp;#8217;s coverage of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/archetypes.schemaextender&quot;&gt;AT Schema Extender&lt;/a&gt;(which is a great way to customize Plone these days).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-5&quot;&gt;
&lt;h2&gt;Chapter 5&lt;/h2&gt;
&lt;p&gt;Chapter 5 covers blogs and forums. Of particular interest is Erik&amp;#8217;s coverage of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.Scrawl&quot;&gt;Scrawl&lt;/a&gt;, and the need to exercise extreme caution when installing add-ons (always good advice).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-6&quot;&gt;
&lt;h2&gt;Chapter 6&lt;/h2&gt;
&lt;p&gt;Chapter 6 covers audio and video. Of particular interest is Erik&amp;#8217;s coverage of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.flowplayer&quot;&gt;collective.flowplayer&lt;/a&gt; which makes &lt;a class=&quot;reference external&quot; href=&quot;http://flowplayer.org/&quot;&gt;Flowplayer&lt;/a&gt; easy to use in Plone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-7&quot;&gt;
&lt;h2&gt;Chapter 7&lt;/h2&gt;
&lt;p&gt;Chapter 7 covers forms. Of particular interest is Erik&amp;#8217;s comparison of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.PloneFormGen&quot;&gt;PloneFormGen&lt;/a&gt; to Archetypes content objects, and his explanation of when to use one over the other.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-8&quot;&gt;
&lt;h2&gt;Chapter 8&lt;/h2&gt;
&lt;p&gt;Chapter 8 covers theming. Of particular interest is Erik&amp;#8217;s coverage of &amp;#8220;new style&amp;#8221; template customizations via &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/z3c.jbot&quot;&gt;z3c.jbot&lt;/a&gt; (which you &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website/blob/master/buildout.cfg#L24&quot;&gt;don&amp;#8217;t even need a package for!&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-9&quot;&gt;
&lt;h2&gt;Chapter 9&lt;/h2&gt;
&lt;p&gt;Chapter 9 covers deployment. Of particular interest is Erik&amp;#8217;s coverage of a typical production software stack that includes ZEO, Zope2, Apache and of course Plone. Also covered is CacheFu, which has been superseded by &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.app.caching&quot;&gt;plone.app.caching&lt;/a&gt; in Plone 4.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-10&quot;&gt;
&lt;h2&gt;Chapter 10&lt;/h2&gt;
&lt;p&gt;Chapter 10 covers maintenance. Of particular interest is Erik&amp;#8217;s coverage of &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recipe.backup&quot;&gt;collective.recipe.backup&lt;/a&gt; to automate the creation of repozo scripts. I would add to that, you can use &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/z3c.recipe.usercrontab&quot;&gt;z3c.recipe.usercrontab&lt;/a&gt;to automate the creation and removal of cron jobs to execute those scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;All in all, I enjoyed reading this book. And, I appreciate whenever a member of the community shares his/her experiences. So thank you, Erik!&lt;/p&gt;
&lt;p&gt;That&amp;#8217;s it! I hope you will consider purchasing a copy of &lt;a class=&quot;reference external&quot; href=&quot;https://www.packtpub.com/plone-3-for-education/book&quot;&gt;Plone 3 for Education&lt;/a&gt; right now.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And if you enjoyed reading this review, please consider `helping me help Plone in February 2011.`_&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Alex Clark (January 2011)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Help Alex Clark help Plone</title>
    <id>http://blog.aclark.net/2011/01/21/help-alex-clark-help-plone/</id>
    <updated>2011-01-21T00:00:00Z</updated>
    <published>2011-01-21T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/01/21/help-alex-clark-help-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;help-alex-clark-help-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;It&amp;#8217;s been a few years since I last attended a Plone sprint.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And that is by no means for lack of desire. I fantasize about spending a year attending every Plone (and Python) related event on the planet, but I&amp;#8217;ve got a ways to go before I can make that dream a reality.&lt;/p&gt;
&lt;p&gt;In the meantime, I&amp;#8217;m excited to announce that the stars have aligned in February 2011 and I am planning to attend the &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/snow-sprint-west-2011/project-home&quot;&gt;Cioppino sprint&lt;/a&gt; AKA West Coast &amp;#8220;Snow&amp;#8221; Sprint (plane tickets purchased!)&lt;/p&gt;
&lt;p&gt;But, I really need everyone&amp;#8217;s help to make this trip a success. While I would love to be able to afford it, our financial stars have not aligned for February 2011 and I will be seeking donations in order to offset the cost of travel and lodging.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ll be spending (at least) two full days working on Plone-related tasks, for whatever you can guestimate that may be worth (in a consulting context.) And in addition to helping out however I can with the&lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/snow-sprint-west-2011/project-home&quot;&gt;scheduled tasks&lt;/a&gt;, I have a long list of admin tasks I would like to try and tackle:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://admin-docs.plone.org/todo.html&quot;&gt;http://admin-docs.plone.org/todo.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;why-you-should-donate&quot;&gt;
&lt;h2&gt;Why you should donate&lt;/h2&gt;
&lt;p&gt;Time I donate to the Plone project is a labor of love, but there are &amp;#8220;real world&amp;#8221; implications. If you have enjoyed, or otherwise benefited from any of the following, I would appreciate your generous contribution right now; very, very much!&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Plone.org website maintenance&lt;/strong&gt;: I spend a lot of time wrangling troops and performing feats of great maintenance on plone.org: &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/plone/plone.org/Products.PloneOrg/trunk/&quot;&gt;http://svn.plone.org/svn/plone/plone.org/Products.PloneOrg/trunk/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plone.org systems maintenance&lt;/strong&gt;: I consider myself a provider of great services for a great community. I&amp;#8217;ve made a very significant effort to try and improve the services that volunteers are able to provide for such a great community. In documentation, and in deed I plan to&amp;nbsp; keep doing this for at least all of 2011: &lt;a class=&quot;reference external&quot; href=&quot;http://admin-docs.plone.org&quot;&gt;http://admin-docs.plone.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plone software technical support&lt;/strong&gt;: I spend a great deal of time trying to de-mystify Plone technology for the masses. Early adoption is part of this process. I like to see Plone moving forward and I like to see others embracing that move: &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/01/19/new-website-for-2011/&quot;&gt;http://blog.aclark.net/2011/01/19/new-website-for-2011/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;And much, much more!&lt;/strong&gt; I try to do as much for Plone as I can because it does a lot for me. I&amp;#8217;ve &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;organized a conference&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://www.packtpub.com/plone-33-site-administration/book&quot;&gt;written a book&lt;/a&gt; and I expect to be active in the community for at least the rest of 2011, and most likely4life.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-much-should-you-donate&quot;&gt;
&lt;h2&gt;How much should you donate&lt;/h2&gt;
&lt;p&gt;I am trying to raise $1,000 USD to cover the following:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Plane tickets&lt;/strong&gt;: approximately $400 USD.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Housing&lt;/strong&gt;: approximately $400 USD.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Food and miscellaneous travel expenses&lt;/strong&gt;: approximately $200 USD.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would appreciate any amount you can afford to give, to help-me-help-Plone be as great as it can be!&lt;/p&gt;
&lt;p&gt;Please use the Chip-in below, or if you prefer (for all you anti-flash-ites), you can donate directly via PayPal with my email address: &lt;strong&gt;aclark&amp;#64;aclark.net&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Thank you all, very much, in advance.&lt;/p&gt;
&lt;p&gt;Alex Clark (January 2011)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">New Website For 2011!</title>
    <id>http://blog.aclark.net/2011/01/19/new-website-for-2011/</id>
    <updated>2011-01-19T00:00:00Z</updated>
    <published>2011-01-19T00:00:00Z</published>
    <link href="http://blog.aclark.net/2011/01/19/new-website-for-2011/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-website-for-2011&quot;&gt;

&lt;p&gt;&lt;strong&gt;Edit: In addition to &amp;#8220;cool overlays&amp;#8221;, I added a couple Plone-core todo items (that I may like to PLIP/implement)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;purpose-driven&quot;&gt;
&lt;h2&gt;Purpose-driven&lt;/h2&gt;
&lt;p&gt;Since &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website/commit/514a46a652d9ffb393fd7f83a296306761c995b7&quot;&gt;December 23, 2010&lt;/a&gt;, a new website has been in development at ACLARK.NET, LLC. It took approximately one month to complete; and we are proud to present it to the world today! We are particularly proud that this website can serve a dual-purpose: to make us look good, and to serve as an example of how easy and fun it is to install and use Plone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;look-ma-no-package&quot;&gt;
&lt;h2&gt;Look ma, no package!&lt;/h2&gt;
&lt;p&gt;One of the requirements I had in developing a new website was that I would ditch my old Products.aclark_net package in favor of… nothing.  (Sort of.)&lt;/p&gt;
&lt;p&gt;What I mean is, the entire website was developed and deployed within a single, small buildout: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/aclark_net_website&quot;&gt;https://github.com/aclark4life/aclark_net_website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The buildout is meant to be instructional (!) so if you have questions, please ask them in the comments.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
# Extends import buildout config files from elsewhere
extends =
#    http://dist.aclark.net/build/plone/4.1.x/buildout.cfg
    http://dist.aclark.net/build/plone/4.1.x/zeo.cfg
    http://good-py.appspot.com/release/collective.xdv/1.0# Parts define what this buildout does
parts += trac xdv staging production blog[plone]
# Eggs are Python packages
eggs +=
# &amp;quot;New style&amp;quot; theming in Plone
    collective.xdv
# &amp;quot;New style&amp;quot; template overrides
    z3c.jbot# Plone is a modern web application that uses the Zope Toolkit
# internally to provide complex functionality in a manageable way.
#
# The Zope Toolkit features the Zope component architecure; and
# components are configured via the Zope Configuration Markup Language (ZCML).
#
# Rather than create a Python package to do simple customizations, we add
# our ZCML here and the plone.recipe.zope2instance will add it to our
# Zope 2 instance configuration file(s) for us whenever we run bin/buildout.
zcml-additional =
# Add static resource dir
    &amp;lt;configure
        xmlns:browser=&amp;quot;http://namespaces.zope.org/browser&amp;quot;
    &amp;gt;
    &amp;lt;browser:resourceDirectory
        name=&amp;quot;static&amp;quot;
        directory=&amp;quot;${buildout:directory}/static&amp;quot;
    /&amp;gt;
# Add custom templates dir
    &amp;lt;include
        package=&amp;quot;z3c.jbot&amp;quot;
        file=&amp;quot;meta.zcml&amp;quot;
    /&amp;gt;
    &amp;lt;browser:jbot
        directory=&amp;quot;${buildout:directory}/templates&amp;quot;
    /&amp;gt;
    &amp;lt;/configure&amp;gt;[blog]
# Compile the blog theme
recipe = plone.recipe.command
command =
    bin/xdvcompiler -r theme/rules/blog.xml -t theme/templates/blog.html -o theme/blog.xsl
update-command = ${:command}[trac]
# Compile the trac theme
recipe = plone.recipe.command
command =
    bin/xdvcompiler -r theme/rules/trac.xml -t theme/templates/trac.html -o theme/trac.xsl
update-command = ${:command}# This creates bin/xdvcompiler
[xdv]
recipe = zc.recipe.egg# Hostout makes Fabric integration easy
[staging]
recipe = collective.hostout
host = aclark.net
path = /srv/staging[production]
recipe = collective.hostout
host = aclark.net
path = /srv/aclark_net_website[versions]
plone.registry = 1.0b4
plone.app.registry = 1.0b5
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;diazo&quot;&gt;
&lt;h2&gt;Diazo&lt;/h2&gt;
&lt;p&gt;For the first time ever, I decided to try deploying Diazo (formerly XDV) within Plone itself. That meant installing &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.xdv&quot;&gt;collective.xdv&lt;/a&gt; in Plone and pointing it to a rules.xml file. This only works for Plone, though.  Wordpress and Trac are still themed outside Plone, by compiling their themes with xdvcompiler and pointing Apache to the resulting .xsl files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;content&quot;&gt;
&lt;h2&gt;Content&lt;/h2&gt;
&lt;p&gt;I am obsessive about content. I am also obsessive about simplicity. And in today&amp;#8217;s world of &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;need-it-now&lt;/a&gt;, I have become conditioned to &amp;#8220;do&amp;#8221; now and ask questions later (which is not always recommended, by the way). That meant that for this website, rather than migrate content (which in some cases was contained in custom fields added by Archetypes schema extender) I opted to setup a &amp;#8220;clean&amp;#8221; Plone and copy/paste/edit content.&lt;/p&gt;
&lt;p&gt;On a small site like ours, this was a no-brainer for me. But it definitely exposes a weakness of Plone. Now that theming has improved, we really need a better &amp;#8220;content story&amp;#8221;. To me, that is starting to mean focusing on satisfying a &amp;#8220;simple&amp;#8221; use case like exporting and importing content in Plone. There are folks &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.transmogrifier&quot;&gt;working on this&lt;/a&gt; of course, it just needs to advance to the point where we can offer it in the Plone core IMHO.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;todo&quot;&gt;
&lt;h2&gt;Todo&lt;/h2&gt;
&lt;p&gt;Of course there is always more to do. The first thing that jumps out that is missing from this deployment is &amp;#8220;cool (Javascript) overlays&amp;#8221; or &amp;#8220;pop-ups,&amp;#8221; depending on who you ask. I didn&amp;#8217;t have time to add them prior to launch, but I will most likely add them later &lt;a class=&quot;reference external&quot; href=&quot;http://www.stevemcmahon.com/steves-blog/tools&quot;&gt;because I can&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A couple more Plone-core related features I would love to see implemented (technically, Diazo is not in the core yet):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I want to add GenericSetup (GS) profiles outside Python packages (i.e. in the buildout via ZCML). Currently GenericSetup expects to be passed a context which is (I think) the old-style Zope 2 product object in the ZODB. But I can&amp;#8217;t think of a reason why GS couldn&amp;#8217;t be made to work sans that requirement (I&amp;#8217;m just speculating though, I haven&amp;#8217;t looked at the code yet).&lt;/li&gt;
&lt;li&gt;I wish Diazo (collective.xdv) could be configured via GenericSetup.  I&amp;#8217;d like to configure the path to the rules.xml file in something like profiles/default/diazo.xml such that when a Plone site is created and the Diazo import step is run, the path to the rules file is set automatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This is certainly one of the most fun times I&amp;#8217;ve head developing a Plone website (which is nice when you are in the Plone website business). I attribute that directly to all of the awesome folks involved in the project. I can&amp;#8217;t list everyone here, but I will &amp;#8220;shout out&amp;#8221; to some of the folks who I think were instrumental in getting us here: Eric Steele &amp;amp; the entire Plone 4 framework team, for their work on Plone 4. Hanno Schlichting for making Plone fast again. Martin Aspeli and Laurence Rowe for Diazo. And David Glick, for being &amp;#8220;always on&amp;#8221; (and my own personal devil&amp;#8217;s advocate).&lt;/p&gt;
&lt;p&gt;And really, everyone involved in the Plone project on a day to day basis. Plone development and consulting can be frustrating at times, but more often than not it is a magical experience, due in no small part due to the seemingly never-ending supply of cool and dedicated folks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;a-look-back&quot;&gt;
&lt;h3&gt;A look back&lt;/h3&gt;
&lt;p&gt;Also, I&amp;#8217;ve been doing this long enough now that it&amp;#8217;s now very entertaining (to me at least) to look back at the various incarnations of the ACLARK.NET, LLC website over the years (these are guestimates):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Circa 2006: Plone 2.5 with a Cereblue skin I purchased for $50&lt;/li&gt;
&lt;li&gt;Circa 2007: Plone 3.0 with a custom &amp;#8220;old style&amp;#8221; theme that I designed
(and I&amp;#8217;m not a designer).&lt;/li&gt;
&lt;li&gt;Circa 2008: Plone 3.3 with XDV (now Diazo) plus &amp;#8220;open source&amp;#8221; theme.&lt;/li&gt;
&lt;li&gt;Circa 2011: Plone 4 with collective.xdv, z3c.jbot, and &amp;#8220;open source&amp;#8221;
buildout and theme, and nothing else.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;to-the-future&quot;&gt;
&lt;h2&gt;To the future&lt;/h2&gt;
&lt;p&gt;Onwards Plone team! Here is to 2011.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">A Report On Plonetheme.*</title>
    <id>http://blog.aclark.net/2010/11/04/a-report-on-plonetheme/</id>
    <updated>2010-11-04T00:00:00Z</updated>
    <published>2010-11-04T00:00:00Z</published>
    <link href="http://blog.aclark.net/2010/11/04/a-report-on-plonetheme/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;a-report-on-plonetheme&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plone Theme Buildout&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By now, most of us are familiar with XDV and how awesome it is for theming Plone (or any website). You should also be aware that XDV has been renamed to &lt;strong&gt;Diazo&lt;/strong&gt;, and collective.xdv is now called &lt;strong&gt;plone.app.theming&lt;/strong&gt;. But let us not forget the humble &amp;#8220;old style&amp;#8221; theme just yet! Sometimes they come in very handy, and may even be preferable in some cases depending on what you are trying to accomplish. I just gave &lt;strong&gt;plonetheme&lt;/strong&gt;.* a quick spin and thought I&amp;#8217;d share the process and results with anyone that might find it useful.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1&quot;&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;p&gt;Get a list of all the &lt;strong&gt;plonetheme&lt;/strong&gt; packages on PyPI:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip search plonetheme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2&quot;&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;p&gt;Create a buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv plone-theme-test
$ bin/easy_install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3&quot;&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;Edit your buildout.cfg to include the following:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = http://dist.aclark.net/buildout/plone/4.0.x/buildout.cfg
parts =
 plone[plone]
eggs +=
 ${theme:eggs}zcml +=
 ${theme:eggs}[theme]
eggs =# Deps that the themes should have added
 collective.contentleadimage
 collective.flowplayer
 z3c.jbot#    Products.categorynavigator
#
# XXX Products.categorynavigator is a dep of plonetheme.mvob but it
# has a NameError
# ZopeXMLConfigurationError: File &amp;quot;/Users/aclark/Developer/packages…
# NameError: name &amp;#39;ImportException&amp;#39; is not defined# themes
 plonetheme.notredame
 plonetheme.fui
 plonetheme.sunburst
 plonetheme.colorcontext
 plonetheme.twinapex
#    plonetheme.mvob
 plonetheme.peerstheme
 plonetheme.nautica05
 plonetheme.stylized
 plonetheme.labs
 plonetheme.sait2009
 plonetheme.cultureCab
 plonetheme.xtheme
 plonetheme.mimbo
 plonetheme.python
 plonetheme.terrafirma
 plonetheme.solemnity
 plonetheme.level2
 plonetheme.tidyblog
 plonetheme.andreas01
 plonetheme.blueblog
 plonetheme.delicious2
#    plonetheme.hamnavoe
 plonetheme.greencommunity
 plonetheme.subordinate
 plonetheme.bluegray
 plonetheme.p2
 plonetheme.aclark_twitter
 plonetheme.relic
 plonetheme.classic
#    plonetheme.simplicity
 plonetheme.netsightintranet
 plonetheme.keepitsimple
 plonetheme.andreas02
 plonetheme.essay
 plonetheme.ReOrg
#    plonetheme.Bangalore
 plonetheme.nonzero
 plonetheme.cleantheme
 plonetheme.minimalist
 plonetheme.inbusiness
#    plonetheme.corporatemale
 plonetheme.portaltwodotoh
 plonetheme.rcom
 plonetheme.equipoteih
 plonetheme.pyar
 plonetheme.basic# XXX plonetheme.GreenEarthTheme3_0 has zope.configuration.config…
# error
#    plonetheme.GreenEarthTheme3_0
#zope.configuration.config.ConfigurationExecutionError: &amp;lt;type …
#  in:
#  File &amp;quot;/Users/aclark/Developer/packages/plonetheme.GreenEarthTheme…
#     &amp;lt;cmf:registerDirectory
#         name=&amp;quot;GreenEarthTheme3_0_templates&amp;quot;/&amp;gt; plonetheme.criticas
 plonetheme.gemstone
#    plonetheme.bronzecube
 plonetheme.lithium
 plonetheme.overlappedtabs
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-4&quot;&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;Run buildout; start Plone; play around!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The whole effort (including writing the blog post) took only an hour or two, for whatever that is worth (not including the actual theme review, unfortunately!). I find the results interesting and I thought you might too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;process&quot;&gt;
&lt;h2&gt;Process&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;dependencies&quot;&gt;
&lt;h3&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;You&amp;#8217;ll notice in the &lt;strong&gt;[theme]&lt;/strong&gt; section, comments about various packages that were not included with all of the various themes.&lt;/p&gt;
&lt;p&gt;As far as I can tell, it is in the best interest of &amp;#8220;old style&amp;#8221; theme developers to specify these packages in their setup.py files with the install_requires parameter!&lt;/p&gt;
&lt;p&gt;OK, it&amp;#8217;s actually in my best interest because then I have to do less work, but you get the idea.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;broken-or-missing-packages&quot;&gt;
&lt;h3&gt;Broken or missing packages&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;plonetheme&lt;/strong&gt;.* packages that are just commented out (without an XXX note) did not make it past the bin/buildout step (for whatever reason, usually a broken package).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;themes&quot;&gt;
&lt;h2&gt;Themes&lt;/h2&gt;
&lt;p&gt;My favorite theme (right after plonetheme.aclark_twitter, that is) is… nevermind! I wanted to report on that but I still have to go through all the themes! (By installing each one at a time, testing, then uninstalling before moving to the next one.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;packaging&quot;&gt;
&lt;h2&gt;Packaging&lt;/h2&gt;
&lt;p&gt;Just my opinion, but if you are adding functionality to Plone, it&amp;#8217;s probably not (just) a theme. So I would separate that functionality from your &lt;strong&gt;plonetheme&lt;/strong&gt;.* code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;problems&quot;&gt;
&lt;h2&gt;Problems&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;jbot-modifies-default-plone-theme&quot;&gt;
&lt;h3&gt;jbot modifies default Plone theme?&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve noticed this before in both Plone Classic and now Sunburst when jbot is installed. No idea what the actual cause is:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;disclaimer&quot;&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;div class=&quot;section&quot; id=&quot;designed-for-plone-4&quot;&gt;
&lt;h3&gt;Designed for Plone 4?&lt;/h3&gt;
&lt;p&gt;Before you say it (I know you are thinking it), I know not all of these themes are designed to work with Plone 4. I dont&amp;#8217; have a good answer about how to approach that problem (I just know that when looking for themes, I don&amp;#8217;t really care. I just &amp;#8220;want it to work&amp;#8221;.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bug-report-please&quot;&gt;
&lt;h3&gt;Bug report please?&lt;/h3&gt;
&lt;p&gt;I know, I know. I should open a ticket for the jbot thing.&lt;/p&gt;
&lt;p&gt;And now off to play!&lt;/p&gt;
&lt;p&gt;P.S. I will report on the install process in the comments.&lt;/p&gt;
&lt;p&gt;So far, &lt;em&gt;Andreas&lt;/em&gt; installed, worked, and looked nice while &lt;em&gt;Bluegray Theme 1.0.0b2&lt;/em&gt; required a ZMI undo ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Blood, Sweat, Tears and a New Plone Book</title>
    <id>http://blog.aclark.net/2010/03/30/blood-sweat-tears-and-a-new-plone-book/</id>
    <updated>2010-03-30T00:00:00Z</updated>
    <published>2010-03-30T00:00:00Z</published>
    <link href="http://blog.aclark.net/2010/03/30/blood-sweat-tears-and-a-new-plone-book/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;blood-sweat-tears-and-a-new-plone-book&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plone 3.3 Site Administration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, no blood yet. But certainly sweat and tears. If &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/conferences/seattle-2006&quot;&gt;Plone Conference 2006&lt;/a&gt; was my inspiration for &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt;, then &lt;a class=&quot;reference external&quot; href=&quot;https://www.packtpub.com/Professional-Plone-web-applications-CMS/book&quot;&gt;Professional Plone Development&lt;/a&gt; was my inspiration for this book: &lt;a class=&quot;reference external&quot; href=&quot;https://www.packtpub.com/plone-3-3-site-administration/book&quot;&gt;Plone 3.3 Site Administration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the past 14 months or so, I have been writing a book aimed at end users of Plone; folks that have little knowledge of how to do much more than add content. It is intended to make them feel more comfortable performing various site administrator tasks. Topics like theming, maintenance, and optimization are covered.&lt;/p&gt;
&lt;p&gt;But wait, there&amp;#8217;s more!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;id1&quot;&gt;
&lt;h2&gt;#1&lt;/h2&gt;
&lt;p&gt;This book aims to &amp;#8220;lower the Plone bar for users of Python&amp;#8221;. What do I mean by that? Basically this: I love Python almost as much as I love Plone. It lets me translate my thoughts directly into code. I fantasize that with little more than a Python interpreter, one can forge a working Plone site within minutes. But it is not just a fantasy, it is (more or less) the status quo. (Maybe even &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/MacGyver&quot;&gt;MacGyver&lt;/a&gt; used Python?)&lt;/p&gt;
&lt;p&gt;So, this book begins at the beginning: by making sure folks are comfortable installing and using Python on there operating system of choice (or using the pre-installed Python). If you read &lt;em&gt;Professional Plone Development&lt;/em&gt;, you may recall Martin Aspeli saying at the beginning of Chapter 3:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;We will assume that Python 2.4 gets invoked when you run python on the command line.&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;This book does not make that assumption and tries to cover everything you may need to know after installing your operating system up to that point.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Chapter 1&lt;/strong&gt;, we cover installing and running Python on three popular operating systems: Mac OS X 10.6 (my main squeeze), Windows 7, and Ubuntu 9.10 (Debian is my main production server squeeze). Other operating systems are welcome; your mileage may vary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;id2&quot;&gt;
&lt;h2&gt;#2&lt;/h2&gt;
&lt;p&gt;This book is largely a response to the whole &amp;#8220;Oh no! I have to use Buildout to install Plone and its add-ons!&amp;#8221; sentiment that has been prevalent since Buildout was first introduced to Plone several years ago. I don&amp;#8217;t know if Buildout was the &amp;#8220;right&amp;#8221; way to go, but I do know that I love using it and I would like to help others feel the same way.&lt;/p&gt;
&lt;p&gt;The bottom line is this: Plone made a conscious decision to &amp;#8220;become more Pythonic&amp;#8221; by using eggs. With that choice came more complexity from potential conflicts between eggs. Buildout is one solution to that problem. Unfortunately, it introduces other problems like cryptic error messages and a certain &lt;strong&gt;too-many-moving-parts&lt;/strong&gt;-ness.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;an-aside&quot;&gt;
&lt;h2&gt;An aside…&lt;/h2&gt;
&lt;p&gt;Let me correct myself: I am fairly certain Buildout was the right way to go at the time. What I am not sure about is where to go from here. It would be nice to get back to a place where folks could just drop packages in to a directory (I don&amp;#8217;t literally mean going back to old-style products, but perhaps we could provide that type of functionality again somehow). But I don&amp;#8217;t have an answer for that. In the meantime, let&amp;#8217;s make everyone more comfortable with using Buildout.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;about-the-rest-of-the-book&quot;&gt;
&lt;h2&gt;About the rest of the book…&lt;/h2&gt;
&lt;p&gt;The book teaches you to find your way around Buildout and Plone. Whether you choose to follow along and build your site from scratch using only Buildout (and a paper clip) or if you use one of the Buildout-based installers (like the Unified Installer), this book aims to make you more competent and comfortable performing a variety of Buildout-related tasks.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Chapters 2-7&lt;/strong&gt;, we present various buildout configuration files that correspond to specific tasks that are related to various subjects, e.g. theming, maintenance, and optimization. The reader is expected to &amp;#8220;know how to write a buildout.cfg file&amp;#8221; by the end. No one that reads the book is allowed in the #plone IRC channel afterward to ask about buildout (you can answer buildout questions though). Kidding… I kid…&lt;/p&gt;
&lt;p&gt;In the final &lt;strong&gt;Chapter 8&lt;/strong&gt;, we cover new technologies like XDV and repoze.zope2 which may become more mainstream once you decide to start using them (although the latter seems more like a toy to keep us busy until the real fix arrives: &lt;a class=&quot;reference external&quot; href=&quot;http://article.gmane.org/gmane.comp.web.zope.plone.devel/23887&quot;&gt;full WSGI support in Zope 2&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;when-will-it-arrive&quot;&gt;
&lt;h2&gt;When will it arrive?&lt;/h2&gt;
&lt;p&gt;PACKT originally announced the book will arrive in March and I have been working non-stop since mid-March to make sure it gets out the door as quickly as possible; I expect it to be available &lt;strong&gt;Real Soon Now™&lt;/strong&gt;. I apologize to those of you who have pre-ordered and are now waiting for it!&lt;/p&gt;
&lt;p&gt;So get ready! I plan to have over 200 pages of draft material submitted by the end of this month. I will continue to work with PACKT to address any concerns that arise during editing. They have promised to try to ship the book by May, so we will see how it goes. I encourage you to &lt;a class=&quot;reference external&quot; href=&quot;https://www.packtpub.com/plone-3-3-site-administration/book&quot;&gt;pre-order now&lt;/a&gt; as that will&amp;nbsp;go a long way to inspire them to work just that much harder to get it done and out to you, ASAP!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;can-i-write-a-book&quot;&gt;
&lt;h2&gt;Can I write a book?&lt;/h2&gt;
&lt;p&gt;Probably. For those curious about the process (as I very much was), here is a bit about how it went for me:&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;A few years ago, Martin Aspeli had the idea for Practical Plone 3 and put out a call to writers that I responded to; I ended up contributing 2 chapters. This taught me that it was indeed a lot of work, and I got exposed to the editing process.&lt;/li&gt;
&lt;li&gt;A couple years ago, PACKT approached me (and several others) about the idea for Plone Site Administration and I thought I had a good story to tell based on my experiences, so I wrote a detailed outline and they accepted it.&lt;/li&gt;
&lt;li&gt;Though I had written for Practical Plone 3, I struggled to find my voice. At the same time I had a tremendous amount of consulting work to do to make a living. I sneaked in time to write drafts and eventually found my voice. To be honest, the most productive work has been done in the last 3 months.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Perhaps the biggest lesson I learned was this: stop thinking and start writing. I tend to over analyze things and spent a lot of time thinking about &amp;#8220;how it would go&amp;#8221; rather than just writing it. Writing is the key.  Think less, write more (at which point your thoughts tends to flow more naturally anyway).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;should-i-write-a-book&quot;&gt;
&lt;h2&gt;Should I write a book?&lt;/h2&gt;
&lt;p&gt;Possibly. I am sensitive to the phenomenon of &amp;#8220;Plone book diarrhea&amp;#8221; and I do think that there can be such a thing as too many Plone books. But I don&amp;#8217;t think we are there yet. To me, the more books published about Plone (by PACKT or any publisher) the better. I like to see what each individual author brings to the story, even if the stories they are telling tend to overlap sometimes. So for me the answer to that question both before and after writing my book is &lt;strong&gt;yes&lt;/strong&gt;. I know I am a better writer having written it, and I certainly know more about Python, Zope, and Plone and many other technologies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;in-either-case-you-should-definitely-take-my-class&quot;&gt;
&lt;h2&gt;In either case, you should definitely take my class.&lt;/h2&gt;
&lt;p&gt;If you are interested in learning more about Python and tools like Distribute, Pip, Buildout, etc. and you want to feel more comfortable managing your Plone site, you will not want to miss the &lt;a class=&quot;reference external&quot; href=&quot;http://plone-site-admin.eventbrite.com&quot;&gt;one day class I am teaching at Plone Symposium East 2010&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;The book will hopefully be out by then, but the class will go on either way.&lt;/p&gt;
&lt;p&gt;Hope to see you there, and I hope you enjoy the book.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;p-s-looking-for-plone-experts-hire-aclark-net-llc&quot;&gt;
&lt;h2&gt;P.S. Looking for Plone experts? Hire ACLARK.NET, LLC.&lt;/h2&gt;
&lt;p&gt;Thank you, everyone, for the responses to &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/?p=170&quot;&gt;my previous blog entry&lt;/a&gt;. I have had some great conversations with some very interesting folks and I appreciate everyone&amp;#8217;s interest. However, I wanted to encourage everyone once more to &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net?subject=&amp;quot;Hire%20Alex%20Clark&amp;quot;&quot;&gt;get in touch&lt;span&gt;&amp;#46;&lt;/span&gt;&lt;/a&gt; And also, to feel free to reach whenever you come across this blog entry and are in need of Plone help. We are always looking for a challenge.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Using Buildout To Deploy a Plone 2.1 Site To The Cloud</title>
    <id>http://blog.aclark.net/2010/03/15/using-buildout-to-deploy-a-plone-2-1-site-to-the-cloud/</id>
    <updated>2010-03-15T00:00:00Z</updated>
    <published>2010-03-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2010/03/15/using-buildout-to-deploy-a-plone-2-1-site-to-the-cloud/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;using-buildout-to-deploy-a-plone-2-1-site-to-the-cloud&quot;&gt;

&lt;p&gt;&lt;strong&gt;Plone 2.1 Buildout&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Believe it or not, there are still Plone 2.1 sites in production. (And 1.0 sites too, for that matter. Just look for the tell-tale &amp;#8216;/help&amp;#8217; sign, e.g. &lt;a class=&quot;reference external&quot; href=&quot;http://www.zope.org/help&quot;&gt;http://www.zope.org/help&lt;/a&gt;, if you suspect Plone 1).&lt;/p&gt;
&lt;p&gt;I know, because I just &lt;a class=&quot;reference external&quot; href=&quot;http://harryroseman.com&quot;&gt;deployed one&lt;/a&gt; (a cool artist&amp;#8217;s site if you have a couple hours to kill…). But I didn&amp;#8217;t do it the &amp;#8220;old way&amp;#8221; with Zope 2 instances created by hand on clunky physical servers, I used &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zc.buildout&quot;&gt;Buildout&lt;/a&gt; and the &lt;a class=&quot;reference external&quot; href=&quot;http://rackspacecloud.com&quot;&gt;Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;aside-1&quot;&gt;
&lt;h2&gt;Aside #1&lt;/h2&gt;
&lt;p&gt;As an aside: it was really bothering me lately that you couldn&amp;#8217;t (easily) find older Plone releases at &lt;a class=&quot;reference external&quot; href=&quot;http://sourceforge.net/projects/plone/&quot;&gt;SourceForge&lt;/a&gt;. This is by design to avoid confusion, but still confusing. So when I needed the most recent 2.1.x tarball I decided to scratch my itch and fix the &amp;#8220;problem&amp;#8221;.  I started gathering the &lt;a class=&quot;reference external&quot; href=&quot;http://downloads.sourceforge.net/project/plone/OldFiles/Plone-2.1.4.tar.gz&quot;&gt;hard to find&lt;/a&gt; releases and putting them &lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/archive/&quot;&gt;here&lt;/a&gt;. OK… so I only gathered one release (2.1.4), but I swear I had good intentions. If you&amp;#8217;d like to see any additional releases &amp;#8220;moved&amp;#8221; to dist.plone.org, please let me know in the comments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;aside-2&quot;&gt;
&lt;h2&gt;Aside #2&lt;/h2&gt;
&lt;p&gt;Another aside: I should mention here the advent of a tool that promises to simplify deployment of Python-based web applications to the cloud (or supported service, which technically does not have to be &amp;#8220;cloud-based&amp;#8221;) via the use of APIs (in particular, the &lt;a class=&quot;reference external&quot; href=&quot;http://rackspacecloud.com&quot;&gt;Rackspace Cloud&lt;/a&gt; API, which is the only one supported so far): &lt;a class=&quot;reference external&quot; href=&quot;http://cloudsilverlining.org&quot;&gt;Silver Lining&lt;/a&gt;! The idea of using this tool got me so excited, I spent some time experimenting with setting up a new host with it (and purchasing their service). But when I realized it was not quite ready for production (i.e. &amp;#8220;&lt;a class=&quot;reference external&quot; href=&quot;http://cloudsilverlining.org/#who-should-use-silver-lining&quot;&gt;if you want to use Silver Lining, Silver Lining is not for you&lt;/a&gt;&amp;#8221;), I ended up using the Rackspace Cloud &lt;strong&gt;web interface&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I was so impressed with it.&lt;/p&gt;
&lt;p&gt;I literally moved all of my (granted, relatively small number of client sites) to their service within a matter of 1-2 months. Now, I know what you are thinking, and I do intend to explore other services (in fact, I have tried &lt;a class=&quot;reference external&quot; href=&quot;http://www.slicehost.com/&quot;&gt;Slicehost&lt;/a&gt; and it was OK), but this service made my life so much easier I wanted to mention some of its key features:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&amp;#8220;On the fly&amp;#8221; requisitioning. You can add/remove hosts anytime and you only pay for the time they are up.&lt;/li&gt;
&lt;li&gt;&amp;#8220;On the fly&amp;#8221; resizing of hosts. In my testing and real world experience, the resizing (e.g. move from a host with 256MB RAM and 10GB disk to 500MB RAM and 20GB disk) was painless (literally only cost a few minutes of downtime).&lt;/li&gt;
&lt;li&gt;The potential for all of this to be done remotely via a command line tool like Silver Lining.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;aside-3&quot;&gt;
&lt;h2&gt;Aside #3&lt;/h2&gt;
&lt;p&gt;A third and final aside: the status quo of WSGI support for Plone. Since &lt;a class=&quot;reference external&quot; href=&quot;http://cloudsilverlining.org/#the-application&quot;&gt;Zope 2 is not supported&lt;/a&gt; by Silver Lining, the key to deploying Plone sites with it is currently to use &lt;a class=&quot;reference external&quot; href=&quot;http://repoze.org/quickstart.html#repoze.zope2&quot;&gt;repoze.zope2&lt;/a&gt;. &lt;a class=&quot;reference external&quot; href=&quot;http://jazkarta.com&quot;&gt;Nate Aune&lt;/a&gt; has recently made some progress with this, and more work is scheduled for&lt;a class=&quot;reference external&quot; href=&quot;http://weblion.psu.edu/events/plone-symposium-east-2010&quot;&gt;Plone Symposium East&lt;/a&gt;. My latest swipe at WSGI-Plone is here: &lt;a class=&quot;reference external&quot; href=&quot;http://svn.aclark.net/svn/public/buildout/plone/branches/3.x-wsgi/&quot;&gt;http://svn.aclark.net/svn/public/buildout/plone/branches/3.x-wsgi/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-actual-point&quot;&gt;
&lt;h2&gt;The actual point&lt;/h2&gt;
&lt;p&gt;And finally, to the point of this blog entry! I have created a generic Plone 2.1 buildout for anyone interested. You can find it here:&lt;a class=&quot;reference external&quot; href=&quot;http://svn.aclark.net/svn/public/buildout/plone/branches/2.1.x/&quot;&gt;http://svn.aclark.net/svn/public/buildout/plone/branches/2.1.x/&lt;/a&gt;.  Using it is simple, as described in the &lt;a class=&quot;reference external&quot; href=&quot;http://svn.aclark.net/svn/public/buildout/plone/branches/2.1.x/README.txt&quot;&gt;README.txt&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn export http://svn.aclark.net/svn/public/buildout/plone/branches/2.1.x/ plone
$ cd plone
$ python2.4 bootstrap.py
$ bin/buildout
$ bin/instance fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Since Plone 2.1 community support has expired for this release, and since Plone 2.1 shipped with Python 2.3 (if I recall correctly), this is definitely &amp;#8220;unsupported use of Plone&amp;#8221;. But when you need it, you need it. I have yet to experience any issues related to the Python version, for whatever that is worth (possibly due to the fact that Plone 2.1 originally shipped with Python 2.3 and Zope 2.7, then Zope 2.8 came along which worked with Python 2.4. Just a guess).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">No, Really, You Can Just Use Buildout To Install Plone</title>
    <id>http://blog.aclark.net/2010/01/07/no-really-you-can-just-use-buildout-to-install-plone/</id>
    <updated>2010-01-07T00:00:00Z</updated>
    <published>2010-01-07T00:00:00Z</published>
    <link href="http://blog.aclark.net/2010/01/07/no-really-you-can-just-use-buildout-to-install-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;no-really-you-can-just-use-buildout-to-install-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a follow up to my &amp;#8216;Getting Excited about Plone as Eggs&amp;#8217; post.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a follow up to my &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2008/12/15/getting-excited-about-plone-as-eggs/&quot;&gt;Getting Excited about Plone as Eggs&lt;/a&gt; post.&lt;/p&gt;
&lt;p&gt;Generally speaking, the recommended and supported way to install Plone is via the installers, e.g. the &lt;a class=&quot;reference external&quot; href=&quot;http://launchpad.net/plone/3.3/3.3.3/+download/Plone-3.3.3-UnifiedInstaller.tgz&quot;&gt;Unified Installer&lt;/a&gt;. Obviously, if you want things to Just Work™ you should be using the latest stable release, which is why I linked to the 3.3.3 unified installer (although there is no Windows installer for 3.3.3 yet, which is why it&amp;#8217;s not released on plone.org).&lt;/p&gt;
&lt;p&gt;That said, since both Plone and Zope 2 have been packaged as eggs&amp;nbsp; (Plone became an egg in version 3.2 and Zope 2 became an egg as of Zope 2.12 which is the version of Zope 2 that Plone 4 will use) it has become &amp;#8220;mostly trivial&amp;#8221; to write a buildout.cfg to install Plone with. That means that you don&amp;#8217;t even need paster to do it. You can just fire up an editor and type:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
parts = instance

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
eggs =
    Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Amazing!&lt;/p&gt;
&lt;p&gt;Of course there is the nasty bit about PIL, which I get around now-a-days by adding a very specific find-link, e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
parts = instance
find-links = http://dist.plone.org/thirdparty/PILwoTk-1.1.6.4.tar.gz

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
eggs =
    PILwoTk
    Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;What you should have at this point is a working Plone, but not necessarily a repeatable buildout. The reason being we have not pinned any egg versions yet, so we are effectively asking for whatever the latest version of Plone is on PyPI. Fun for playing, not fun for production. Fortunately the nice Plone people have created a bunch of version pins for us, so we just need to use them:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = http://dist.plone.org/release/4.0a3/versions.cfg
versions = versions
parts = instance
find-links = http://dist.plone.org/thirdparty/PILwoTk-1.1.6.4.tar.gz

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
eggs =
    PILwoTk
    Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you are completely new to buildout and you are thinking to yourself right now &amp;#8220;what in the world is this guy talking about?&amp;#8221; then you will likely want to install buildout first so you can join in the fun. Fortunately, the nice Python people have made that easy with a package called &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/distribute&quot;&gt;Distribute&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Following their instructions, you can do this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -O http://python-distribute.org/distribute_setup.py
$ python distribute_setup.py
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ easy_install zc.buildout
$ mkdir plone
$ cd plone
$ buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After which you will have a buildout.cfg file, and you can follow along with the above steps. Happy?&lt;/p&gt;
&lt;p&gt;The best part about all of this is that (on a fast internet connection) it should only be a matter of minutes before you are able to do this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/instance fg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and be staring at a thing of beauty.&lt;/p&gt;
&lt;p&gt;Of course, if you are running in the foreground (recommended for debugging) you should see something like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aclark@Alex-Clarks-MacBook-Pro:~/Developer/public-plone/ &amp;gt; bin/instance fg
/Users/aclark/Developer/public-plone/parts/instance/bin/runzope -X debug-mode=on
2010-01-07 12:07:56 INFO ZServer HTTP server started at Thu Jan  7 12:07:56 2010
 Hostname: 0.0.0.0
 Port: 8080
2010-01-07 12:08:14 INFO Zope Ready to handle requests
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you&amp;#8217;d like to get a little less noisy and skip debug mode but still run in the foreground, you can use April 2008&amp;#8217;s famous addition to plone.recipe.zope2instance:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aclark@Alex-Clarks-MacBook-Pro:~/Developer/public-plone/ &amp;gt; bin/instance console
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Sweet, blissful, silent running Plone.&lt;/p&gt;
&lt;p&gt;Happy Plone 4&amp;#8217;ing all!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Toronto Plone Add-ons Sprint #1 Report</title>
    <id>http://blog.aclark.net/2010/01/01/toronto-plone-add-ons-sprint-1-report/</id>
    <updated>2010-01-01T00:00:00Z</updated>
    <published>2010-01-01T00:00:00Z</published>
    <link href="http://blog.aclark.net/2010/01/01/toronto-plone-add-ons-sprint-1-report/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;toronto-plone-add-ons-sprint-1-report&quot;&gt;

&lt;p&gt;&lt;strong&gt;Via Toronto Plone Users Group&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Last month, members of the &lt;a class=&quot;reference external&quot; href=&quot;http://groups.google.com/group/topug&quot;&gt;Toronto Plone user&amp;#8217;s group&lt;/a&gt; helped with Plone.org maintenance. Here is the sprint &amp;#8220;report out&amp;#8221; from Jordan Baker:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;toronto-plone-addons-sprint-report-1&quot;&gt;
&lt;h2&gt;Toronto Plone Addons Sprint Report #1:&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Attending: Robert Jackiewicz, Jordan Baker, John Southern, aclark&lt;/li&gt;
&lt;li&gt;aclark helped out by answering some questions and provided a dump of PSC data from &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/&quot;&gt;plone.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rob was working on getting his buildout working with nginx and documenting the process&lt;/li&gt;
&lt;li&gt;John worked on gettting a task listing setup on coactivate: &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/ploneorg-upgrade/tasks/tasklist/show/993&quot;&gt;http://www.coactivate.org/projects/ploneorg-upgrade/tasks/tasklist/show/993&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jordan commited changes to allow for filtering by version, autosubmit on selection change and searching using the PSC view instead of the Plone search view. &amp;nbsp;aclark is working on cutting a release...  hopefully we can get a preview soon..&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;outstanding-questions&quot;&gt;
&lt;h2&gt;Outstanding questions:&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;need some help with c.xdv or nginx so we can preview changes in the theme&lt;/li&gt;
&lt;li&gt;Where should we put our issues in the future. &amp;nbsp;There was talk of eating dog food using a Poi instance on &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/&quot;&gt;plone.org&lt;/a&gt; &amp;#8211; can someone help me set that up (add hexsprite and gogojohn as admins)&lt;/li&gt;
&lt;li&gt;Please help us by prioritizing the tasks in the task list on coactivate&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;next-sprint&quot;&gt;
&lt;h2&gt;Next Sprint:&lt;/h2&gt;
&lt;p&gt;Shooting for January 22. &amp;nbsp;Hopefully that will work for most people.  Please help us spread the word to interested parties... more details to come.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Review of Veda Williams' Plone 3 Theming</title>
    <id>http://blog.aclark.net/2009/09/22/review-of-veda-williams-plone-3-theming/</id>
    <updated>2009-09-22T00:00:00Z</updated>
    <published>2009-09-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2009/09/22/review-of-veda-williams-plone-3-theming/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;review-of-veda-williams-plone-3-theming&quot;&gt;

&lt;p&gt;&lt;strong&gt;Review all the chapters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First things first, I can&amp;#8217;t overstate enough how much I personally appreciate Veda&amp;#8217;s efforts to bring the (currently-and-unfortunately, but-not-for-long) complex world of Plone theming to the masses. It&amp;#8217;s an acquired taste, but once you get the hang of it you can use your powerful skills to create some very impressive sites – and make the world a better place like Veda and the crew at &lt;a class=&quot;reference external&quot; href=&quot;http://groundwire.org&quot;&gt;Groundwire&lt;/a&gt; are doing (formerly ONE/Northwest).&lt;/p&gt;
&lt;p&gt;Furthermore, If you are interested in Plone and how Plone theming works, this book is almost certainly for you. It gives you an over abundance of present day theming knowledge, and also covers aspects of the Zope 3 component architecture, where Plone has been, and where it is going to be in the not-so-distant-future.&lt;/p&gt;
&lt;p&gt;Since &lt;a class=&quot;reference external&quot; href=&quot;http://packtpub.com&quot;&gt;PACKT&lt;/a&gt; are well known for giving back to the communities that produce the software that is the subject of their books, purchasing a copy of this book will directly benefit Plone, so I encourage you to do so.&lt;/p&gt;
&lt;p&gt;With all that out of the way, I&amp;#8217;d like to focus on a chapter by chapter review (&lt;a class=&quot;reference external&quot; href=&quot;http://vincentfretin.ecreall.com/articles/review-plone-3-theming&quot;&gt;like&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://seeknuance.com/2009/08/25/a-review-of-plone-3-theming/&quot;&gt;everyone&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://www.littled.net/new/2009/09/27/review-of-plone-3-theming-by-veda-williams/&quot;&gt;else&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://reinout.vanrees.org/weblog/2009/10/25/plone-3-theming.html&quot;&gt;does&lt;/a&gt;) of Plone 3 Theming. Like I said, I really liked this book so please don&amp;#8217;t take any of my (hopefully constructive) criticism negatively. I hope my comments will help the readers of this book, as well as Veda, if she dares to attempt a 2nd edition one day!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;STANDARD DISCLAIMERS APPLY&lt;/strong&gt;: I&amp;#8217;m a &amp;#8220;paid&amp;#8221; reviewer (in that I received a free copy of the book) and also, I know Veda personally.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-1&quot;&gt;
&lt;h2&gt;Chapter 1&lt;/h2&gt;
&lt;p&gt;This chapter gives an overview of Plone, which as a total-Plone-fanboy, I very much appreciated. I particularly enjoyed the &amp;#8220;community lore&amp;#8221;.  &amp;#8220;what is Plone&amp;#8221;, and &amp;#8220;books about Plone&amp;#8221; sections. The author also includes a &amp;#8220;Plone vs. Drupal&amp;#8221; comparison and an &amp;#8220;evolution&amp;#8221; section that covers Plone theming-framework changes version by version, which I didn&amp;#8217;t care for as much [1].&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-2&quot;&gt;
&lt;h2&gt;Chapter 2&lt;/h2&gt;
&lt;p&gt;This chapter lists many tools for graphic design, web browsing, web development (with browser add-ons), and text editing. All useful information. I particularly enjoyed the recommendation for the browser add-on &lt;a class=&quot;reference external&quot; href=&quot;http://developer.yahoo.com/yslow/&quot;&gt;YSlow&lt;/a&gt; which I&amp;#8217;d heard of, but don&amp;#8217;t use regularly.  Recommendations for the traditional UNIX® text editors vi and emacs were missing, but folks that use these editor already know which one they prefer (*wink* – vi), and those that don&amp;#8217;t aren&amp;#8217;t likely to start using them now.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-3&quot;&gt;
&lt;h2&gt;Chapter 3&lt;/h2&gt;
&lt;p&gt;Here we get into the now-venerable &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zc.buildout/1.4.1&quot;&gt;zc.buildout&lt;/a&gt; and how it is used by Plone. I think many folks will appreciate the terminology section, featuring definitions of Zope, Python, and various Python package terminology. I would have liked to have seen the &lt;a class=&quot;reference external&quot; href=&quot;is-anyone-using-plone.orgs-new-pypi-functionality&quot;&gt;PyPI features of plone.org mentioned&lt;/a&gt;, but I&amp;#8217;ll settle for a shameless plug of it here.  Similarly, no mention of git or mercurial in a section about version control (Subversion only), but I suppose (again) those familiar with these technologies already know which one they prefer.&lt;/p&gt;
&lt;p&gt;Lastly, I liked the variety of approaches described in the &amp;#8220;download Plone&amp;#8221; section, from using platform installers to using the unified installer to satisfying all the Plone dependencies by hand. All good information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-4&quot;&gt;
&lt;h2&gt;Chapter 4&lt;/h2&gt;
&lt;p&gt;Using &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/ZopeSkel/2.13&quot;&gt;ZopeSkel&lt;/a&gt; to create a theme package, then adding that package to your buildout as a &amp;#8220;develop egg&amp;#8221; are the main topics covered here. (A side note: I&amp;#8217;m very much looking forward to the upcoming release of ZopeSkel 2.14!  &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/zopeskel-bbq-sprint/blog/2009/10/13/zopeskel-bbq-sprint-days-two-three-and-four/&quot;&gt;http://www.coactivate.org/projects/zopeskel-bbq-sprint/blog/2009/10/13/zopeskel-bbq-sprint-days-two-three-and-four/&lt;/a&gt; )&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-5&quot;&gt;
&lt;h2&gt;Chapter 5&lt;/h2&gt;
&lt;p&gt;I like this chapter because it covers a variety of the TTW (through the web) changes that we are consistently reminded we are not supposed to make, but we all know that everyone makes them. The truth is, there is absolutely nothing wrong with TTW changes if you take them for what they are worth. It&amp;#8217;s fine to turn a knob or two TTW, just be aware that at some point you may be turning that knob again TTW, if you don&amp;#8217;t turn a similar knob on the file system ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-6-7&quot;&gt;
&lt;h2&gt;Chapter 6-7&lt;/h2&gt;
&lt;p&gt;Here we get into various Zope 3 concepts: ZCML, browser layers, resources, viewlets and more! If there is such a thing, this would be the &amp;#8220;unfortunate&amp;#8221; part of the modern Plone theming story. Plone themers, for better or worse, must be familiar these concepts in order to be successful. One pet peave I have, that I will mention here because it seems appropriate, is the bundling of GenericSetup in a discussion about Zope 3 concepts. While GenericSetup may use Zope 3 technology under the hood (I assume it does, like most modern Zope 2 code) as a concept it has absolutely nothing to do with Zope 3 (in other words it is not part of the &amp;#8220;component architecture&amp;#8221;) It just happened to be introduced to Plone around the same time various other Zope 3 technology was introduced (via Five), hence people tend to include it in the &amp;#8220;things they hate about Zope 3 in Plone&amp;#8221; category. Perhaps GenericSetup should have been added either before or after the Zope 3 stuff to make it more palatable, but that train has sailed and now we must deal with the consequences.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-8&quot;&gt;
&lt;h2&gt;Chapter 8&lt;/h2&gt;
&lt;p&gt;This chapter about TAL (template attribute language) is great stuff. TAL is one of those beautiful technologies that pays for itself once you learn it (unlike various web form frameworks, for example ;-). If like me you can&amp;#8217;t get enough of TAL from Veda&amp;#8217;s book, check out the section on it in the Zope 2 book: &lt;a class=&quot;reference external&quot; href=&quot;http://docs.zope.org/zope2/zope2book/ZPT.html&quot;&gt;http://docs.zope.org/zope2/zope2book/ZPT.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-9-11&quot;&gt;
&lt;h2&gt;Chapter 9-11&lt;/h2&gt;
&lt;p&gt;Here we get to watch Veda design, build, and deploy a theme. This is the focal point of the book, and is worth the price of admission alone. I almost wish the entire book was about this theme, with the other relevant bits sprinkled in as needed. But in any event, these three chapters are what most readers will be most interested in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-12&quot;&gt;
&lt;h2&gt;Chapter 12&lt;/h2&gt;
&lt;p&gt;This is a great little chapter about various add-ons that themers may find interesting. My favorite add-on mentioned in this chapter is Products.FSDump. Very, very useful tool for getting various bits out of your ZODB and on to your file system (e.g. the contents of the portal_skins/custom folder). I&amp;#8217;m really hoping that a 1.0 release will see the light of day one of these days. I notice Veda didn&amp;#8217;t mention it, but there is now an egg-based version of this popular add-on: &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Products.FSDump/FSDump-0.9.4&quot;&gt;http://pypi.python.org/pypi/Products.FSDump/FSDump-0.9.4&lt;/a&gt; Just add Products.FSDump to your instance section&amp;#8217;s eggs= parameter and off you go.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-13&quot;&gt;
&lt;h2&gt;Chapter 13&lt;/h2&gt;
&lt;p&gt;Here, a gratuitous chapter on multimedia wherein various useful multi-media add-ons are mentioned. I say gratuitous because I think there is a misperception that you need these add-ons to accomplish what you want. Plone should do a much better job convincing people that while it is a complex application, a Plone site is also just a website. So if you know how to do it elsewhere (e.g. on a &amp;#8220;regular&amp;#8221; website) it should be easy to do it in Plone (we are not quite there yet). Anyway, some great add-ons are mentioned here of course, but one noticeable absence: &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/collective-fancyzoomview&quot;&gt;http://plone.org/products/collective-fancyzoomview&lt;/a&gt; (which is used by PloneSoftwareCenter on plone.org).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-14&quot;&gt;
&lt;h2&gt;Chapter 14&lt;/h2&gt;
&lt;p&gt;An &amp;#8216;Amen!&amp;#8217; for this chapter that covers deploying and contributing themes, especially on the contributing part. As I mentioned earlier, I would have liked to have seen the &lt;a class=&quot;reference external&quot; href=&quot;is-anyone-using-plone.orgs-new-pypi-functionality&quot;&gt;PyPI features of plone.org mentioned&lt;/a&gt; in this book, and in this chapter in particular. While it is arguably still hard to create Plone themes, it is encouragingly not hard to share them! Also, an incredibly useful tool for releasing themes (and any package) to both plone.org/products and pypi.python.org at the same time (i.e in a single command) is &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/jarn.mkrelease/2.0.2&quot;&gt;http://pypi.python.org/pypi/jarn.mkrelease/2.0.2.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-15&quot;&gt;
&lt;h2&gt;Chapter 15&lt;/h2&gt;
&lt;p&gt;This chapter (by Alexander Limi) introduces people to &amp;#8220;new style&amp;#8221; theming with xdv. While I enjoy this subject tremendously, I think it&amp;#8217;s going to take a while before it is fully digested by integrators.  Hopefully, Alex&amp;#8217;s chapter will help. I&amp;#8217;m also told that Laurence Rowe has been making some improvements to collective.xdv recently, and I see there is a new version here: &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.xdv&quot;&gt;http://pypi.python.org/pypi/collective.xdv&lt;/a&gt; (I think this version handles 404s).&lt;/p&gt;
&lt;p&gt;Bottom line: this is great stuff but potentially confusing in that you have an add-on, collective.xdv, that applies an XSLT transform &amp;#8220;on the fly&amp;#8221; (in memory) to your Plone site, but the recommended deployment strategy is to use NGINX or Apache with Laurence&amp;#8217;s patches applied. I&amp;#8217;ve spent some time doing this (I expect to re-launch this site with xdv soon, and of course plone.org uses it) and it is non-trivial to say the least. What we have now is a situation where folks are starting to use collective.xdv and thinking that *it* is the new way to theme, when in fact it is only part of the story.&lt;/p&gt;
&lt;p&gt;One last pet peeve I will mention is that both &amp;#8220;theming&amp;#8221; and &amp;#8220;skinning&amp;#8221; were used to describe the subject of the book.&amp;nbsp; I would have preferred just &amp;#8220;theming&amp;#8221; (since that is what we are calling it now ;-).&lt;/p&gt;
&lt;p&gt;In conclusion, great job Veda! Thank you very much for your efforts. I look forward to reviewing a second edition. To every one else, I invite you to purchase your copy of this book and get your Plone 3 theming ON: &lt;a class=&quot;reference external&quot; href=&quot;http://www.packtpub.com/plone-3-theming-create-flexible-powerful-professional-templates/mid/220709943ki3?utm_source=aclark.net&amp;amp;utm_medium=affiliate&amp;amp;utm_content=blog&amp;amp;utm_campaign=mdb_001376&quot;&gt;http://www.packtpub.com/plone-3-theming-create-flexible-powerful-professional-templates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[1] Quite frankly, I think Plone is in a category all its own (as the most successful Python-based CMS of all time), and while there are certainly comparisons to be made, and lessons to be learned from the competition, I think we should let the readers decide for themselves how Plone stacks up to the competition.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">A Sane Buildout For repoze.zope2 + Plone</title>
    <id>http://blog.aclark.net/2009/06/18/a-sane-buildout-for-repoze-zope2-plone/</id>
    <updated>2009-06-18T00:00:00Z</updated>
    <published>2009-06-18T00:00:00Z</published>
    <link href="http://blog.aclark.net/2009/06/18/a-sane-buildout-for-repoze-zope2-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;a-sane-buildout-for-repoze-zope2-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a follow-up to Martin Aspeli&amp;#8217;s introduction to repoze and Plone from last year&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;a-tale-of-two-buildouts&quot;&gt;
&lt;h2&gt;A Tale of Two Buildouts&lt;/h2&gt;
&lt;p&gt;There are two stories going on here, both of which &lt;a class=&quot;reference external&quot; href=&quot;http://www.martinaspeli.net/articles/scrambled-eggs&quot;&gt;Martin Aspeli recently described in great detail&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://plope.com/Members/chrism/distribution_links_considered_harmful&quot;&gt;Chris McDonough tackled last year&lt;/a&gt;. For the purposes of this blog entry, I&amp;#8217;ll refer to the issue as the &amp;#8220;index vs. find-links&amp;#8221; conundrum in buildout&amp;nbsp; (find-links in buildout are equivalent to distribution_links in setuptools).&lt;/p&gt;
&lt;p&gt;For those that want strict repeatability, using the index parameter is the clear winner. It simply forces buildout to do the right thing now and forever, by limiting what packages it can select from. For those that want functionality and don&amp;#8217;t mind the occasional egg-out-of-whack (i.e. unexpected upgrade), then using the find-links parameter can provide a &amp;#8220;sexy&amp;#8221; way to get decent results quickly (but may, and probably will, shoot you in the foot later).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;sexy-but-dangerous&quot;&gt;
&lt;h2&gt;Sexy, but Dangerous&lt;/h2&gt;
&lt;p&gt;Let&amp;#8217;s start with the sexy, but with less repeat-ability method first.  Using this method we are not specifying our own index. Therefore you are free to add any package from &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/simple/&quot;&gt;PyPI&lt;/a&gt; or &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/simple&quot;&gt;plone.org&lt;/a&gt; as you see fit.  This is essentially why people like this method (the counter argument is that it is simple to add any additional egg you may want to your index, but we&amp;#8217;ll get to that later).&lt;/p&gt;
&lt;p&gt;So a simple buildout using this method might look like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv plone; cd plone
bin/easy\_install zc.buildout
bin/buildout init
Edit buildout.cfg:
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends =
# Using Martin Aspeli&amp;#39;s good-py, thanks!
    http://good-py.appspot.com/release/repoze.zope2/1.0
    http://dist.plone.org/release/3.3rc3/versions.cfg
versions = versions
find-links =
    http://dist.repoze.org/zope2/latest
    http://dist.repoze.org/zope2/dev/
    http://dist.plone.org/release/3.3rc3
parts = instance[instance]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    repoze.zope2
    Plone
    PIL

4. bin/buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A few more steps are required, which we could certainly automate in
buildout, but for now I&amp;#8217;ll just list them here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ol class=&quot;arabic simple&quot; start=&quot;5&quot;&gt;
&lt;li&gt;bin/mkzopeinstance&lt;/li&gt;
&lt;li&gt;bin/addzope2user admin admin&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, the moment we&amp;#8217;ve all been waiting for… the fun part!&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ol class=&quot;arabic simple&quot; start=&quot;7&quot;&gt;
&lt;li&gt;bin/paster serve etc/zope2.ini&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;You should see something like:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[aclark@alex-clarks-macbook-pro]~/Developer/plone% bin/paster serve etc/zope2.ini
2009-06-18 22:52:24 INFO Marshall libxml2-python not available. Unable to register libxml2 based marshallers.
2009-06-18 22:52:27 WARNING ZODB.FileStorage Ignoring index for
/Users/aclark/Developer/p3-repoze-2/var/Data.fsDeprecationWarning: zope.app.annotation has moved to
zope.annotation. Import of zope.app.annotation will become
unsupported in Zope 3.5
/Users/aclark/Developer/plone/eggs/zopelib-2.10.7.0-py2.4-macosx-10.5-i386.egg/zope/configuration/xmlconfig.py:323:
  __import__(arguments[0])
------
2009-06-18T22:52:24 INFO Marshall libxml2-python not available. Unable to register libxml2 based marshallers.
------
2009-06-18T22:52:27 WARNING ZODB.FileStorage Ignoring index for /Users/aclark/Developer/plone/var/Data.fs
Starting server in PID 26900.
zserver on port 8080
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;At this point, you should be able to login to
&lt;a class=&quot;reference external&quot; href=&quot;http://localhost:8080/manage&quot;&gt;http://localhost:8080/manage&lt;/a&gt; and create a Plone site.&lt;/p&gt;
&lt;p&gt;Of course, we did a sloppy job here, creating the Zope2 instance in the
root of the buildout, etc. It is possible that
&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/plone.recipe.zope2instance/3.2&quot;&gt;plone.recipe.zope2install&lt;/a&gt; may help us in the future by supporting
repoze.zope2 instances (or maybe it does already, I didn&amp;#8217;t try).&lt;/p&gt;
&lt;p&gt;Next up?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;boring-but-repeatable&quot;&gt;
&lt;h2&gt;Boring, but Repeatable&lt;/h2&gt;
&lt;p&gt;I kid, but this is actually a very serious concern for many people, and
rightfully so. The notion that your buildout will work the same today as
it does in one year from now may be a strict requirement for your
project. If it is, we can accommodate you (I hope) with the &amp;#8220;index&amp;#8221;
buildout that follows. The downside is that *you* can&amp;#8217;t control what I
put in the index. However, you can certainly create your own index using
this technique.&lt;/p&gt;
&lt;p&gt;An arguably even simpler buildout using this technique might look like
this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ol class=&quot;arabic simple&quot; start=&quot;0&quot;&gt;
&lt;li&gt;virtualenv plone; cd plone&lt;/li&gt;
&lt;li&gt;bin/easy_install zc.buildout&lt;/li&gt;
&lt;li&gt;bin/buildout init&lt;/li&gt;
&lt;li&gt;Edit buildout.cfg:&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
index = http://dist.plone.org/experimental/release/3.3rc3/simple/
parts = instance[instance]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    repoze.zope2
    Plone
    PIL

4. bin/buildout

5. bin/mkzopeinstance

6. bin/addzope2user admin admin

7. bin/paster serve etc/zope2.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;in-conclusion&quot;&gt;
&lt;h2&gt;In Conclusion&lt;/h2&gt;
&lt;p&gt;Depending on what my needs are, I might choose either of these
techniques. We can also hold out for &lt;a class=&quot;reference external&quot; href=&quot;http://bugs.python.org/setuptools/issue32&quot;&gt;multi-index support in
setuptools&lt;/a&gt;. That would seemingly make everyone happy. In the meantime,
I can tell you I&amp;#8217;d definitely reach for a buildout sans custom index
first, then ask questions later (i.e. wait for bleeding toes) but that
is just me. If people find the &amp;#8220;index&amp;#8221; technique generally useful, I&amp;#8217;d
be willing to support package sheperding and &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/basketweaver/0.1.2-r6&quot;&gt;index generating with
basketweaver&lt;/a&gt;. Just let me know. If it really catches on, we could
rename &lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/experimental/release/3.3rc3/&quot;&gt;http://dist.plone.org/experimental/release/3.3rc3/&lt;/a&gt; to
&lt;a class=&quot;reference external&quot; href=&quot;http://dist.plone.org/repoze/release/3.3rc3/&quot;&gt;http://dist.plone.org/repoze/release/3.3rc3/&lt;/a&gt;. Of course, if anyone
objects to this or finds it confusing, I can just as easily remove it
(from dist.plone.org).&lt;/p&gt;
&lt;p&gt;Special thanks to &lt;a class=&quot;reference external&quot; href=&quot;http://plope.com/&quot;&gt;Chris McDonough&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://www.martinaspeli.net/&quot;&gt;Martin Aspeli&lt;/a&gt; for helping me
scratch my itch!&lt;/p&gt;
&lt;p&gt;Finally, please don&amp;#8217;t rely on any of this &amp;#8220;in production&amp;#8221; yet unless you
know what you are doing. I tested these techniques up to the point of
starting Zope (via paste) and adding a Plone site, nothing more!&lt;/p&gt;
&lt;p&gt;I, however, am getting a new server next week and will be hosting this
site on &lt;a class=&quot;reference external&quot; href=&quot;http://repoze.org/quickstart.html#repoze.zope2&quot;&gt;repoze.zope2&lt;/a&gt; very shortly ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Is Anyone Using plone.org's New PyPI Functionality?</title>
    <id>http://blog.aclark.net/2009/03/13/is-anyone-using-plone-orgs-new-pypi-functionality/</id>
    <updated>2009-03-13T00:00:00Z</updated>
    <published>2009-03-13T00:00:00Z</published>
    <link href="http://blog.aclark.net/2009/03/13/is-anyone-using-plone-orgs-new-pypi-functionality/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;is-anyone-using-plone-org-s-new-pypi-functionality&quot;&gt;

&lt;p&gt;&lt;strong&gt;python setup.py upload -r plone.org&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Lots of exciting things are happening with Plone.org!&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/calvinhp&quot;&gt;Calvin Hendryx-Parker&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://sixfeetup.com&quot;&gt;Six Feet Up&lt;/a&gt; are working on moving *.plone.org to one of their powerful new servers (with some exceptions, most notably {svn,dev}.plone.org will remain in place, as I understand it)!&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://limi.net&quot;&gt;Alex Limi&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/team/WebsiteTeam&quot;&gt;company&lt;/a&gt; are working on deploying a new look and feel using a new-fangled technology called xdv (a variant of Deliverance).&lt;/li&gt;
&lt;li&gt;I am removing &lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/plone.org/ticket/1080&quot;&gt;kinks&lt;/a&gt; that have been lingering after the recent upgrade (in theory ;-).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This blog entry is both a &amp;#8220;call to arms&amp;#8221; to everyone involved in helping, and a message to everyone waiting patiently that we haven&amp;#8217;t forgotten about you! :-D&lt;/p&gt;
&lt;p&gt;In particular, I&amp;#8217;d like to hear from any early adopters of the new &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products&quot;&gt;http://plone.org/products&lt;/a&gt;section. You can read about how to use the new PyPI functionality here, if you haven&amp;#8217;t already: &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.dist/0.2.2&quot;&gt;http://pypi.python.org/pypi/collective.dist/0.2.2&lt;/a&gt;. In my little &amp;#8220;test&amp;#8221; product, I found it quite useful: &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/Products.todo/&quot;&gt;http://plone.org/products/Products.todo/.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So if you are using it, I&amp;#8217;d definitely like to hear your experiences. Or if not, please give it a try!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Help Eric Steele Go To Baarn</title>
    <id>http://blog.aclark.net/2009/01/23/help-esteele-go-to-baarn/</id>
    <updated>2009-01-23T00:00:00Z</updated>
    <published>2009-01-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2009/01/23/help-esteele-go-to-baarn/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;help-eric-steele-go-to-baarn&quot;&gt;

&lt;p&gt;&lt;strong&gt;Because I was there once too&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few years back, I was &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/sprints/past-sprints/baarn-ui-sprint-2007/&quot;&gt;invited to the Baarn UI Sprint 2007.&lt;/a&gt; This was a huge turning point for me and Plone. Having just attended the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/conferences/seattle-2006&quot;&gt;annual conference in Seattle&lt;/a&gt;, I was raring to contribute. And in getting invited, I felt like a Catholic getting invited to the Vatican to hang out with the Pope (well 1/2 the Pope at least, aka &lt;a class=&quot;reference external&quot; href=&quot;http://limi.net&quot;&gt;Limi&lt;/a&gt; ;-)). You cannot beat the awesomeness of the Plone community and the fact that if you give something to it, you will get it back ten-fold in:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Knowledge and skills (You can acquire a ton of technical skill by learning the Plone).&lt;/li&gt;
&lt;li&gt;Kindness from strangers (People will help you do things, like attend a development sprint in another country, amazing).&lt;/li&gt;
&lt;li&gt;Employment for life (There is more Plone work than there are Plone developers, and I don&amp;#8217;t see this changing anytime soon).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which brings me to the subject at hand. One of our own, Eric Steele (author of the amazing development tool &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/gloworm/&quot;&gt;Gloworm&lt;/a&gt;, and member of the extremely Plone friendly web group called &lt;a class=&quot;reference external&quot; href=&quot;http://weblion.psu.edu/&quot;&gt;WebLion&lt;/a&gt;) needs your help!  Last I spoke with Eric he had reached 60% of his desired goal, so let&amp;#8217;s help him get to the finish line (by Wednesday).&lt;/p&gt;
&lt;p&gt;You can (and probably should, if you can afford it ;-) donate a little something here: &lt;a class=&quot;reference external&quot; href=&quot;http://www.theartofbeingstill.com/help-me-get-to-baarn&quot;&gt;http://www.theartofbeingstill.com/help-me-get-to-baarn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I can imagine only good things to come for Plone as a result of Eric attending this event (in fact, Weblion is funding the trip, donations are for food and incidentals if I recall correctly).&lt;/p&gt;
&lt;p&gt;So please help! :-D&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Getting Excited About Plone as Eggs</title>
    <id>http://blog.aclark.net/2008/12/15/getting-excited-about-plone-as-eggs/</id>
    <updated>2008-12-15T00:00:00Z</updated>
    <published>2008-12-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/12/15/getting-excited-about-plone-as-eggs/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;getting-excited-about-plone-as-eggs&quot;&gt;

&lt;p&gt;&lt;strong&gt;Updated for 4.x&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m really excited about this because it greatly simplifies the development and deployment story for &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org&quot;&gt;Plone&lt;/a&gt;. For example you can now create a Plone &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = http://dist.plone.org/release/4.0a1/versions.cfgversions = versions
find-links = http://dist.plone.org/thirdparty/PILwoTk-1.1.6.4.tar.gz
parts = instance

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
eggs =
    PILwoTk
    Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Thanks framework team and core developers for this impressive release.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Naked Plone Theme</title>
    <id>http://blog.aclark.net/2008/11/19/naked-plone-theme/</id>
    <updated>2008-11-19T00:00:00Z</updated>
    <published>2008-11-19T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/11/19/naked-plone-theme/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;naked-plone-theme&quot;&gt;

&lt;p&gt;&lt;strong&gt;Products.naked_plone&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve needed this for some time, but I&amp;#8217;m finally getting around to &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/Products.naked_plone/0.1&quot;&gt;shipping it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In addition to making it easy to disable default Plone styles, this add-on provides an &amp;#8220;Advanced Setup&amp;#8221; site action. The action is disabled by default, but you can enable it in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;portal_actions&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;site_actions&lt;/span&gt;&lt;/code&gt;. It adds a &amp;#8220;placeful&amp;#8221; &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;string:manage_main&lt;/span&gt;&lt;/code&gt; link so you can access the ZMI wherever you happen to be on the site.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Products.todo 0.1</title>
    <id>http://blog.aclark.net/2008/11/13/products-todo-0-1/</id>
    <updated>2008-11-13T00:00:00Z</updated>
    <published>2008-11-13T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/11/13/products-todo-0-1/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;products-todo-0-1&quot;&gt;

&lt;p&gt;&lt;strong&gt;A project to jump start my return to Plone development.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I needed a project to jump start my return to Plone after spending months organizing &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt;, and wanted to see an add-on&amp;#8217;s development through from start to finish including:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Generating boilerplate Buildout and add-on code with Paster.&lt;/li&gt;
&lt;li&gt;Develop some simple functionality for Plone.&lt;/li&gt;
&lt;li&gt;Releasing to pypi.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Repeat steps 2 and 3 as needed or desired.&lt;/p&gt;
&lt;p&gt;I also wanted to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Include the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file in the add-on so I could easily add buildbot.&lt;/li&gt;
&lt;li&gt;Write some tests for this code so I could practice TDD.&lt;/li&gt;
&lt;li&gt;Release to new.plone.org so we can finish the plone.org upgrade.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;#8217;m off to a good start. Next steps:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Get some feedback.&lt;/li&gt;
&lt;li&gt;Edit my &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;.pypirc&lt;/span&gt;&lt;/code&gt; and add new.plone.org and make a release.&lt;/li&gt;
&lt;li&gt;Add a buildbot.&lt;/li&gt;
&lt;li&gt;Write some tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">September 2008 is the Month of Plone.org</title>
    <id>http://blog.aclark.net/2008/09/02/september-2008-is-the-month-of-plone-org/</id>
    <updated>2008-09-02T00:00:00Z</updated>
    <published>2008-09-02T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/09/02/september-2008-is-the-month-of-plone-org/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;september-2008-is-the-month-of-plone-org&quot;&gt;

&lt;p&gt;&lt;strong&gt;Upgrade to Plone 3 before the conference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt; is fast approaching and to avoid embarrassment, disappointment and public outcry I&amp;#8217;d like to declare &lt;strong&gt;September 2008 The Month Of Plone.org&lt;/strong&gt;. I have created an OpenPlans project to help coordinate efforts:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/ploneorg-upgrade/project-home&quot;&gt;http://www.coactivate.org/projects/ploneorg-upgrade/project-home&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are interested in helping, please &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/ploneorg-upgrade/request-membership&quot;&gt;join the project&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">collective.recipe.supervisor: Thank You</title>
    <id>http://blog.aclark.net/2008/08/10/re-collective-recipe-supervisor-thank-you/</id>
    <updated>2008-08-10T00:00:00Z</updated>
    <published>2008-08-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/08/10/re-collective-recipe-supervisor-thank-you/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;collective-recipe-supervisor-thank-you&quot;&gt;

&lt;p&gt;&lt;strong&gt;Now even easier to use Supervisor&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since I &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2008/05/15/supervisor-rocks/index.html&quot;&gt;last wrote about supervisor&lt;/a&gt; it&amp;#8217;s become easier to use thanks to &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recipe.supervisor&quot;&gt;collective.recipe.supervisor&lt;/a&gt;. Now it&amp;#8217;s as simple as editing your &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add a section for Supervisor:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
    parts =
        ...
        supervisor
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Create the section:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[supervisor]
recipe = collective.recipe.supervisor
programs =
    10 zeo ${zeo:location}/bin/runzeo ${zeo:location}
    20 instance ${instance:location}/bin/runzope ${instance:location} true
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
Installing supervisor.
Getting distribution for &amp;#39;supervisor&amp;#39;.
Got supervisor 3.0a6.
Getting distribution for &amp;#39;elementtree&amp;gt;=1.2.6,&amp;lt;1.2.7&amp;#39;.
zip_safe flag not set; analyzing archive contents...
Got elementtree 1.2.6-20050316.
Getting distribution for &amp;#39;meld3&amp;gt;=0.6.4&amp;#39;.
zip_safe flag not set; analyzing archive contents...
Got meld3 0.6.5.
Getting distribution for &amp;#39;medusa&amp;gt;=0.5.4&amp;#39;.
zip_safe flag not set; analyzing archive contents...
Got medusa 0.5.4.
Generated script &amp;#39;/Users/aclark/Developer/supervisor-recipe-test/bin/supervisord&amp;#39;.
Generated script &amp;#39;/Users/aclark/Developer/supervisor-recipe-test/bin/memmon&amp;#39;.
Generated script &amp;#39;/Users/aclark/Developer/supervisor-recipe-test/bin/supervisorctl&amp;#39;.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start Supervisor in the foreground:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/supervisord -e debug -n
2008-08-27 06:40:34,805 INFO Increased RLIMIT_NOFILE limit to 1024
2008-08-27 06:40:35,036 INFO RPC interface &amp;#39;supervisor&amp;#39; initialized
2008-08-27 06:40:35,036 WARN cElementTree not installed,
    using slower XML parser for XML-RPC
2008-08-27 06:40:35,036 CRIT Server &amp;#39;inet_http_server&amp;#39; running without
    any HTTP authentication checking
2008-08-27 06:40:35,037 INFO supervisord started with pid 99684
2008-08-27 06:40:36,041 INFO spawned: &amp;#39;zeo&amp;#39; with pid 99686
2008-08-27 06:40:36,049 INFO spawned: &amp;#39;instance&amp;#39; with pid 99687
2008-08-27 06:40:37,051 INFO success: zeo entered RUNNING state,
    process has stayed up for &amp;gt; than 1 seconds (startsecs)
2008-08-27 06:40:37,051 INFO success: instance entered RUNNING state,
    process has stayed up for &amp;gt; than 1 seconds (startsecs)
2008-08-27 06:40:41,574 DEBG &amp;#39;instance&amp;#39; stdout output:
2008-08-27 06:40:41 INFO ZServer HTTP server started at Wed Aug 27 06:40:41 2008
    Hostname: localhost
    Port: 8080...2008-08-27 06:41:28,396 DEBG &amp;#39;instance&amp;#39; stdout output:
2008-08-27 06:41:28 INFO Application New disk product detected,
    determining if we need to fix up any ZClasses.2008-08-27 06:41:28,452 DEBG &amp;#39;instance&amp;#39; stdout output:
2008-08-27 06:41:28 INFO Zope Ready to handle requests
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start Supervisor in the background:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Get the status:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ supervisorctl status
instance                         RUNNING    pid 99889, uptime 0:00:04
zeo                              RUNNING    pid 99888, uptime 0:00:04
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Start/stop Zope/ZEO:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/supervisorctl stop instance
instance: stopped$ bin/supervisorctl stop zeo
zeo: stopped$ bin/supervisorctl start zeo
zeo: started$ bin/supervisorctl start instance
instance: started$ bin/supervisorctl stop all
zeo: stopped
instance: stopped$ bin/supervisorctl start  all
zeo: startedinstance: started
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Thanks &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.recipe.supervisor/0.4#contributors&quot;&gt;Mustapha Benali, Author &amp;amp; Hanno Schlichting, Contributor&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone Conference 2008: Please Register</title>
    <id>http://blog.aclark.net/2008/07/01/plone-conference-2008-please-register-for-an-early-bird-admission-today/</id>
    <updated>2008-07-01T00:00:00Z</updated>
    <published>2008-07-01T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/07/01/plone-conference-2008-please-register-for-an-early-bird-admission-today/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-conference-2008-please-register&quot;&gt;

&lt;p&gt;&lt;strong&gt;Join 300-400 of your closest friends for a 7-day party&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://ploneconf2008.eventbrite.com/&quot;&gt;http://ploneconf2008.eventbrite.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Organizing a &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/conference/2008-washington-dc&quot;&gt;Plone Conference&lt;/a&gt; is a lot like planning to invite 300-400 of your closest friends over for a 7-day long party, or, at least, it feels that way to me. I&amp;#8217;m really looking forward to seeing everyone in DC in just a few short months, and I&amp;#8217;m very excited about all the possibilities. From the pre-conference training, to the post conference sprint, to all the good food/drink/people/places to enjoy in between. This promises to be one of the biggest and best Plone Conferences ever.&lt;/p&gt;
&lt;p&gt;To that end, I&amp;#8217;d like to invite everyone to participate in the early bird registration now open at: &lt;a class=&quot;reference external&quot; href=&quot;http://ploneconf2008.eventbrite.com&quot;&gt;http://ploneconf2008.eventbrite.com&lt;/a&gt; and I encourage everyone to register right now. We need the support of everyone in the Plone community to make this conference a success.&lt;/p&gt;
&lt;p&gt;From spreading the word, to purchasing tickets, to sponsoring the conference itself, if you are reading this, you can help. Securing early bird registrations is a key part of the planning process; it allows us to move forward to the next phase.&lt;/p&gt;
&lt;p&gt;And finally, a huge thanks to everyone for your support. I continue to be amazed by the spirit of the community, and I really appreciate the opportunity to work on things like &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/conferences/2008-washington-dc&quot;&gt;Plone Conference 2008&lt;/a&gt; and upgrading plone.org (which I will have more information about soon, but until then, please poke around on: &lt;a class=&quot;reference external&quot; href=&quot;http://new.plone.org/&quot;&gt;http://new.plone.org/&lt;/a&gt; or check out &lt;a class=&quot;reference external&quot; href=&quot;http://tarekziade.wordpress.com/2008/07/01/ploneorg-migration/&quot;&gt;Tarek&amp;#8217;s most recent blog entry&lt;/a&gt; or Jens&amp;#8217; most recent mail to the website list: &lt;a class=&quot;reference external&quot; href=&quot;http://www.nabble.com/plone.org-buildout-refactored-to18266816s6747.html&quot;&gt;http://www.nabble.com/plone.org-buildout-refactored-to18266816s6747.html&lt;/a&gt;. We have scheduled July 19th as the tentative &amp;#8220;go live&amp;#8221; date.)&lt;/p&gt;
&lt;p&gt;So without further ado, please head over to &lt;a class=&quot;reference external&quot; href=&quot;http://ploneconf2008.eventbrite.com&quot;&gt;http://ploneconf2008.eventbrite.com&lt;/a&gt; to secure your place at the conference, and help the planning team move forward. See you all in DC!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Placeful Theming</title>
    <id>http://blog.aclark.net/2008/06/02/placeful-theming/</id>
    <updated>2008-06-02T00:00:00Z</updated>
    <published>2008-06-02T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/06/02/placeful-theming/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;placeful-theming&quot;&gt;

&lt;p&gt;&lt;strong&gt;For some themed location /foo/bar, you want &amp;#8220;bar&amp;#8221; and everything below it to look different than &amp;#8220;foo&amp;#8221;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I had to do a bit of placeful theming lately and I thought I would share the techniques I used (thanks davisagli, jonbaldievieso, vedawms). Let&amp;#8217;s say you have a Plone 3 site, and for some location /foo/bar/baz, you want &amp;#8216;baz&amp;#8217; and everything below it to look different. I made this change through the web because I was in a hurry, but the same can be done in filesystem code.&lt;/p&gt;
&lt;p&gt;The steps are:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;override-getsectionfromurl-navigate-to-portal-skins-plone-scripts-getsectionfromurl-and-customize&quot;&gt;
&lt;h2&gt;1. Override getSectionFromURL (navigate to portal_skins/plone_scripts/getSectionFromURL and customize)&lt;/h2&gt;
&lt;p&gt;Normally, this bit of code returns the section id for whatever section you are in. So if your site has three top level folders A, B, C, getSectionURL returns section-A when you are inside of A, section-B when you are inside of B, and so on. However, when you are inside of a sub-section, e.g. /A/news-items-folder, it *still* returns the section id, in this case section-A. The override makes getSectionURL return the sub-section, e.g. /A/news-items-folder, or /foo/bar/baz.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Courtesy of jonb at onenw.org&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# getSectionFromURLcontentPath = context.portal_url.getRelativeContentPath(context)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sectionId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathItem&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contentPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sectionId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;section-&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sectionId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;override-plone-logo-navigate-to-portal-view-customizations-zope-interface-interface-plone-logo-and-customize&quot;&gt;
&lt;h2&gt;2. Override plone.logo (navigate to /portal_view_customizations/zope.interface.interface-plone.logo and customize)&lt;/h2&gt;
&lt;p&gt;For some reason (good or not, I don&amp;#8217;t know) Plone includes an image tag in the html code it uses to generate the Plone logo. This means that it will always output something like:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;img src=&amp;quot;logo.jpg&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;which is a problem if you want to placefully replace the logo because there is no easy way to do it (perhaps you could use some trick to return a different image file with the same file name).&lt;/p&gt;
&lt;p&gt;Plone ships with:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;a metal:define-macro=&amp;quot;portal_logo&amp;quot; id=&amp;quot;portal-logo&amp;quot; accesskey=&amp;quot;1&amp;quot; tal:attributes=&amp;quot;href view/navigation_root_url&amp;quot; i18n:domain=&amp;quot;plone&amp;quot;&amp;gt;
    &amp;lt;img src=&amp;quot;logo.jpg&amp;quot; alt=&amp;quot;&amp;quot; tal:replace=&amp;quot;structure view/logo_tag&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Replace that with:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;div metal:define-macro=&amp;quot;portal_logo&amp;quot; id=&amp;quot;portal-logo&amp;quot;&amp;gt;&amp;lt;a accesskey=&amp;quot;1&amp;quot; tal:attributes=&amp;quot;href view/navigation_root_url&amp;quot; i18n:domain=&amp;quot;plone&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-css-navigate-to-portal-skins-plone-styles-plonecustom-css-and-customize&quot;&gt;
&lt;h2&gt;3. Add CSS (Navigate to /portal_skins/plone_styles/ploneCustom.css and customize)&lt;/h2&gt;
&lt;p&gt;Next, add in some CSS to make use of the previous two changes:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;body.section-foo-bar-baz { background-image: url(gradient.png);}.section-foo-bar-baz
#portal-globalnav li a { border: 0px; background: #0066CC; color: white; font-size: 110%; font-face: bold;}.section-foo-bar-baz
#portal-globalnav { background: #0066CC; padding: 0.25em;}.section-foo-bar-baz
#portal-breadcrumbs,.section-foo-bar-baz #portal-personaltools { background: white;}.section-foo-bar-baz
#portal-top { background: white;}.section-foo-bar-baz
#portal-logo { margin: 1em; background-image: url(ama_logo.gif); background-repeat: no-repeat;}.section-foo-bar-baz
#visual-portal-wrapper { background: white; margin: auto; width: 883px; position: relative;}.section-foo-bar-baz
body { background-image: url(gradient.png); background-repeat: repeat;}
#portal-logo { margin: 1em; background-image: url(logo.jpg); background-repeat: no-repeat;}
#portal-logo a { display: block; width: 650px; height: 80px;}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I hope this helps someone get started with placeful theming.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone.org Upgrade Remote Sprint</title>
    <id>http://blog.aclark.net/2008/05/22/plone-org-upgrade-remote-sprint/</id>
    <updated>2008-05-22T00:00:00Z</updated>
    <published>2008-05-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/05/22/plone-org-upgrade-remote-sprint/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-org-upgrade-remote-sprint&quot;&gt;

&lt;p&gt;&lt;strong&gt;Join us on IRC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Join us this Saturday in &lt;a class=&quot;reference external&quot; href=&quot;irc://irc.freenode.net#PxC&quot;&gt;irc://irc.freenode.net#PxC&lt;/a&gt; at 4:00AM EDT to work on Plone.org upgrade issues, including:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Deploying the latest PloneSoftwareCenter code to new.plone.org and testing &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.dist/0.1.9&quot;&gt;collective.dist&lt;/a&gt; against new.plone.org/products.&lt;/li&gt;
&lt;li&gt;Develop and test collective.psc.mirroring. This is the PloneSoftwareCenter module responsible for copying uploads to dist.plone.org.&lt;/li&gt;
&lt;li&gt;Develop and test &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/collective.psc.blobstorage&quot;&gt;collective.psc.blobstorage&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/collective.psc.externalstorage/&quot;&gt;collective.psc.externalstorage&lt;/a&gt; and collective.psc.filestorage (which does not exist yet). These are the modules responsible for implementing pluggable storage in PloneSoftwareCenter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Supervisor Rocks</title>
    <id>http://blog.aclark.net/2008/05/15/supervisor-rocks/</id>
    <updated>2008-05-15T00:00:00Z</updated>
    <published>2008-05-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/05/15/supervisor-rocks/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;supervisor-rocks&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a reiteration of Carlos de la Guardia&amp;#8217;s recent post on the subject&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You should probably be using &lt;a class=&quot;reference external&quot; href=&quot;http://supervisord.org&quot;&gt;Supervisor&lt;/a&gt; because:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Starting and stopping Zope and ZEO separately is no fun.&lt;/li&gt;
&lt;li&gt;Using Supervisor is easy and fun.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add a new section your &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;parts =
    ...
    supervisor
    ...

[supervisor]
recipe = zc.recipe.egg
egg = supervisor
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Create a configuration file:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[inet_http_server]
port=127.0.0.1:9999
#username=admin
#password=admin

[supervisord]
logfile=%(here)s/../var/log/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=%(here)s/../var/supervisord.pidnodaemon=false

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=http://127.0.0.1:9999

[program:zeo]
command = %(here)s/../parts/zeo/bin/runzeo
priority = 10

[program:zope]
command = %(here)s/../parts/instance/bin/runzope
priority = 20
redirect_stderr = true
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now run Buildout:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildout&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and start Supervisor:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supervisord&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;supervisorctl&lt;/span&gt;&lt;/code&gt; to start and stop your Zope and ZEO at the same time:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bin/supervisorctl start all
bin/supervisorctl stop all
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Stop Supervisor with:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bin/supervisorctl shutdown
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Thanks Chris McDonough of &lt;a class=&quot;reference external&quot; href=&quot;http://agendaless.com/&quot;&gt;Agendaless Consulting&lt;/a&gt; and Mike Naberezny of &lt;a class=&quot;reference external&quot; href=&quot;http://maintainable.com/&quot;&gt;Maintainable Software,&lt;/a&gt; plus &lt;a class=&quot;reference external&quot; href=&quot;http://supervisord.org/contributors/&quot;&gt;contributors&lt;/a&gt; for creating and maintaining Supervisor.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Plone.org Upgrade Update</title>
    <id>http://blog.aclark.net/2008/05/01/plone-org-upgrade-update/</id>
    <updated>2008-05-01T00:00:00Z</updated>
    <published>2008-05-01T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/05/01/plone-org-upgrade-update/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-org-upgrade-update&quot;&gt;

&lt;p&gt;&lt;strong&gt;Thank You&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thanks again to everyone who contributed to my travel fund, I really appreciate it. Being able to work closely with Tarek Ziadé and Matthew Wilkes on PloneSoftwareCenter and PloneOrg was amazing, productive, and fun. Of course being in the company of all the sprinters was a pleasure, and thank you Christophe for the hospitality.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Matthew and Tarek worked on getting PloneSoftwareCenter ready to host Python packages.&lt;/li&gt;
&lt;li&gt;I worked on creating and configuring the new site instance.&lt;/li&gt;
&lt;li&gt;Steve McMahon and I converted the remaining dependencies from Zope products to Python packages.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Help Me Upgrade plone.org</title>
    <id>http://blog.aclark.net/2008/04/18/help-me-upgrade-plone-org/</id>
    <updated>2008-04-18T00:00:00Z</updated>
    <published>2008-04-18T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/04/18/help-me-upgrade-plone-org/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;help-me-upgrade-plone-org&quot;&gt;

&lt;p&gt;&lt;strong&gt;Because plone.org should run the latest Plone&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You may be wondering why plone.org is not running the latest version of Plone. Well wonder no more! By the end of this month, it will be. I have been &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org/plone/log/PloneOrg/buildouts/branches/3.0&quot;&gt;working on&lt;/a&gt;the various bits and pieces needed to upgrade for months, including:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Testing the &amp;#8220;live&amp;#8221; Data.fs against the latest release of Plone.&lt;/li&gt;
&lt;li&gt;Converting old-style Zope 2 Products to eggs.&lt;/li&gt;
&lt;li&gt;Rallying the troops to contribute as needed.&lt;/li&gt;
&lt;li&gt;Becoming a plone.org admin so I can drive the process myself.&lt;/li&gt;
&lt;li&gt;and much, much more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And I can promise you that tremendous progress will be made at the Paris sprint next week, including:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Finalization of the dist-utils enabled PloneSoftwareCenter that will be used.&lt;/li&gt;
&lt;li&gt;Adding blob support to PloneSoftwareCenter (Witsch, can you help?)&lt;/li&gt;
&lt;li&gt;Migrating all PSCFile objects from ExternalStorage to blob.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So please, if you would like to see an upgraded plone.org as much as I would, please consider making a generous donation to my travel fund. I&amp;#8217;d like to raise around $1000 to get reimbursed for my airfare only; I will be sleeping on a donated couch. The suggested donation amount is $50-100, but any amount is welcome. Thank you all very much!!! And thanks to everyone that has helped with the upgrade so far including but not limited to: Limi, Wiggy, SteveM, Tarek, Maurits, Newbery, Jens, Witsch, MattBowen!&lt;/p&gt;
&lt;p&gt;Lastly, I promise to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Cut the fundraiser off as soon as I reach my goal, and&lt;/li&gt;
&lt;li&gt;Report back with results by the end of the month.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now without further ado, please donate-away!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">NASA Story Slashdotted</title>
    <id>http://blog.aclark.net/2008/04/12/nasa-story-slashdotted/</id>
    <updated>2008-04-12T00:00:00Z</updated>
    <published>2008-04-12T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/04/12/nasa-story-slashdotted/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;nasa-story-slashdotted&quot;&gt;

&lt;p&gt;&lt;strong&gt;The Slashdot effect&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My submission to Slashdot was published!&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://science.slashdot.org/science/08/04/12/0010230.shtml&quot;&gt;http://science.slashdot.org/science/08/04/12/0010230.shtml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">NASA Launches New Science Web Site Powered By Plone</title>
    <id>http://blog.aclark.net/2008/04/10/nasa-starts-new-science-web-site-powered-by-plone/</id>
    <updated>2008-04-10T00:00:00Z</updated>
    <published>2008-04-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/04/10/nasa-starts-new-science-web-site-powered-by-plone/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;nasa-launches-new-science-web-site-powered-by-plone&quot;&gt;

&lt;p&gt;&lt;strong&gt;Another high-profile Plone site&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Last night&amp;#8217;s launch of &lt;a class=&quot;reference external&quot; href=&quot;http://nasascience.nasa.gov&quot;&gt;http://nasascience.nasa.gov&lt;/a&gt; marks the launch of another high-profile Plone site. Congratulations to NASA and the website development team!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Take Back The Tap</title>
    <id>http://blog.aclark.net/2008/03/17/take-back-the-tap/</id>
    <updated>2008-03-17T00:00:00Z</updated>
    <published>2008-03-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2008/03/17/take-back-the-tap/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;take-back-the-tap&quot;&gt;

&lt;p&gt;&lt;strong&gt;Promote tap water over bottled water&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;ACLARK.NET, LLC&lt;/a&gt; is proud to announce &lt;a class=&quot;reference external&quot; href=&quot;http://www.takebackthetap.org&quot;&gt;http://www.takebackthetap.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following software was used to deploy this site:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/plone&quot;&gt;Plone 3.0.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/ploneformgen&quot;&gt;PloneFormGen 1.2.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/redirectiontool&quot;&gt;RedirectionTool 1.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/plone-seo&quot;&gt;qSEOptimizer 1.0.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/webcouturier-dropdownmenu&quot;&gt;webcouturier.dropdownmenu 1.1.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Buildout Recipe Tip: hexagonit.recipe.download</title>
    <id>http://blog.aclark.net/2007/11/28/zcbuildout-recipe-tip-hexagonitrecipedownload-ftw-for-the-win/</id>
    <updated>2007-11-28T00:00:00Z</updated>
    <published>2007-11-28T00:00:00Z</published>
    <link href="http://blog.aclark.net/2007/11/28/zcbuildout-recipe-tip-hexagonitrecipedownload-ftw-for-the-win/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;buildout-recipe-tip-hexagonit-recipe-download&quot;&gt;

&lt;p&gt;&lt;strong&gt;How to handle difficult old-style add-ons.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sometimes an &amp;#8220;old-style&amp;#8221; add-on is distributed as &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;foo.tar.gz&lt;/span&gt;&lt;/code&gt; and extracts to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;foo/&lt;/span&gt;&lt;/code&gt;, but the package is called &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;bar&lt;/span&gt;&lt;/code&gt;. This can be a problem when using the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plone.recipe.productdistros&lt;/span&gt;&lt;/code&gt; recipe because when &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;bar&lt;/span&gt;&lt;/code&gt; is extracted to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;parts/productdistros/foo&lt;/span&gt;&lt;/code&gt; it will not work.&lt;/p&gt;
&lt;p&gt;Fortunately there is &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;hexagonit.recipe.download&lt;/span&gt;&lt;/code&gt;, which allows you to specify the destination. For example, &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/Products.ZNagios&quot;&gt;ZNagios&lt;/a&gt; (an add-on that integrates Zope with Nagios) is available as a tarball here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://svn.gocept.com/viewcvs/ZNagios/trunk.tar.gz?view=tar&quot;&gt;http://svn.gocept.com/viewcvs/ZNagios/trunk.tar.gz?view=tar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we use productdistros, we end up with ZNagios installed in &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;parts/productdistros/trunk&lt;/span&gt;&lt;/code&gt;. But if we use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;hexagonit.recipe.download&lt;/span&gt;&lt;/code&gt; we can control the destination.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
parts = znagios

[znagios]
recipe = hexagonit.recipe.download
url = http://svn.gocept.com/viewcvs/ZNagios/trunk.tar.gz?view=tar
destination = products/ZNagios
strip-top-level-dir = True
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After running Buildout you should have the following in your &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;products/&lt;/span&gt;&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/products/ZNagios
/products/ZNagios/COPYRIGHT.txt
/products/ZNagios/LICENSE.txt
/products/ZNagios/README.txt
/products/ZNagios/__init__.py
/products/ZNagios/check_zope.py
/products/ZNagios/munin_client.py
/products/ZNagios/version.txt
/products/ZNagios/zeo_munin.py
/products/ZNagios/zope.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">My Plone Days October 2007</title>
    <id>http://blog.aclark.net/2007/10/18/my-plone-days-october-2007/</id>
    <updated>2007-10-18T00:00:00Z</updated>
    <published>2007-10-18T00:00:00Z</published>
    <link href="http://blog.aclark.net/2007/10/18/my-plone-days-october-2007/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;my-plone-days-october-2007&quot;&gt;

&lt;p&gt;&lt;strong&gt;A commitment to the 10% Plone Manifesto.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;My focus will be &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/products/plonesoftwarecenter&quot;&gt;PloneSoftwareCenter (PSC)&lt;/a&gt;. After receiving a little prodding on IRC, I am declaring myself the product owner; I&amp;#8217;ll spend two days getting it ready to ship with Plone 3 compatibility.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Is This Thing On?</title>
    <id>http://blog.aclark.net/2007/10/17/is-this-thing-on/</id>
    <updated>2007-10-17T00:00:00Z</updated>
    <published>2007-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2007/10/17/is-this-thing-on/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;is-this-thing-on&quot;&gt;

&lt;p&gt;&lt;strong&gt;Sorry about the duplicate posts.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt=&quot;../../../_images/george-bush-debate.jpg&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/george-bush-debate.jpg&quot; /&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;... because it is showing up on &lt;a class=&quot;reference external&quot; href=&quot;http://planet.plone.org&quot;&gt;planet&lt;/a&gt;! Sorry about the duplicates. I have recreated my blog using just Plone (no add-ons) and I didn&amp;#8217;t realize syndication was turned on.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">Help Improve Plone's API Documentation</title>
    <id>http://blog.aclark.net/2007/10/17/help-improve-plones-api-documentation/</id>
    <updated>2007-10-17T00:00:00Z</updated>
    <published>2007-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2007/10/17/help-improve-plones-api-documentation/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;help-improve-plone-s-api-documentation&quot;&gt;

&lt;p&gt;&lt;strong&gt;Sponsor my trip to the Plone Doccom Sprint in California&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m travelling from Washington, DC, USA to Mountain View, CA, USA June 26 - 29 to participate in the 2007 &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/events/sprints/doc-ecommerce&quot;&gt;Plone Doccomm Sprint&lt;/a&gt;. My main focus will be updating &lt;a class=&quot;reference external&quot; href=&quot;http://api.plone.org&quot;&gt;Plone&amp;#8217;s online API documentation&lt;/a&gt;. If you are interested in seeing this done and would like to help, please consider making a donation to help offset the cost of my airfare. In return, I will create and upload API documentation for:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Plone-2.5.3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Archetypes-1.4.4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CMF-1.6.4&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;Plone-3.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Archetypes-1.5.0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CMF-2.1.0&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I plan to use either &lt;a class=&quot;reference external&quot; href=&quot;http://epydoc.sourceforge.net/&quot;&gt;Epydoc&lt;/a&gt; or &lt;a class=&quot;reference external&quot; href=&quot;https://pypi.python.org/pypi/pudge&quot;&gt;Pudge&lt;/a&gt;, suggestions welcome.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/category/plone/atom.xml">
    <title type="text">First Post</title>
    <id>http://blog.aclark.net/2007/10/17/first-post/</id>
    <updated>2007-10-17T00:00:00Z</updated>
    <published>2007-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2007/10/17/first-post/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;first-post&quot;&gt;

&lt;p&gt;&lt;strong&gt;I have decided to start a blog!&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt=&quot;../../../_images/balloons_clip_art_15536.jpg&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;../../../_images/balloons_clip_art_15536.jpg&quot; /&gt;
&lt;div class=&quot;line-block&quot;&gt;
&lt;div class=&quot;line&quot;&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Why? Because Plone allows me to do so. But also:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I have been reading a lot of Plone blogs lately and they have inspired me to write my own.&lt;/li&gt;
&lt;li&gt;I want to interact with other Plonistas.&lt;/li&gt;
&lt;li&gt;I want to get my web 2.0 on.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To that end, this post is about my &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/newzope&quot;&gt;build tools&lt;/a&gt; and how I love them. Note there are other ways to accomplish this task, for example:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://www.buildout.org&quot;&gt;Buildout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://agendaless.com/Members/chrism/software/buildit&quot;&gt;Buildit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://plone.org/products/instance-manager&quot;&gt;Instance Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I used Buildout for the first time at the &lt;a class=&quot;reference external&quot; href=&quot;https://plone.org/events/sprints/past-sprints/baarn-ui-sprint-2007&quot;&gt;Baarn UI Sprint 2007&lt;/a&gt; and liked it. I&amp;#8217;ve also used Chris McDonough&amp;#8217;s Buildit. That may be where I end up, and there are several more to choose from, but for now I enjoy typing:&lt;/p&gt;
&lt;style&gt;
pre:before { content: '$ ' }
&lt;/style&gt;

&lt;pre&gt;
newzope test-site ProductA ProductB ProductC
&lt;/pre&gt;&lt;p&gt;and having a working instance a few seconds later with Product{A,B,C} installed. Of course this requires I have a working Zope already... and that I edit Zope&amp;#8217;s &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;skel/etc/zope.conf&lt;/span&gt;&lt;/code&gt;... but nothing is perfect... and old habits die hard.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
