<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Alex Clark's Blog - Posted in 2012</title>
  <id>http://blog.aclark.net/blog/2012/atom.xml</id>
  <updated>2012-12-29T00:00:00Z</updated>
  <link href="http://blog.aclark.net" />
  <link href="http://blog.aclark.net/blog/2012/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.2">ABlog</generator>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">New Year's Python Meme 2012</title>
    <id>http://blog.aclark.net/2012/12/29/new-years-python-meme-2012/</id>
    <updated>2012-12-29T00:00:00Z</updated>
    <published>2012-12-29T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/12/29/new-years-python-meme-2012/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-year-s-python-meme-2012&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is my entry for Tarek Ziadé&amp;#8217;s New Year&amp;#8217;s Python Meme, a tradition I have come to enjoy. Both to reflect on the current year and look back on previous years. So here it is.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/tarek-meme-reminder.png&quot; /&gt;
&lt;p&gt;I did this in &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2009/12/31/new-years-python-meme/&quot;&gt;2009&lt;/a&gt; &amp;amp; &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2011/12/21/new-years-python-meme-2011/&quot;&gt;2011&lt;/a&gt;. Let&amp;#8217;s try it again.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. What’s the coolest Python application, framework or library you have discovered in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That would be &lt;a class=&quot;reference external&quot; href=&quot;http://docs.python-requests.org/en/latest/&quot;&gt;Kenneth Reitz&amp;#8217;s Requests&lt;/a&gt;. Like many others, I&amp;#8217;ve been bitten by the elegance and simplicity bug that is inherent and ingrained in the Requests library. Primarily, I used it to build pythonpackages.com. In particular, I used it to communicate with the almost-equally-elegant (IMHO) GitHub API. This is why I like requests (among other reasons): I don&amp;#8217;t need to use a &amp;#8220;third party&amp;#8221; library to communicate with the GitHub API. Such libraries (I think) attempt to make my job easier by hiding complexity and presenting simpler APIs to use. This is sometimes necessary, but no substitute for &lt;em&gt;really&lt;/em&gt; and &lt;em&gt;actually&lt;/em&gt; simple APIs and good documentation (both of which GitHub and Kenneth provide, with their respective APIs.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. What new programming technique did you learn in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JavaScript: check. Unit testing: check. These are techniques I have learned enough of to be effective in my &amp;#8220;day job&amp;#8221; (I&amp;#8217;m self-employed). But I learned (finally) that I am primarily: a Python Web Developer. And it feels good to say that. I use Python, and related web technologies to build web applications for my clients. I typically only care to learn enough of a technology to get my job done, then I lose interest (for the most part). That&amp;#8217;s because I&amp;#8217;m also a Hacker. I identify significantly with this monicker because it fits who I am and how I conduct myself professionally. I care about getting the job done above all else. And if there is a job to be done, my intellectual curiosity knows no bounds. If the job is done, I&amp;#8217;m going to play guitar. So whatever the technique, I&amp;#8217;ll learn it if it&amp;#8217;s something I care about for whatever reason.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Which open source project did you contribute to the most in 2012 ? What did you do?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the first year that Plone did not consume my every moment. I also spent significant time working on &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/buildout&quot;&gt;Buildout&lt;/a&gt; (INI-config-driven system to install Python packages and other software, &amp;amp; perform other related and miscellaneous tasks) and &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging&quot;&gt;Pillow (PIL fork)&lt;/a&gt;. With the help of many others, I hope to get a Python 3.3 compatible release of Pillow out by PyCon 2013. And I&amp;#8217;ll support Buildout &amp;lt; 2.x until such time as Buildout 2.x goes mainstream.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Which Python blog or website did you read the most in 2012?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Planets: Django, Mozilla, Plone, Python. Reddits: Python. Other feeds: Hacker News &amp;amp; Tech Crunch. I added Tech Crunch this year to satisfy my &amp;#8220;startup itch&amp;#8221;, as was recommended to me by Jonathon Perrelli of Fortify.vc in DC.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. What are the three top things you want to learn in 2013?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;How to hustle. Hustling, and more hustling. I&amp;#8217;ve gained a lot (enough?) technical skill over the years. Now I want to put that skill to good use in business. I&amp;#8217;ve managed to remain self-employed for a number of years, now I&amp;#8217;d like to employ others full time, build successful businesses and otherwise &amp;#8220;expand my empire&amp;#8221;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. What is the top software, application or library you wish someone would write in 2013?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I hope that I get more significant time to put into my &amp;#8220;baby&amp;#8221;: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/pythonpackages&quot;&gt;pythonpackages.com&lt;/a&gt;. In particular, I&amp;#8217;m considering adding a Travis-like service which would spawn Windows VMs to run tests and produce executables for Python packages (to address a particular pain point I&amp;#8217;ve discovered along the way: people want to support Windows, but often don&amp;#8217;t have the ability to do so easily.)&lt;/p&gt;
&lt;p&gt;Happy (Python) New Year!&lt;/p&gt;
&lt;p&gt;Want to do your own list? Here&amp;#8217;s how:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Copy-paste the questions and answer to them in your blog&lt;/li&gt;
&lt;li&gt;Tweet it with the &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/search/realtime?q=%232012pythonmeme&amp;amp;src=typd&quot;&gt;#2012pythonmeme&lt;/a&gt; hashtag&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">The Zen of Zope, by Alex Clark</title>
    <id>http://blog.aclark.net/2012/12/09/the-zen-of-zope/</id>
    <updated>2012-12-09T00:00:00Z</updated>
    <published>2012-12-09T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/12/09/the-zen-of-zope/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;the-zen-of-zope-by-alex-clark&quot;&gt;

&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;other&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;The Zen of Zope, by Alex Clark&lt;/span&gt;


&lt;span class=&quot;go&quot;&gt;Beautiful is an attribute of ugly.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Explicit is implemented by implicit.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Simple is provided by complex.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Complex is directly provided by complicated.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Flat only implements nested.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Sparse has tagged value dense.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Readability count is not in range.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Special cases could not adapt the rules.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Practicality implements purity.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Errors should never require a specification that doesn’t extend the specification of silence.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Unless explicit is a multi-adapter.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;In subscribing to ambiguity, return all the objects that refuse the temptation to guess.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;There should be none-- and preferably only zero --output from a handler.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Although that way may not be obvious at first unless you&amp;#39;ve registered an adapter hook&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Now is verified by never.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Although never is not implemented by *right* now.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;If the implementation is hard to explain, it queries the bad idea utility.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;If the implementation is easy to explain, it may query the good idea utility.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Implicit namespace packages are one honking great idea -- let&amp;#39;s do more of those!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Plone Guide</title>
    <id>http://blog.aclark.net/2012/11/23/plone-guide/</id>
    <updated>2012-11-23T00:00:00Z</updated>
    <published>2012-11-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/11/23/plone-guide/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-guide&quot;&gt;

&lt;p&gt;&lt;strong&gt;For anyone new to my blog, welcome.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;who&quot;&gt;
&lt;h2&gt;Who&lt;/h2&gt;
&lt;p&gt;For anyone new to my blog, welcome. I am Alex Clark: Python Web Developer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what&quot;&gt;
&lt;h2&gt;What&lt;/h2&gt;
&lt;p&gt;Recently with a tweet, I announced the start of a new personal project:&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/tweet.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;when&quot;&gt;
&lt;h2&gt;When&lt;/h2&gt;
&lt;p&gt;I have tentatively scheduled this project to be completed by the end of 2013, because it&amp;#8217;s important to set a deadline.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;where&quot;&gt;
&lt;h2&gt;Where&lt;/h2&gt;
&lt;p&gt;This project will be hosted on one of my current favorite websites: &lt;a class=&quot;reference external&quot; href=&quot;http://readthedocs.org&quot;&gt;http://readthedocs.org&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;why&quot;&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;p&gt;I think about Plone a lot as it relates to my current professional work. And I have more thoughts than I can currently keep track of in blogs, tweets, etc. So I decided to make an effort to write them all down.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how&quot;&gt;
&lt;h2&gt;How&lt;/h2&gt;
&lt;p&gt;I think a lot about what other people think about Plone, so I decided this book will feature comments from the general public in it. E.g.:&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/comments.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-much&quot;&gt;
&lt;h2&gt;How much?&lt;/h2&gt;
&lt;p&gt;This book will be free. But if you&amp;#8217;d like to support its development, please &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip me&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&amp;#8217;s not much to it yet, but feel free to head over and add some comments: &lt;a class=&quot;reference external&quot; href=&quot;https://plone-guide.readthedocs.org/en/latest/&quot;&gt;https://plone-guide.readthedocs.org/en/latest/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Pillow 1-7-8</title>
    <id>http://blog.aclark.net/2012/11/02/pillow-1-7-8/</id>
    <updated>2012-11-02T00:00:00Z</updated>
    <published>2012-11-02T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/11/02/pillow-1-7-8/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pillow-1-7-8&quot;&gt;

&lt;p&gt;&lt;strong&gt;Pillow is the friendly PIL fork. Initially just a packaging fork, now considering image code bug fixes and Python 3 support. To be friendly, we attempt to track changes against upstream tickets in PIL.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pillow 1.7.8 is out! Read about it here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/Pillow/1.7.8&quot;&gt;http://pypi.python.org/pypi/Pillow/1.7.8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;features&quot;&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s PIL (Python Imaging Library)&lt;/li&gt;
&lt;li&gt;It installs on all modern systems &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Win32 eggs are provided (special thanks to Takayuki Shimizukawa)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;changes&quot;&gt;
&lt;h2&gt;Changes&lt;/h2&gt;
&lt;p&gt;This release includes:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Removed doctests.py that made tests of other packages fail. [thomasdesvenain]&lt;/li&gt;
&lt;li&gt;Fix opening psd files with RGBA layers when A mode is not of type 65535 but 3. Fixes issue &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues/3&quot;&gt;https://github.com/python-imaging/Pillow/issues/3&lt;/a&gt; [thomasdesvenain]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;install&quot;&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;To install Pillow:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ easy_install Pillow
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install Pillow
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python setup.py install (inside the extracted zip)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install zc.buildout
$ buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;buildout.cfg&lt;/span&gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buildout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pillow&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pillow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;recipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recipe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;egg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ buildout
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(Note: easy_install &amp;amp; pip each handle namespace packages differently, so you should choose one or the other, and not mix the two.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;report-issues&quot;&gt;
&lt;h2&gt;Report issues&lt;/h2&gt;
&lt;p&gt;If you find an issue, please report it here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues&quot;&gt;https://github.com/python-imaging/Pillow/issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Better yet: please fork, fix, and submit a pull request. Please also solicit for peer review once the pull request has been submitted.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;discussion&quot;&gt;
&lt;h2&gt;Discussion&lt;/h2&gt;
&lt;p&gt;You may discuss issues related to PIL, Pillow, and Python imaging on the image-sig list:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://mail.python.org/mailman/listinfo/image-sig&quot;&gt;http://mail.python.org/mailman/listinfo/image-sig&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy using Pillow!&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;If it doesn&amp;#8217;t, please report it: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow/issues&quot;&gt;https://github.com/python-imaging/Pillow/issues&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Plone Secrets 5: The Community</title>
    <id>http://blog.aclark.net/2012/10/23/plone-secrets-episode-5-the-community/</id>
    <updated>2012-10-23T00:00:00Z</updated>
    <published>2012-10-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/23/plone-secrets-episode-5-the-community/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-secrets-5-the-community&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a non-technical post on the Plone community, why it&amp;#8217;s so great, how it functions, and some details that may help one understand it from the outside looking in (AKA The &amp;#8220;secrets&amp;#8221;)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;size-and-activity&quot;&gt;
&lt;h2&gt;Size and Activity&lt;/h2&gt;
&lt;p&gt;The Plone community is &lt;strong&gt;HUGE&lt;/strong&gt;. I don&amp;#8217;t have any numbers handy, but I&amp;#8217;m sure there is as much if not more activity going on in the Plone Community right now as there is in the White House &amp;#8220;reelection department&amp;#8221;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;structure&quot;&gt;
&lt;h2&gt;Structure&lt;/h2&gt;
&lt;p&gt;The Plone community consists (roughly) of Founders, Contributors, and Users. It has formalized itself into a &lt;strong&gt;501(c)(3) organization&lt;/strong&gt; with a corresponding board and membership. The board conducts business to &amp;#8220;protect and promote Plone&amp;#8221; on behalf of the community and the foundation members (but not necessarily board members) are all recognized contributors. Contributors control the speed and direction of the project. Some of the contributors are:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;teams&quot;&gt;
&lt;h3&gt;Teams&lt;/h3&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;strong&gt;The Framework Team&lt;/strong&gt; (arguably the most important team, next to the core developers themselves &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[0]&lt;/a&gt;.) Responsible for &amp;#8220;evaluating PLIPS for inclusion in Plone&amp;#8221;. PLIPS are &amp;#8220;Plone Improvement Proposals&amp;#8221; used to convey the message: &amp;#8220;I want to add this feature to (or remove from) Plone core and I, or the others listed here, will do the work.&amp;#8221;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Documentation Team&lt;/strong&gt; (arguably equally as important) Responsible for documenting the Plone software for developers and end users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The QA Team&lt;/strong&gt; (arguably… oh hell they&amp;#8217;re all important) Responsible for making sure the software is suitable for consumption by developers and end users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Marketing Team&lt;/strong&gt; Responsible for promoting Plone to prospective consumers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The AI Team&lt;/strong&gt; (Admin Infrastructure) &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; Responsible for maintaining software and systems infrastructure for the community.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Internationalization Team&lt;/strong&gt; Responsible for translating Plone&amp;#8217;s user interface text into multiple language.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security team&lt;/strong&gt; Responsible for addressing complex security issues with Plone core software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;And more…&lt;/strong&gt; I&amp;#8217;m sure I missed some teams, feel free to check out the entire list here: &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/team&quot;&gt;http://plone.org/team&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;factions&quot;&gt;
&lt;h3&gt;Factions&lt;/h3&gt;
&lt;p&gt;As is common in the world at large, the Plone community is comprised of various factions. From circles of friends, to the hundreds of Plone consulting firms, to the business sectors that embrace Plone (e.g. non-profits). These factions may never, in their lifetimes, interact with one another but they are critical to the success of Plone. (It would be a shame if they didn&amp;#8217;t, which is why we have the annual Plone Conference).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;individuals&quot;&gt;
&lt;h3&gt;Individuals&lt;/h3&gt;
&lt;p&gt;Finally, we have the noteworthy individuals of the project. These include the Founders, Board Presidents, Release Managers, Core Developers, and more. Most especially this includes &lt;strong&gt;YOU&lt;/strong&gt;. If you have contributed to the Plone project in any way large or small, your work is appreciated.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;greatness&quot;&gt;
&lt;h2&gt;Greatness&lt;/h2&gt;
&lt;p&gt;What&amp;#8217;s great is that it all works. I am struck by how much the Plone Community is a microcosm of the world. Especially during election time in the United States, I&amp;#8217;ve been thinking a lot about &amp;#8220;how the world works&amp;#8221; and I see the same patterns everywhere. Not everyone:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Enjoys the same activities&lt;/li&gt;
&lt;li&gt;Shares the same beliefs&lt;/li&gt;
&lt;li&gt;Likes the same people&lt;/li&gt;
&lt;li&gt;Has the same goals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But when you share a common goal e.g. Running a country, or a city, or a state, or business, or a community, or a project, you find ways to get along. Individuals work with other individuals, factions work with other factions, teams works with others teams, projects ship their product to the world. In this case, I&amp;#8217;m looking forward to the Plone project shipping its product to the world for the next 10 years or more.&lt;/p&gt;
&lt;p&gt;Good luck to us all!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Consider a&lt;/em&gt;&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
        src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
        width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&amp;lt;3&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[0]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I&amp;#8217;m not listing the core developers because there are over 100 of them and they don&amp;#8217;t formally meet as far as I know. But of course, without the Founders and Core Developers none of us would be here. So a very special thanks to them as well.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Term coined by Wyn Williams&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Django Hello</title>
    <id>http://blog.aclark.net/2012/10/23/django-hello/</id>
    <updated>2012-10-23T00:00:00Z</updated>
    <published>2012-10-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/23/django-hello/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;django-hello&quot;&gt;

&lt;p&gt;&lt;strong&gt;Django doesn&amp;#8217;t really need a hello world style introduction, its documentation speaks for itself.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;But this is what &amp;#8220;Hello, world!&amp;#8221; in Django looks like to me. I hate boilerplate and I love reducing software down to its core components; just enough to start the server.&lt;/p&gt;
&lt;p&gt;setup.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;requirements.txt:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Django==1.4.1
-e .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;settings.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;DEBUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ROOT_URLCONF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;urls.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf.urls&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;r&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello.views.index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;views.py:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Based on https://docs.djangoproject.com/en/1.4/topics/http/views/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This function takes a Django request object and returns a &amp;#39;Hello World&amp;#39;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    style response, by wrapping some HTML in a Django response object.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;It is now &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;installation&quot;&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;To install:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone this-repo
$ cd this-repo
$ virtualenv .
$ bin/pip install -r requirements.txt
$ bin/django-admin.py runserver --settings=hello.settings
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;The above code can be found here:&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/django-hello&quot;&gt;https://github.com/aclark4life/django-hello&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Consider a&lt;/em&gt;&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
        src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
        width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;p&gt;&amp;lt;3&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Why Split The Lists</title>
    <id>http://blog.aclark.net/2012/10/22/why-split-the-lists/</id>
    <updated>2012-10-22T00:00:00Z</updated>
    <published>2012-10-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/22/why-split-the-lists/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;why-split-the-lists&quot;&gt;

&lt;p&gt;&lt;strong&gt;The Plone community consists (roughly) of Founders, Contributors, and Users.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;background&quot;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;The Plone community consists (roughly) of Founders, Contributors, and Users. It has formalized itself into a 501(c)(3) software foundation with a corresponding board and membership. The board conducts business on behalf of the community and the board and foundation members are all recognized contributors. Both the board and the membership have their own private mailing list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issue&quot;&gt;
&lt;h2&gt;Issue&lt;/h2&gt;
&lt;p&gt;Over the years, issues have been raised on the membership list that have led to more discussion than all of the foundation membership are comfortable with. And some have expressed that concern (usually without addressing the orginal concern or &amp;#8220;topic&amp;#8221; of the thread).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;fix&quot;&gt;
&lt;h2&gt;Fix&lt;/h2&gt;
&lt;p&gt;While I am quite confident that folks can manage their own &lt;strong&gt;INBOXES&lt;/strong&gt; (or should be able to), I&amp;#8217;m not confident that folks (myself included) can resist engaging with others over issues like:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The &amp;#8220;religious&amp;#8221; aspect (The Plone community is better than this!)&lt;/li&gt;
&lt;li&gt;The practical aspect (Everyone can just control themselves!)&lt;/li&gt;
&lt;li&gt;The miscommunication (You are obviously &amp;#8220;wrong&amp;#8221; about XYZ which I won&amp;#8217;t address but rather suggest you stop!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To me, the fix is simple. Do the most practical thing and split the lists into: Membership-announce and Membership-discuss (note: discussions with the board list are a different matter.) This says nothing about the health of the community (which is strong), it just means: announce is for important information like &amp;#8220;please renew your foundation membership&amp;#8221; and discuss is for hashing out issues that foundation members care about.&lt;/p&gt;
&lt;p&gt;As someone who volunteers to help maintain the lists for the community, I don&amp;#8217;t take this suggestion lightly but I think it&amp;#8217;s the right thing to do to move forward and make the most number of people happy. That said, if a vote decides otherwise I am OK with that, but I&amp;#8217;ll be curbing the amount of discussion I would actually like to do on the membership list.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Review of Aspeli's Professional Plone 4 Development</title>
    <id>http://blog.aclark.net/2012/10/20/review-of-aspeli-plone-4-development/</id>
    <updated>2012-10-20T00:00:00Z</updated>
    <published>2012-10-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/20/review-of-aspeli-plone-4-development/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;review-of-aspeli-s-professional-plone-4-development&quot;&gt;

&lt;p&gt;&lt;strong&gt;I owe PACKT a review of this book, so here it is.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First: I liked it. Second: I appreciate Aspeli writing it. Third: Like many others, I couldn&amp;#8217;t wait for it to come out. Fourth: I know that it was a &lt;strong&gt;TON OF WORK&lt;/strong&gt; and &lt;strong&gt;PROBABLY NOT WORTH THE MONEY&lt;/strong&gt; to write it. So why write a Plone book? A few reasons (other than money):&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It&amp;#8217;s good for you&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s good for the community&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s good for Plone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So if you care about Plone: please go buy both an electronic and paper version of this book &lt;strong&gt;RIGHT NOW&lt;/strong&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id5&quot; id=&quot;id1&quot;&gt;[0]&lt;/a&gt;. While you are at it, please pick up a copy of &lt;strong&gt;Plone 3.3 Site Administration&lt;/strong&gt;. It&amp;#8217;s quite good, and I hear the author is a &lt;strong&gt;swell guy&lt;/strong&gt; who would appreciate your generosity &lt;a class=&quot;footnote-reference&quot; href=&quot;#id6&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id7&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-i-like&quot;&gt;
&lt;h2&gt;What I like&lt;/h2&gt;
&lt;p&gt;First let me cover what I &lt;strong&gt;ABSOLUTELY LOVE&lt;/strong&gt; about this book.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;buildout-eggs&quot;&gt;
&lt;h3&gt;buildout:eggs&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/buildout.png&quot; /&gt;
&lt;p&gt;Aspeli correctly addresses one of my biggest pet peeves (concerns) about what I believe to be an &lt;strong&gt;ANTI-PATTERN&lt;/strong&gt; in almost every Plone buildout: buildout:eggs (referring to the eggs parameter of the buildout section; it does not exist, other than as a convenient variable setting).&lt;/p&gt;
&lt;p&gt;If you know me, you know I&amp;#8217;ve spoken about this before and whilst I&amp;#8217;ve moved on from harping on it I will say this: with most software that uses ini-style configuration files when you set a parameter you expect something to happen. But since Buildout is more complicated than the average software that uses ini-style configuration, that expectation is not always met.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-ons&quot;&gt;
&lt;h3&gt;Add-ons&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;image://raw.github.com/ACLARKNET/blog/gh-pages/images/addons.png&quot; /&gt;
&lt;p&gt;Did you see? You might have missed it. No mention of &lt;strong&gt;Products&lt;/strong&gt; WHAT-SO-EVER. &amp;#8220;Product&amp;#8221; was a term that Zope2 used for Python libraries that enhanced the functionality of Zope2, and it stuck. Now, it should die in favor of a term everyone else in the world is familiar with (in this context): add-on. Well played, Aspeli. Well played.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-review&quot;&gt;
&lt;h2&gt;The Review&lt;/h2&gt;
&lt;p&gt;I will now talk about each chapter briefly. This will be TL;DR-style, but I hope you&amp;#8217;ll get a nice idea for why this book is so great. Every imaginable detail for each section is covered in the book in painstaking detail by Aspeli. If you have any questions, please don&amp;#8217;t hesitate to ask them in the comments.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-1-plone-in-context&quot;&gt;
&lt;h3&gt;Chapter 1: Plone in Context&lt;/h3&gt;
&lt;p&gt;In which we learn what, why &amp;amp; when Plone is, plus a bit more. My favorite sub-section is: Plone-the-application and Plone-the-framework, in which Aspeli describes the phenomenon of Plone the application being used by some folks as a generic Python web framework. Plone&amp;#8217;s strengh and indeed its raison d&amp;#8217;etre (reason to exist) is to provide a fully-featured CMS web application suitable for immediate use, or use immediately after a few simple customizations. So if you try to use it as a web framework, you may not get exactly what you expect (because it was not designed to be used that way).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-2-introduction-to-the-case-study&quot;&gt;
&lt;h3&gt;Chapter 2: Introduction to the Case Study&lt;/h3&gt;
&lt;p&gt;In which we learn how a professional may execute a typical website project with Plone. This is a nice little chapter with some great details about the fictional project that will be executed throughout the remainder of the book: requirements, mockups, and information architecture are the highlights here; as well as the necessary CMS details like users, groups, and content types.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-3-the-development-environment&quot;&gt;
&lt;h3&gt;Chapter 3: The Development Environment&lt;/h3&gt;
&lt;p&gt;In which we learn about how to setup an environment in which you can customize Plone to suit your needs. TL;DR: fairly typical Python development environment &lt;a class=&quot;footnote-reference&quot; href=&quot;#id8&quot; id=&quot;id4&quot;&gt;[3]&lt;/a&gt; with additional Plone details covered: Buildout recipes, development libraries, and more.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-4-basics-of-customization&quot;&gt;
&lt;h3&gt;Chapter 4: Basics of Customization&lt;/h3&gt;
&lt;p&gt;In which we learn about the technical architecture of Plone: ZODB, GenericSetup, Zope2 CMF, Zope Component Architecture, and more (!). And the best way to implement your requirements within that architecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-5-developing-a-site-strategy&quot;&gt;
&lt;h3&gt;Chapter 5: Developing a Site Strategy&lt;/h3&gt;
&lt;p&gt;In which we learn about how to bundle your customizations into a Python package for general use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-6-security-and-workflow&quot;&gt;
&lt;h3&gt;Chapter 6: Security and Workflow&lt;/h3&gt;
&lt;p&gt;In which we learn about how Plone implements generic web application features and how you can customize that implementation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-7-using-add-ons&quot;&gt;
&lt;h3&gt;Chapter 7: Using Add-ons&lt;/h3&gt;
&lt;p&gt;In which we learn about how to add additional Python libraries to Plone to provide additional features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-8-creating-a-custom-theme&quot;&gt;
&lt;h3&gt;Chapter 8: Creating a Custom Theme&lt;/h3&gt;
&lt;p&gt;In which we learn about Plone&amp;#8217;s new theming engine: Diazo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-9-nine-core-concepts-of-zope-programming&quot;&gt;
&lt;h3&gt;Chapter 9: Nine Core Concepts of Zope Programming&lt;/h3&gt;
&lt;p&gt;In which learn a bit more about the technical architecture of Plone. If you love this chapter (as many do), you might also enjoy: &lt;a class=&quot;reference external&quot; href=&quot;http://developer.plone.org/reference_manuals/old/zope_secrets/index.html&quot;&gt;http://developer.plone.org/reference_manuals/old/zope_secrets/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-10-custom-content-types&quot;&gt;
&lt;h3&gt;Chapter 10: Custom Content Types&lt;/h3&gt;
&lt;p&gt;In which we learn about Plone&amp;#8217;s new content type framework: Dexterity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-11-standalone-views-and-forms&quot;&gt;
&lt;h3&gt;Chapter 11: Standalone Views and Forms&lt;/h3&gt;
&lt;p&gt;In which we learn about a topic that would be first, if Plone were a generic website framework: how to build forms.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-12-relational-databases&quot;&gt;
&lt;h3&gt;Chapter 12: Relational Databases&lt;/h3&gt;
&lt;p&gt;In which we learn about how to integrate a relational database into your CMS application. Since Plone relies heavily on the ZODB, none is included by default.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-13-users-and-their-permissions&quot;&gt;
&lt;h3&gt;Chapter 13: Users and their Permissions&lt;/h3&gt;
&lt;p&gt;In which we learn about another topic that would be covered first if Plone were a generic website framework: authentication and authorization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-14-dynamic-user-interfaces-with-jquery&quot;&gt;
&lt;h3&gt;Chapter 14: Dynamic User Interfaces with jQuery&lt;/h3&gt;
&lt;p&gt;In which we learn about using jQuery in Plone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;chapter-15-summary-and-potential-enhancements&quot;&gt;
&lt;h3&gt;Chapter 15: Summary and Potential Enhancements&lt;/h3&gt;
&lt;p&gt;In which we learn about next steps. You&amp;#8217;ve just built and delivered a CMS application for your client. What will they ask you for next? And how will you implement it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope you have enjoyed this review; and I hope you&amp;#8217;ll consider purchasing a copy of Aspeli&amp;#8217;s book for your next Plone project.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like this article? Consider a&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip&lt;/a&gt;. &lt;em&gt;You may also want to follow me on&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id5&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[0]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Disclaimer: I was given a copy of both versions in exchange for this review.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id6&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Seriously though, whilst PACKT literally forces you to include a software version number in your title, &lt;strong&gt;Plone 3.3 Site Administration&lt;/strong&gt; is still relevant to today&amp;#8217;s Plone. I expect it will be relevant through at least Plone 5.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id7&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The financial details of (at least) my contract for writing a book with PACKT &lt;strong&gt;CLEARLY FAVORED PACKT&lt;/strong&gt;. That said, I think they are a great organization and I am proud to be a PACKT author. But according to my statements, I still need to earn about $1K more in royalties before I have paid back my advance. Notice what I just said there: &lt;strong&gt;earn in royalties&lt;/strong&gt; i.e. I have to sell enough books in order to get PACKT to pay out enough money to meet the terms of the contract. I won&amp;#8217;t pretend to have any idea why PACKT does what it does with its contracts, except to say that I assume they expect to make money. I&amp;#8217;ll also assume everything is on the up and up. But unfortunately sometimes the &amp;#8220;up and up&amp;#8221; can look like this: &lt;a class=&quot;reference external&quot; href=&quot;http://www.techdirt.com/articles/20121018/01054720744/hollywood-accounting-how-19-million-movie-makes-150-million-still-isnt-profitable.shtml&quot;&gt;http://www.techdirt.com/articles/20121018/01054720744/hollywood-accounting-how-19-million-movie-makes-150-million-still-isnt-profitable.shtml&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id8&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Plone&lt;/span&gt;&lt;/code&gt; support may be available soon which may blow the lid off the Python popularity shack (raise the level of interest from generic Python developers interested in Python CMS applications).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Mailing List Etiquette</title>
    <id>http://blog.aclark.net/2012/10/20/mailing-list-etiquette/</id>
    <updated>2012-10-20T00:00:00Z</updated>
    <published>2012-10-20T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/20/mailing-list-etiquette/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;mailing-list-etiquette&quot;&gt;

&lt;p&gt;&lt;strong&gt;I read a lot of mailing lists.&lt;/strong&gt;&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/unison.png&quot; /&gt;
&lt;p&gt;Also, I&amp;#8217;ve been subscribing to, reading, and participating in discussions on mailing lists since about the time Mailman 1.0 was released circa 1999 &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. And I have fond memories of interacting administratively with MajorDomo and ListServ software. And by administratively, I mean sending the software commands and getting back a response. In fact, you might say I get along better with the software and machines than I do with the humans that use them. Which is not to say that I&amp;#8217;m not a people person: I love people. But I do struggle with striking the right balance between hacking machines and communicating with humans.&lt;/p&gt;
&lt;p&gt;Anyway, as you can imagine: I have &lt;strong&gt;VERY STRONG OPINIONS&lt;/strong&gt; about how folks should conduct themselves on mailing lists: call it a code of conduct. And regardless of what you might expect from a self-described &amp;#8220;hack&amp;#8221;: I work &lt;strong&gt;VERY HARD&lt;/strong&gt; to enforce that code of conduct on my own behavior. Do I occasionally step outside the lines? Of course. But make no mistake: I do not communicate in a vacuum. You can be as polite and courteous as The Pope and &lt;strong&gt;STILL GET THE SMACKDOWN&lt;/strong&gt; through no fault of your own. Why? Because humans make mistakes. Context gets lost. Do you think you know what&amp;#8217;s going on enough to make a comment? You might be wrong &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&amp;#8220;The single biggest problem in communication is the illusion that it has taken place.&amp;#8221;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;—  George Bernard Shaw quotes (Irish literary Critic, Playwright and Essayist. 1925 Nobel Prize for Literature, 1856-1950)&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;div class=&quot;section&quot; id=&quot;netiquette&quot;&gt;
&lt;h2&gt;Netiquette&lt;/h2&gt;
&lt;p&gt;So what is a human to do? Well, guess what! There&amp;#8217;s actually a set of rules or, code of conduct, for humans to follow. Someone wrote it all down. And it&amp;#8217;s commonly referred to today as &amp;#8220;netiquette&amp;#8221;. A quick glance at &lt;a class=&quot;reference external&quot; href=&quot;http://www.albion.com/netiquette/corerules.html&quot;&gt;The Core Rules of Netiquette&lt;/a&gt; and you&amp;#8217;ll be well on your way to being a better electronic human than you were the day before. I say this as someone familiar with netiquette, but not as someone who has actually studied up on the concepts recently. One of my favorites:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;From Rule #1: Remember The Human:&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;&amp;#8220;When you&amp;#8217;re holding a conversation online &amp;#8211; whether it&amp;#8217;s an email exchange or a response to a discussion group posting &amp;#8211; it&amp;#8217;s easy to misinterpret your correspondent&amp;#8217;s meaning. And it&amp;#8217;s frighteningly easy to forget that your correspondent is a person with feelings more or less like your own.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s ironic, really. Computer networks bring people together who&amp;#8217;d otherwise never meet. But the impersonality of the medium changes that meeting to something less &amp;#8211; well, less personal. Humans exchanging email often behave the way some people behind the wheel of a car do: They curse at other drivers, make obscene gestures, and generally behave like savages. Most of them would never act that way at work or at home. But the interposition of the machine seems to make it acceptable.&lt;/p&gt;
&lt;p&gt;The message of Netiquette is that it&amp;#8217;s not acceptable. Yes, use your network connections to express yourself freely, explore strange new worlds, and boldly go where you&amp;#8217;ve never gone before. But remember the Prime Directive of Netiquette: Those are real people out there.&lt;/p&gt;
&lt;p&gt;Would you say it to the person&amp;#8217;s face?&lt;/p&gt;
&lt;p&gt;Writer and Macintosh evangelist Guy Kawasaki tells a story about getting email from some fellow he&amp;#8217;s never met. Online, this fellow tells Guy that he&amp;#8217;s a bad writer with nothing interesting to say.&lt;/p&gt;
&lt;p&gt;Unbelievably rude? Yes, but unfortunately, it happens all the time in cyberspace.&amp;#8221;&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;One belief that I&amp;#8217;ve held for almost as long as I have been communicating electronically is: &lt;strong&gt;IF I SAY SOMETHING ELECTRONICALLY I PROBABLY MEAN IT&lt;/strong&gt;. That means you can expect to hear the same information from me in person, as you would in an email or other electronic corresponence. That also means that I rarely look back and &lt;strong&gt;CRINGE&lt;/strong&gt; and think to myself: &amp;#8220;Oh my gosh I can&amp;#8217;t believe I wrote that.&amp;#8221; Do I make mistakes? Of course. But less and less as I get older and older. More frequently than not, I stand 100% behind my electronic correspondence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;is-netiquette-enough&quot;&gt;
&lt;h2&gt;Is netiquette enough?&lt;/h2&gt;
&lt;p&gt;Netiquette covers almost everything you can think of. From trying to be sensitive to the context of the list (RULE #3 and #4) to helping guide the discussion the right way (RULE #7) to giving everyone the benefit of the doubt all the time (RULE #10).&lt;/p&gt;
&lt;p&gt;Still, sometimes &lt;strong&gt;CRAZY THINGS HAPPEN&lt;/strong&gt; like someone forgets to mail the list directly and the direction of the membership &amp;#8220;forks&amp;#8221;. Follow &lt;a class=&quot;reference external&quot; href=&quot;http://lists.plone.org/pipermail/plone-com/Week-of-Mon-20120903/000039.html&quot;&gt;this thread&lt;/a&gt; to see me both issue a &lt;strong&gt;SMACKDOWN&lt;/strong&gt; then &lt;strong&gt;APOLOGIZE&lt;/strong&gt; when I realized I&amp;#8217;d acted upon information only I and one other person was privy to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;policy-makes-perfect&quot;&gt;
&lt;h2&gt;Policy makes perfect&lt;/h2&gt;
&lt;p&gt;Sometimes, people will pop on to a list and say &amp;#8220;Is this the right place to ask about XYZ?&amp;#8221; Other times, they&amp;#8217;ll just ask it: &amp;#8220;I have an XYZ that I&amp;#8217;m looking to sell…&amp;#8221; If the primary topic of the list is &amp;#8220;ABC&amp;#8221; and if the popping in happens frequently enough, you may want to define a policy e.g. my non-profit organization DC Python has a &lt;a class=&quot;reference external&quot; href=&quot;http://dcpython.org/#job-postings&quot;&gt;policy for job postings&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&amp;#8220;DC Python helps Python programmers get jobs. We allow job postings on our meetup.dcpython.org mailing list provided the following criteria are met:&lt;/p&gt;
&lt;p&gt;You are posting for a Python job in Washington, DC or the surrounding metro area — please don&amp;#8217;t try to recruit PHP or Ruby or .NET developers here, and please don&amp;#8217;t try to recruit for other cities.&lt;/p&gt;
&lt;p&gt;You will put [JOB] in the subject line of the email and include a description of the job (including duties and location) in the body of the email.&lt;/p&gt;
&lt;p&gt;You are an active member of DC Python or you are willing to contribute financially either through a sponsorship or by providing food/drink at one of our meetings.&amp;#8221;&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;That way whenever someone posts to the list or emails me personally about job postings, I can point them to the link:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://dcpython.org/#job-postings&quot;&gt;http://dcpython.org/#job-postings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pointing them at netiquette may help too, but that would require them to read through the archives to discover things like &amp;#8220;Wow, that recruiter got the smackdown when they identified themselves as a recruiter.&amp;#8221; So, a policy of netiquette plus an additional set of rules can go along way toward making communication better for everyone involved.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like this article? Consider a&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip&lt;/a&gt;. &lt;em&gt;You may also&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;follow me on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://mail.python.org/pipermail/mailman-announce/1999-July/000004.html&quot;&gt;http://mail.python.org/pipermail/mailman-announce/1999-July/000004.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://thinkexist.com/quotation/the_single_biggest_problem_in_communication_is/155222.html&quot;&gt;http://thinkexist.com/quotation/the_single_biggest_problem_in_communication_is/155222.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Gittip, Misunderstood</title>
    <id>http://blog.aclark.net/2012/10/19/gittip-misundood/</id>
    <updated>2012-10-19T00:00:00Z</updated>
    <published>2012-10-19T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/19/gittip-misundood/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;gittip-misunderstood&quot;&gt;

&lt;p&gt;&lt;strong&gt;People do not understand gittip. Or, they do not understand how I use it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Worse, they &lt;strong&gt;think&lt;/strong&gt; they understand it &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. So much so, some choose to comment about it publicly.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/condescend.jpg&quot; /&gt;
&lt;p&gt;Remember &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/gittip-is-the-future.html&quot;&gt;gittip is the future&lt;/a&gt;? Someone commented:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;&amp;#8220;Nobody likes a beggar.&amp;#8221;&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;— &lt;a class=&quot;reference external&quot; href=&quot;mailto:fuckoff&amp;#37;&amp;#52;&amp;#48;dfgd&amp;#46;com&quot;&gt;fuckoff&lt;span&gt;&amp;#64;&lt;/span&gt;dfgd&lt;span&gt;&amp;#46;&lt;/span&gt;com&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Really? Well, I have to agree. I &lt;strong&gt;don&amp;#8217;t like seeing panhandlers&lt;/strong&gt; on the street. But I&amp;#8217;d never yell &amp;#8220;Nobody likes a beggar!&amp;#8221; at them. Why? Because: I don&amp;#8217;t care what they do. Does their presence sometimes annoy me? Sure, because I have to read the sign. And then I have to nod, like &amp;#8220;What&amp;#8217;s up&amp;#8221; and &amp;#8220;Nah, sorry&amp;#8221; at the same time (an acquired skill).&lt;/p&gt;
&lt;p&gt;But that is not what bothers me the most about my friend &amp;#64;dfgd.com&amp;#8217;s comment. What bothers me the most is: I don&amp;#8217;t claim to know or understand why people do what they do. And short of a loitering law being broken somewhere, I think they have every right to do it (as long as they are not harming me or others). I&amp;#8217;d even like to see a pandhandler use Square to accept payments. It sounds ridiculous, but I&amp;#8217;d actually pay a panhandler that was accepting credit cards (I have no idea why this amuses me, but it does; of course, you may think twice about what is happening when they swipe but could a panhandler really figure out how to…&amp;nbsp;I digress, back to the story.)&lt;/p&gt;
&lt;p&gt;Anyway, pro tip: &lt;strong&gt;the people who use gittip are not begging&lt;/strong&gt;. Some (most?) never ask for a dime. I choose to promote my gittip link and I am now going to tell you why, so if anyone ever asks? Or condescends? Here it is:&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;i-like-the-project&quot;&gt;
&lt;h2&gt;I like the project&lt;/h2&gt;
&lt;p&gt;I like what Chad Whitacre is doing. I think it&amp;#8217;s a cool idea. I want to do everything I can to help him promote his service. I also like that people I know and like are being gittip&amp;#8217;ed. It gives me a warm fuzzy inside. Hell, the entire &amp;#8220;top 10&amp;#8221; gives me a warm fuzzy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;i-like-money&quot;&gt;
&lt;h2&gt;I like money&lt;/h2&gt;
&lt;p&gt;I have a funny story I like tell to… well, to you, now: I&amp;#8217;ve done AdSense in the past. For YEARS. One time one of my blog entries got about 40+ upvotes on Hacker News and my revenue went up as quickly as it ever had. This, after years of adsensing, tipped the scales to… YUP, you guessed it! $100. I got my check, and a copy of it is sitting nearby ready for framing. Was that the hardest $100 I ever made? Probably. But it felt damn good to make it. Similarly, with $2 per week in support, I stand to make another $100 much quicker than I ever did with AdSense. This, my friends, is progress. It may not seem like much to random people on the internet. In fact, it may even be laughable, disgusting, or any number of things to other people. But guess what: it&amp;#8217;s none of their business.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;money-is-not-my-boss&quot;&gt;
&lt;h2&gt;Money is not my boss&lt;/h2&gt;
&lt;p&gt;Some people go &lt;strong&gt;APE SHIT&lt;/strong&gt; and get &lt;strong&gt;REALLY UNCOMFORTABLE&lt;/strong&gt; in certain situations involving money. I am not one of them. Are you concerned that I&amp;#8217;m not volunteering enough and getting paid too much? Don&amp;#8217;t be. I assure you, I can figure it out. If you have any questions, just ask me: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;. Are you concerned that because I get paid, someone else may get the wrong impression about volunteering and why do some people get paid and some don&amp;#8217;t and don&amp;#8217;t you worry this may give the wrong…? No. I trust that if someone wants to volunteer, that&amp;#8217;s exactly what they are going to do.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;i-have-vision&quot;&gt;
&lt;h2&gt;I have vision&lt;/h2&gt;
&lt;p&gt;I picture any number of scenarios with gittip. Here are some:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Do you like that I&amp;#8217;ve spent years pouring my heart and soul into the Plone software and community, and perhaps, made your life better in some small way? Gittip me.&lt;/li&gt;
&lt;li&gt;Did you notice I forked the Python Imaging Library so that thousands of people could have a working PIL release? Gittip me.&lt;/li&gt;
&lt;li&gt;Did you also notice the new zc.buildout release that&amp;#8217;s much faster than the old release? Gittip me. (And a few others too, most especially: iElectric and zenwryly… you could also gittip Jim Fulton too, I guess).&lt;/li&gt;
&lt;li&gt;Do you want me to handle your Python package releases on a regular basis for you, but you don&amp;#8217;t want to sign a contract with my consulting business or use pythonpackages.com? Gittip me.&lt;/li&gt;
&lt;li&gt;Do you want me to handle some other task on a regular basis, but you don&amp;#8217;t want to sign a contract with my consulting business? Gittip me.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you aware of all those things and don&amp;#8217;t want to gittip me? That&amp;#8217;s fine too. I&amp;#8217;m not entirely sure I&amp;#8217;m making myself clear, but I will leave you with this: I will always donate my time freely to good causes, especially those near and dear to my heart. My non-profit organization DC Python has been working with the PyLadies to teach &amp;#8220;Introduction to Python Classes&amp;#8221; in DC. And I&amp;#8217;m so grateful, because I want to grow the organization (as big as Mozilla?) and I need all the help I can get. But, I need to make a living too. And this is precisely where, as the old saying goes: &amp;#8220;the rubber meets the road&amp;#8221;.&lt;/p&gt;
&lt;p&gt;I (like so many others before me and along with me in the Plone, Python, and Mozilla communities) have become an entrepreneur. In addition to thinking about &amp;#8220;what consulting projects am I going to work to pay my bills&amp;#8221;, I like thinking about &amp;#8220;what services can I build to pay my bills&amp;#8221;. And I&amp;#8217;m so lucky I get the chance to do it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You know what to do or not to do because you have just read this article:&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;http://gittip.com/aclark4life&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You may also want to follow me on Twitter:&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.com/aclark4life&quot;&gt;http://twitter.com/aclark4life&lt;/a&gt;&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blogs.hbr.org/ashkenas/2011/02/your-communications-may-not-be.html&quot;&gt;http://blogs.hbr.org/ashkenas/2011/02/your-communications-may-not-be.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Why I Criticize The Plone Foundation Board</title>
    <id>http://blog.aclark.net/2012/10/17/why-i-criticize-the-plone-foundation-board/</id>
    <updated>2012-10-17T00:00:00Z</updated>
    <published>2012-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/17/why-i-criticize-the-plone-foundation-board/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;why-i-criticize-the-plone-foundation-board&quot;&gt;

&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/aclark-conf.jpg&quot; /&gt;
&lt;p&gt;&lt;strong&gt;TL;DR: Because I care.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As some of you can probably relate to, I&amp;#8217;ve had my fair share of disagreements with the Plone Foundation Board over the years. The good news is, for the most part, it (just like the community) is staffed with &lt;strong&gt;very reasonable people&lt;/strong&gt; who if you push them on an issue, will acknowledge that there are always competing viewpoints to any issue you can think of.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;the-fallacy-of-false-cause&quot;&gt;
&lt;h2&gt;The Fallacy Of False Cause&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I don&amp;#8217;t like what you have to say, therefore you must be quiet.&lt;/em&gt; &lt;strong&gt;Not necessarily. You may choose not to listen.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As long as you are polite, respectful, and on topic: you can have a civil discussion with almost any human individual or group in today&amp;#8217;s world. The challenge is in &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2012/10/17/top-3-favorite-logical-fallacies/&quot;&gt;sticking to those criteria&lt;/a&gt;. Conversations often become heated and stray outside of respectful lines, because we are human.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;issues&quot;&gt;
&lt;h2&gt;Issues&lt;/h2&gt;
&lt;p&gt;From the famous (?) pricing scrap of 2010 (i wanted a more expensive server with VM capability, they didn&amp;#8217;t) to various financially sensitive issues: i.e. I occasionally want to be financially compensated as a &amp;#8220;volunteer&amp;#8221;. And while the Board does compensate volunteers in many ways, they frequently don&amp;#8217;t agree with the ways I&amp;#8217;ve suggested. And who could forget &lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/2008&quot;&gt;Plone Conference 2008&lt;/a&gt;? This was the first year that the Foundation received a percentage of the ticket sales. Now if I recall correctly there were certainly some heated debates, but none were too taxing or unreasonable (unless you count the ones we collectively had with The Ronald Reagan Building ;-)).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;success&quot;&gt;
&lt;h2&gt;Success&lt;/h2&gt;
&lt;p&gt;Plone&amp;#8217;s success &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; is my success and vice versa. I do a lot of different things in life, so I&amp;#8217;m not going to say that Plone must succeed for me to succeed. But I must succeed, and if I can help Plone succeed too, I&amp;#8217;m going to do everything within my power to make it happen. Let me be clear: Plone does not need me to be successful. But if you&amp;#8217;ve seen the &amp;#8220;Plone: I wish I could quit you.&amp;#8221; T-Shirt by Tarek Ziadé (shown above), you may know why I keep struggling to make Plone as good as it can be, albeit by my excessively high and overly strict (but not unrealistic) standards; which some, I am sure, do not like.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;conclusion&quot;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I hope, after reading this, you may have some better idea of who I am and why I do what I do. I&amp;#8217;ve made a commitment in my life to open source software, helping people, and being the best human I can be. I hope you will join me in my quest. If not, at the very least I hope you will respect my right to undertake it. If you have any questions or concerns, please do not hesitate to contact me to express them. Either in the comments below, or here: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s to you, Plone. And to the next 10 years of success.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Success means different things to different people.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Top 3 Favorite Logical Fallacies</title>
    <id>http://blog.aclark.net/2012/10/17/top-3-favorite-logical-fallacies/</id>
    <updated>2012-10-17T00:00:00Z</updated>
    <published>2012-10-17T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/17/top-3-favorite-logical-fallacies/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;top-3-favorite-logical-fallacies&quot;&gt;

&lt;img alt=&quot;Y U NO AGREE&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/y-u-no-agree.jpg&quot; /&gt;
&lt;p&gt;&lt;strong&gt;I love to debate issues.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The more complex, the better. I have no formal training in &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Debate&quot;&gt;debate&lt;/a&gt;, but I wish I did. It may have better prepared me to face different personality types with varying degree of communication skill. You don&amp;#8217;t have to watch the 2012 U.S. Presidential Debates to know that people will say things that are &lt;strong&gt;BATSHIT CRAZY&lt;/strong&gt; to make their point. I&amp;#8217;ve done it myself. That&amp;#8217;s one of the reasons we need rules to formalize our discussions: because it&amp;#8217;s hard to stay on point.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;fallacy&quot;&gt;
&lt;h2&gt;Fallacy&lt;/h2&gt;
&lt;p&gt;In the course of debate, you may encounter a &lt;a class=&quot;reference external&quot; href=&quot;http://en.wikipedia.org/wiki/Fallacy&quot;&gt;fallacy&lt;/a&gt; or &amp;#8220;faulty reasoning&amp;#8221;. Discussion of fallacy is my favorite part of debate. So without further ado, my top 3 &amp;#8220;favorite&amp;#8221; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id6&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; logical fallacies; of all those I&amp;#8217;ve encountered since I begun to debate in electronic form in the mid-1990s. &lt;em&gt;Disclaimer: I have been on both sides of all three, I&amp;#8217;m human. My goal in writing this blog entry is to facilitate better conversations within the communities I care about: Mozilla, Python, and Plone.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;you-will-regret-your-comments&quot;&gt;
&lt;h3&gt;1. &amp;#8220;You will regret your comments!&amp;#8221;&lt;/h3&gt;
&lt;p&gt;This may be true, but it&amp;#8217;s probably not the point. And it&amp;#8217;s probably better to stay on topic then it is to stray into personal attacks, or what you may feel is &amp;#8220;helping&amp;#8221; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id7&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; the other person.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;you-are-out-of-line&quot;&gt;
&lt;h3&gt;2. &amp;#8220;You are out of line!&amp;#8221;&lt;/h3&gt;
&lt;p&gt;This may be true too, but it may take both sides to acknowledge the lines. When discussing a point, even though it&amp;#8217;s tempting to cry foul, it&amp;#8217;s probably better to stay on point. Sometimes you need a break, in which case it&amp;#8217;s OK to say &amp;#8220;let&amp;#8217;s take a break and pick this up again later&amp;#8221; &lt;a class=&quot;footnote-reference&quot; href=&quot;#id8&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;you-are-wrong&quot;&gt;
&lt;h3&gt;3. &amp;#8220;You are wrong!&amp;#8221;&lt;/h3&gt;
&lt;p&gt;Perhaps. But it is likely that you may never agree with your debate counterparts. It&amp;#8217;s much better to focus on the core issues, and how you can compromise, then it is to focus attention on what is &amp;#8220;right&amp;#8221; and &amp;#8220;wrong&amp;#8221; (and who is right and wrong) &lt;a class=&quot;footnote-reference&quot; href=&quot;#id9&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;final-thoughts&quot;&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;It feels great to get those out. If anyone reading this has formal training in debate, I would love to hear your comments. Either below, or: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Like this blog entry? Consider supporting me on&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;gittip&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id6&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I say &amp;#8220;favorite&amp;#8221; because these fallacies have crystallized in my brain over the years to the point where I feel I can categorize and discuss them.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id7&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I say &amp;#8220;helping&amp;#8221; because it&amp;#8217;s probably hurting the intended recipient (whether it&amp;#8217;s true or not). Sorry, it&amp;#8217;s not up to you to decide whether or not someone else will regret their comments.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id8&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I am married. And there is no better place in the world, than within the institution of marriage, to learn how to debate.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id9&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id4&quot;&gt;[4]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;There may be no tangible right or wrong, just preference. Discuss your preferences, then what you need from the other side to be happy. Then ask the other side to do the same.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Hello, Django</title>
    <id>http://blog.aclark.net/2012/10/15/django-test/</id>
    <updated>2012-10-15T00:00:00Z</updated>
    <published>2012-10-15T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/15/django-test/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-django&quot;&gt;

&lt;p&gt;&lt;strong&gt;This is a test post to create a Django tag feed.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;test-post&quot;&gt;
&lt;h2&gt;Test post&lt;/h2&gt;
&lt;p&gt;Hello, Django planet!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Looking For Projects</title>
    <id>http://blog.aclark.net/2012/10/04/looking-for-projects/</id>
    <updated>2012-10-04T00:00:00Z</updated>
    <published>2012-10-04T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/04/looking-for-projects/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;looking-for-projects&quot;&gt;

&lt;img alt=&quot;I don't always work, but when I do I prefer to use Python.&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/use_python.jpg&quot; /&gt;
&lt;p&gt;&lt;strong&gt;With pythonpackages.com winding down, I am now actively seeking projects for Q4 2012 and beyond.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I am good at:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Deploying Plone sites: &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/&quot;&gt;http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Maintaining and releasing Python packages: &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=aclark&amp;amp;submit=search&quot;&gt;http://pypi.python.org/pypi?%3Aaction=search&amp;amp;term=aclark&amp;amp;submit=search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cat herding volunteers: &lt;a class=&quot;reference external&quot; href=&quot;http://lists.plone.org/pipermail/plone-com/Week-of-Mon-20120903/000039.html&quot;&gt;http://lists.plone.org/pipermail/plone-com/Week-of-Mon-20120903/000039.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing documentation: &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/index.html&quot;&gt;http://docs.pythonpackages.com/en/latest/index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing narrative text: &lt;a class=&quot;reference external&quot; href=&quot;http://www.packtpub.com/plone-33-site-administration/book&quot;&gt;http://www.packtpub.com/plone-33-site-administration/book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing Python code: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life&quot;&gt;https://github.com/aclark4life&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, I&amp;#8217;ve put together a list of projects I am involved in (or have been involved in): &lt;a class=&quot;reference external&quot; href=&quot;http://resume.aclark.net/projects/&quot;&gt;http://resume.aclark.net/projects/&lt;/a&gt;, and please feel free to check out my résumé: &lt;a class=&quot;reference external&quot; href=&quot;http://resume.aclark.net/&quot;&gt;http://resume.aclark.net/&lt;/a&gt;. If you&amp;#8217;d like to discuss how I can help you or your team, please get in touch: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Plone 4-3 Alpha 1 In Production</title>
    <id>http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/</id>
    <updated>2012-10-03T00:00:00Z</updated>
    <published>2012-10-03T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/10/03/plone-4-3-alpha-1-in-production/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;plone-4-3-alpha-1-in-production&quot;&gt;

&lt;p&gt;&lt;strong&gt;I love upgrading Plone. Given the choice between an afternoon in the sun and upgrading Plone… OK I&amp;#8217;d probably pick the sun, but it&amp;#8217;d be close.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;always-upgrading&quot;&gt;
&lt;h2&gt;Always upgrading?&lt;/h2&gt;
&lt;p&gt;I would love to see the trend of continuous integration make its way all the way to deployment, so that one day our Plone sites are getting new code as soon as it&amp;#8217;s released. Until then, it&amp;#8217;s nice to know that Plone&amp;#8217;s upgrade procedure is fairly predictable and stable, if not entirely straightforward &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-do-i-upgrade&quot;&gt;
&lt;h2&gt;How do I upgrade?&lt;/h2&gt;
&lt;p&gt;Unfortunately we &lt;em&gt;still&lt;/em&gt; get asked this question in IRC. The TLDR (short) explanation is as follows. Got an old Plone? Here&amp;#8217;s what you should do:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Don&amp;#8217;t touch it! Leave it alone. It&amp;#8217;s probably doing something important.&lt;/li&gt;
&lt;li&gt;Install the latest Plone somewhere that is not the location of your current site. Maybe not even on the same machine.&lt;/li&gt;
&lt;li&gt;Copy the production Data.fs file (usually in var/ somewhere) and any blobs you may have (Plone 4 or greater) to the new installation.&lt;/li&gt;
&lt;li&gt;Restart Plone in the foreground (bin/instance fg). If it starts, great! If it doesn&amp;#8217;t, look for missing add-ons and add their newest-Plone counterparts (this is usually where all the real work happens). Can&amp;#8217;t find the latest version? Try contacting the author. Stuck? Try Plone support (&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/support&quot;&gt;http://plone.org/support&lt;/a&gt;) or hire a consultant (e.g. &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;). Otherwise, continue.&lt;/li&gt;
&lt;li&gt;Once your add-ons are in place, start the site in the foreground and give the ZMI a poke (stay out of Plone). Look for broken objects. If you find some, repeat the previous step. Otherwise, continue.&lt;/li&gt;
&lt;li&gt;Once the ZMI looks good, trigger the migration with the Dry Run checkbox selected. See what you get. If it completes, do it for real. If it doesn&amp;#8217;t, open a ticket on &lt;a class=&quot;reference external&quot; href=&quot;http://dev.plone.org&quot;&gt;http://dev.plone.org&lt;/a&gt; so we can track the kinds of issues that folks are encountering in the wild. At this point if you are stuck, try to get help from the support forums (&lt;a class=&quot;reference external&quot; href=&quot;http://plone.org/support&quot;&gt;http://plone.org/support&lt;/a&gt;) or hire a consultant (e.g. &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt;). Otherwise, you are almost done!&lt;/li&gt;
&lt;li&gt;Run the upgrade for real i.e. with the Dry Run checkbox unselected. When it finishes (it could take a while depending on the size of your site) check Plone. If everything looks OK, rejoice! If not, don&amp;#8217;t worry. Check: &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;Site&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;Setup&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;ZMI&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;portal_skins&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;custom&lt;/span&gt;&lt;/code&gt;. If there is anything inside the custom folder, rename the custom folder to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;custom_X_X&lt;/span&gt;&lt;/code&gt; where &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;X_X&lt;/span&gt;&lt;/code&gt; equals the previous Plone version e.g. &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;custom_3_3&lt;/span&gt;&lt;/code&gt;. Or, rename it to whatever you like. Or delete it if you don&amp;#8217;t care about any in-database customizations that have been made. You probably should care, but maybe you don&amp;#8217;t. Now check Plone again. If everything looks OK, you are done! If not… well you really should be done by now. So if not, please email me: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt; and I will try to help.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;#8217;s still a lot to swallow for a summary. The key point is this: &lt;strong&gt;test the upgrade away from the production site. Don&amp;#8217;t put yourself in an unpleasant situation you can easily avoid&lt;/strong&gt;. Once everything works as expected, make a copy of your Data.fs and perform the upgrade on the production site (by editing the buildout.cfg if you know how, or just make the new Plone installation the production site. Need help? Please feel free to email me: &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt; to discuss professional assistance.)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;how-did-i-upgrade&quot;&gt;
&lt;h2&gt;How did I upgrade?&lt;/h2&gt;
&lt;p&gt;Anyway, the point of this blog entry is to cover the recent upgrade of &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt; to Plone 4.3a1, and the bliss that ensued. Plone 4.3 has lots of goodness in it, most notably the new theme editor from Martin Aspeli. Whilst I haven&amp;#8217;t fully explored its possibilites, I definitely liked seeing it in place; it&amp;#8217;s an impressive piece of work and I suspect will be very useful to lots of folks. So here is a brief summary of my upgrade steps, which took about 2-3 days.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;create-a-new-empty-repo&quot;&gt;
&lt;h3&gt;Create a new empty repo&lt;/h3&gt;
&lt;p&gt;I started with a public repo in my personal GitHub account, then forked it to my organization for showcasing:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/new_style&quot;&gt;https://github.com/ACLARKNET/new_style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-the-buildout&quot;&gt;
&lt;h3&gt;Add the buildout&lt;/h3&gt;
&lt;p&gt;Yes, we are still married to Buildout for even the simplest deployments :-/. So in order to make this easy for myself and others, I maintain buildouts for every version of Plone under the &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;http://pythonpackages.com&lt;/a&gt; umbrella. I typically start like this from within the checked out repo:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv .
$ bin/pip install zc.buildout
$ bin/buildout init
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I then &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;extend&lt;/span&gt;&lt;/code&gt; the desired base configuration (&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;4.3.x-dev&lt;/span&gt;&lt;/code&gt; in this case) and add additional customizations as needed.&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
extends = http://pythonpackages.com/buildout/plone/4.3.x-dev

[plone]
eggs +=
    z3c.jbot
    ZODB3
scripts = ZODB3
resources = ${buildout:directory}/resources
zcml-additional =
# XXX Can this be done with p.r.zope2instance yet?
    &amp;lt;configure
        xmlns:browser=&amp;quot;http://namespaces.zope.org/browser&amp;quot;
        &amp;gt;
        &amp;lt;include package=&amp;quot;z3c.jbot&amp;quot; file=&amp;quot;meta.zcml&amp;quot; /&amp;gt;
        &amp;lt;browser:jbot directory=&amp;quot;${buildout:directory}/templates&amp;quot; /&amp;gt;
    &amp;lt;/configure&amp;gt;

[versions]
Cheetah = 2.2.1
Pillow = 1.7.7
Products.DocFinderTab = 1.0.5
Products.FSDump = 0.9.5
collective.recipe.supervisor = 0.17
gdata = 2.0.17
meld3 = 0.6.9
plone.app.debugtoolbar = 1.0a2
supervisor = 3.0b1
z3c.jbot = 0.7.1
zope2-bootstrap = 0.0.7
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;develop-the-diazo-theme&quot;&gt;
&lt;h3&gt;Develop the Diazo theme&lt;/h3&gt;
&lt;p&gt;With Diazo, Python packaging is optional. And the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;resources&lt;/span&gt;&lt;/code&gt; parameter available from &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plone.recipe.zope2instance&lt;/span&gt;&lt;/code&gt; makes it easy to start theming without a Python package. I started with a bootstrap template:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Bootstrap, from Twitter&amp;lt;/title&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;

    &amp;lt;!-- Le styles --&amp;gt;
    &amp;lt;link href=&amp;quot;/++theme++static/css/bootstrap.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
    &amp;lt;link href=&amp;quot;/++theme++static/css/new_style.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
    &amp;lt;link href=&amp;#39;http://fonts.googleapis.com/css?family=Oswald&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;
    &amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
    &amp;lt;/style&amp;gt;

    &amp;lt;!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --&amp;gt;
    &amp;lt;!--[if lt IE 9]&amp;gt;
      &amp;lt;script src=&amp;quot;http://html5shim.googlecode.com/svn/trunk/html5.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;![endif]--&amp;gt;

    &amp;lt;!-- Le fav and touch icons --&amp;gt;
    &amp;lt;link rel=&amp;quot;shortcut icon&amp;quot; href=&amp;quot;/++theme++static/img/favicon.ico&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;144x144&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-144-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;114x114&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-114-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; sizes=&amp;quot;72x72&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-72-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;link rel=&amp;quot;apple-touch-icon-precomposed&amp;quot; href=&amp;quot;/++theme++static/ico/apple-touch-icon-57-precomposed.png&amp;quot;&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;

      var _gaq = _gaq || [];
      _gaq.push([&amp;#39;_setAccount&amp;#39;, &amp;#39;UA-35125830-1&amp;#39;]);
      _gaq.push([&amp;#39;_trackPageview&amp;#39;]);

      (function() {
        var ga = document.createElement(&amp;#39;script&amp;#39;); ga.type = &amp;#39;text/javascript&amp;#39;; ga.async = true;
        ga.src = (&amp;#39;https:&amp;#39; == document.location.protocol ? &amp;#39;https://ssl&amp;#39; : &amp;#39;http://www&amp;#39;) + &amp;#39;.google-analytics.com/ga.js&amp;#39;;
        var s = document.getElementsByTagName(&amp;#39;script&amp;#39;)[0]; s.parentNode.insertBefore(ga, s);
      })();

    &amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body&amp;gt;

    &amp;lt;div class=&amp;quot;navbar navbar-inverse navbar-fixed-top&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;navbar-inner&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
          &amp;lt;a class=&amp;quot;btn btn-navbar&amp;quot; data-toggle=&amp;quot;collapse&amp;quot; data-target=&amp;quot;.nav-collapse&amp;quot;&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
            &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;/a&amp;gt;
          &amp;lt;a class=&amp;quot;brand&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Project name&amp;lt;/a&amp;gt;
          &amp;lt;div class=&amp;quot;nav-collapse collapse&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;nav&amp;quot;&amp;gt;
              &amp;lt;li class=&amp;quot;active&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#about&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#contact&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
              &amp;lt;li class=&amp;quot;dropdown&amp;quot;&amp;gt;
                &amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;dropdown-toggle&amp;quot; data-toggle=&amp;quot;dropdown&amp;quot;&amp;gt;Dropdown &amp;lt;b class=&amp;quot;caret&amp;quot;&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;dropdown-menu&amp;quot;&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Another action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Something else here&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li class=&amp;quot;divider&amp;quot;&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li class=&amp;quot;nav-header&amp;quot;&amp;gt;Nav header&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;One more separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
              &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
          &amp;lt;/div&amp;gt;&amp;lt;!--/.nav-collapse --&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;

      &amp;lt;!-- Main hero unit for a primary marketing message or call to action --&amp;gt;
      &amp;lt;div class=&amp;quot;hero-unit&amp;quot;&amp;gt;
        &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;This is a template for a simple marketing or informational website.
            It includes a large callout called the hero unit and three supporting pieces of content.
            Use it as a starting point to create something more unique.&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn btn-primary btn-large&amp;quot;&amp;gt;Learn more &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;

      &amp;lt;!-- Example row of columns --&amp;gt;
      &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;span6 col1&amp;quot;&amp;gt;
          &amp;lt;h2&amp;gt;Heading&amp;lt;/h2&amp;gt;
          &amp;lt;p&amp;gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo,
            tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada
            magna mollis euismod. Donec sed odio dui. &amp;lt;/p&amp;gt;
          &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;View details &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&amp;quot;span6 col2&amp;quot;&amp;gt;
          &amp;lt;h2&amp;gt;Heading&amp;lt;/h2&amp;gt;
          &amp;lt;p&amp;gt;Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor
            mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis
            euismod. Donec sed odio dui. &amp;lt;/p&amp;gt;
          &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;View details &amp;amp;raquo;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
       &amp;lt;/div&amp;gt;

      &amp;lt;hr&amp;gt;

      &amp;lt;footer&amp;gt;
        &amp;lt;p&amp;gt;&amp;amp;copy; Company 2012&amp;lt;/p&amp;gt;
      &amp;lt;/footer&amp;gt;

    &amp;lt;/div&amp;gt; &amp;lt;!-- /container --&amp;gt;

    &amp;lt;!-- Le javascript
    ================================================== --&amp;gt;
    &amp;lt;!-- Placed at the end of the document so the pages load faster --&amp;gt;
    &amp;lt;script src=&amp;quot;/++theme++static/js/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;/++theme++static/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&amp;quot;http://platform.twitter.com/widgets.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        $(document).ready(function() {
            $(&amp;#39;a.lightbox&amp;#39;).lightBox();
            $(&amp;quot;.client&amp;quot;).collapse()
            $(&amp;#39;.carousel&amp;#39;).carousel({
                interval: 10000,
            }
            )
        });
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then added some Diazo rules:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;rules
    xmlns=&amp;quot;http://namespaces.plone.org/diazo&amp;quot;
    xmlns:css=&amp;quot;http://namespaces.plone.org/diazo/css&amp;quot;
    xmlns:xsl=&amp;quot;http://www.w3.org/1999/XSL/Transform&amp;quot;&amp;gt;

    &amp;lt;append css:content=&amp;quot;#category&amp;quot; css:theme=&amp;quot;.hero-unit&amp;quot; /&amp;gt;
    &amp;lt;before content=&amp;#39;/html/head/title&amp;#39; theme=&amp;#39;/html/head/title&amp;#39; /&amp;gt;
    &amp;lt;theme href=&amp;quot;index.html&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;.nav&amp;quot; css:theme=&amp;quot;.nav&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#content&amp;quot; css:theme-children=&amp;quot;.hero-unit&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-column-one&amp;quot; css:theme-children=&amp;quot;.col1&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-column-two&amp;quot; css:theme-children=&amp;quot;.col2&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;footer&amp;quot; css:theme=&amp;quot;footer&amp;quot; /&amp;gt;
    &amp;lt;replace css:content=&amp;quot;#portal-logo&amp;quot; css:theme=&amp;quot;.brand&amp;quot; /&amp;gt;

&amp;lt;/rules&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Then styled to fit with CSS:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#about {
    padding-top: 9px;
}
.alex {
    border-bottom: 1px solid #FAFAFA;
}
body {
    background: url(&amp;quot;/++theme++static/img/aclark-net-background.png&amp;quot;) repeat-x;
    background-color: black;
}
.brand {
    color: #FAFAFA !important;
    font-family: Georgia;
}
.brand .alpha {
    font-size: 360%;
    font-style: italic;
}
.brand .name {
    font-size: 50px;
}
.carousel-inner {
    border-bottom: 1px solid #CCC;
    padding-bottom: 2em;
}
#content {
    color: #FAFAFA;
}
.description {
    font-size: 125%;
    margin: 1em 0 1em 0;
}
.documentDescription {
    font-size: 125%;
    margin: 1em 0 1em 0;
}
dt {
    margin: 1em 0 1em 0;
}
#facebook {
    padding-top: 1px;
}
footer {
    border-top: 1px solid #999999;
    color: #999999;
    margin-top: 600px;
    width: 100%;
    padding-top: 1em;
}
footer li {
    list-style-type: none;
}
.hero-unit {
    background: black;
}
hr {
    border: none;
    background-color: #CCC;
    color: #CCC;
    height: 1px;
}
.image-left {
    float: left;
    margin: 0 1em 0 0;
}
.navbar-inner {
    background: #AA001F !important;
    height: 50px;
}
.portletHeader {
    font-size: 125%;
}
#portal-column-one {
    color: #FAFAFA;
}
#portal-column-two {
    color: #FAFAFA;
}
.team-member {
    border-bottom: 1px solid #FAFAFA;
}
.service {
    padding: 30px 0 30px 0;
}
#twitter {
    padding-top: 15px;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;customize-templates&quot;&gt;
&lt;h2&gt;Customize templates&lt;/h2&gt;
&lt;p&gt;As you may have noticed above I use &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;z3c.jbot&lt;/span&gt;&lt;/code&gt; to customize various Plone templates.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;images/custom-templates.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;add-content&quot;&gt;
&lt;h2&gt;Add content&lt;/h2&gt;
&lt;p&gt;I then cut/pasted all my content from the old site to the new site. This is a lot of work, but I like mimicking the experience of someone non-tech-savvy using Plone for the first time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-s-left&quot;&gt;
&lt;h2&gt;What&amp;#8217;s left?&lt;/h2&gt;
&lt;p&gt;I am very happy with this upgrade, but of course it&amp;#8217;s not perfect.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;use-sunburst-theme-for-content-editing&quot;&gt;
&lt;h3&gt;Use Sunburst theme for content editing&lt;/h3&gt;
&lt;p&gt;If you are Diazo-savvy, you may notice I completely ignore styling the content editing interface. Instead I rely on the unthemed &lt;a class=&quot;footnote-reference&quot; href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; site for content editing.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;images/edit-ui.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;use-diazo-theme-for-public-facing-view&quot;&gt;
&lt;h3&gt;Use Diazo theme for public facing view&lt;/h3&gt;
&lt;p&gt;Of course, visitors to &lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net&quot;&gt;http://aclark.net&lt;/a&gt; see the Diazo theme.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;images/diazo-theme.png&quot; /&gt;
&lt;p&gt;I&amp;#8217;m hoping that the Plone team can unify the content editing experience again in Plone 5, possibly via simplifying the &amp;#8220;old style&amp;#8221; templates such that it&amp;#8217;s easier to map them to custom Diazo themes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;hightlights&quot;&gt;
&lt;h2&gt;Hightlights&lt;/h2&gt;
&lt;p&gt;Lastly, I&amp;#8217;ll cover some of the remaining highlights.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;it-works&quot;&gt;
&lt;h3&gt;It works!&lt;/h3&gt;
&lt;p&gt;Plone 4.3a1 is remarkably stable. The TinyMCE UI is a bit rough, and the sitemap is broken &lt;a class=&quot;footnote-reference&quot; href=&quot;#id6&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;, but it works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-all-content-view-is-awesome&quot;&gt;
&lt;h3&gt;The &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;content&lt;/span&gt;&lt;/code&gt; view is awesome&lt;/h3&gt;
&lt;img alt=&quot;alternate text&quot; src=&quot;images/all-content.png&quot; /&gt;
&lt;p&gt;Contributed by Laurence Rowe for Plone 4, I use the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;content&lt;/span&gt;&lt;/code&gt; view in two places:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/services&quot;&gt;http://aclark.net/services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://aclark.net/team&quot;&gt;http://aclark.net/team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I love the ability to easily aggregate the contents of pages within a folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;my-deployment-is-awesome&quot;&gt;
&lt;h3&gt;My deployment is awesome&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;m really happy with the following trick I used this time around:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Content is stored in Data.fs (of course) which I&amp;#8217;ve checked into a private repo on bitbucket, and save nightly with an automated commit and push. I&amp;#8217;m able to present the site buildout and theme to the public but keep the Data.fs private via git submodules.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Prior to this, the entire site was stored in a private repo on bitbucket. And finally:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;If you load the site, you&amp;#8217;ll notice the images (configured as static resources) are a bit laggy. I&amp;#8217;m a big fan of of CloudFlare and current user via pythonpackages.com, so I&amp;#8217;ll probably be configuring aclark.net to use it soon too. Once that is done, the site should be lightning fast instead of just really fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Like this article and/or my open source work in general? Please &lt;a class=&quot;reference external&quot; href=&quot;http://gittip.com/aclark4life&quot;&gt;consider supporting me on gittip&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Some ideas for improving upgrades: 1.) optionally rename portal_skins/custom during the upgrade process. 2.) Include suggestions in the form copy to stage the upgrade away from the current production site. 3.) Report on availability of add-ons compatible with latest version of Plone.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id5&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Unthemed meaning un-diazo-themed. The content UI is themed with the Sunburst theme &amp;#8220;the old way&amp;#8221;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id6&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id3&quot;&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://dev.plone.org/ticket/13178&quot;&gt;https://dev.plone.org/ticket/13178&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">PythonPackages: One Year Later</title>
    <id>http://blog.aclark.net/2012/09/28/pythonpackages-com-one-year-later/</id>
    <updated>2012-09-28T00:00:00Z</updated>
    <published>2012-09-28T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/28/pythonpackages-com-one-year-later/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pythonpackages-one-year-later&quot;&gt;

&lt;p&gt;&lt;strong&gt;We are rolling up on the one year anniversary of pythonpackages.com (in October).&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is an exciting milestone (for me at least) because I&amp;#8217;ve had a tremendous amount of fun building the site, not to mention how much I learned about GitHub, PyPI, Pyramid, Stripe, Redis, Bootstrap, and more.&lt;/p&gt;
&lt;p&gt;We are hovering around 200 signups which I&amp;#8217;m quite proud of. But in terms of &lt;strong&gt;possible-financial-success&lt;/strong&gt; i.e. the potential of converting some of those sign ups in to actual customers I&amp;#8217;d feel better if we were at 2,000 or higher.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-happened&quot;&gt;
&lt;h2&gt;What happened?&lt;/h2&gt;
&lt;p&gt;As of the launch of the beta site 3 months ago, there are some actually-useful features available:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/introduction.html#introduction&quot;&gt;ability to release a package from GitHub to PyPI&lt;/a&gt; without a terminal (i.e. in the web browser).&lt;/li&gt;
&lt;li&gt;The ability to release a package with &lt;cite&gt;git push&lt;/cite&gt; (by adding the service: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/github/github-services/blob/master/services/pythonpackages.rb&quot;&gt;https://github.com/github/github-services/blob/master/services/pythonpackages.rb&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;The ability to &amp;#8220;manage packages&amp;#8221; (see image below)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/manage-packages.png&quot; /&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The ability to &amp;#8220;manage organizations&amp;#8221; (see image below)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/manage-organizations.png&quot; /&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/create-package.html#create-packages&quot;&gt;ability to create packages through the web&lt;/a&gt; (i.e. from the web browser to GitHub, whereas normally you&amp;#8217;d run PasteScript in your Terminal).&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/create-new-package.png&quot; /&gt;
&lt;p&gt;And a few more logistical features that are cool:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The ability to pay with a credit card (via Stripe)&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pay-with-stripe.png&quot; /&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The ability to oauth against PyPI:&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pypi-oauth.png&quot; /&gt;
&lt;p&gt;Still, we have only scratched the surface of what could potentially be provided to the Python community. Future plans include:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;The ability to easily &lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/pythonpackages/pythonpackages.com/issue/28/build-windows-installers&quot;&gt;build Windows installers&lt;/a&gt; for your Python software.&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/pythonpackages/pythonpackages.com/issue/27/support-bitbucket-and-other-dvcs-services&quot;&gt;Support for other services&lt;/a&gt; e.g. bitbucket.&lt;/li&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/pythonpackages/pythonpackages.com/issue/29/add-git-branch-support&quot;&gt;Support git branches&lt;/a&gt; i.e. for releasing from a branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In summary, this is a great start to building &amp;#8220;github style&amp;#8221; automation for Python packaging but there is much more work to be done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-now&quot;&gt;
&lt;h2&gt;What now?&lt;/h2&gt;
&lt;p&gt;I am in the process of winding down the 3 month &amp;#8220;beta 1&amp;#8221; period. The &amp;#8220;beta 2&amp;#8221; period (from now until the end of the year) will likely include:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Adding MailChimp integration to make it easier to email subscribers.&lt;/li&gt;
&lt;li&gt;Turn off SSL to save $20/month.&lt;/li&gt;
&lt;li&gt;Write tests and open source the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-can-you-do-to-help&quot;&gt;
&lt;h2&gt;What can you do to help?&lt;/h2&gt;
&lt;p&gt;If you believe in the ideas behind pythonpackages.com (primarily: eliminating the need to think about packaging at all; e.g. through task automation, and process improvement behind the scenes; i.e. supporting new technology like distutils2/packaging, wheel, et al.; in order to present a seemless packaging story to developer-consumers.) then the best thing you can do is to purchase a paid plan:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/plans&quot;&gt;http://pythonpackages.com/plans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The second best thing you can do is support me on gittip:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://gittip.com/aclark4life&quot;&gt;https://gittip.com/aclark4life&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These funds will go towards covering hosting costs until such time as the service can pay for itself. I am also asking folks who appreciate my open source work in general to consider a gittip donation. If you cannot help financially, you can still use the free plan to release packages! Please try it out and &lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/pythonpackages/pythonpackages.com/issues/new&quot;&gt;give feedback&lt;/a&gt;. (The paid plans get you access to more package slots, so you don&amp;#8217;t have to swap out the free slot, and organizations, so you can release packages from organization repos).&lt;/p&gt;
&lt;p&gt;Thanks for considering!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Diazo Themes Revisited</title>
    <id>http://blog.aclark.net/2012/09/24/diazo-themes-revisited/</id>
    <updated>2012-09-24T00:00:00Z</updated>
    <published>2012-09-24T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/24/diazo-themes-revisited/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;diazo-themes-revisited&quot;&gt;

&lt;p&gt;&lt;strong&gt;With Diazo theming on the rise (going in to 4.3 core) I&amp;#8217;d like to take a look at the Diazo theming ecosystem again.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For that matter, since I know that some folks will never commit to Diazo, I&amp;#8217;d like to take a look at the entire Plone theming ecosystem.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-are-themes&quot;&gt;
&lt;h2&gt;What are themes?&lt;/h2&gt;
&lt;p&gt;Themes control the way the site looks. For the scope of this post, at least, I don&amp;#8217;t care about &amp;#8220;views&amp;#8221;, &amp;#8220;viewlets&amp;#8221;, &amp;#8220;portlets&amp;#8221;, &amp;#8220;tiles&amp;#8221;, etc. In fact, I&amp;#8217;m not sure I ever want to mix &amp;#8220;templating&amp;#8221; (for lack of a better word) with theming. There is a bit of discussion going on right now amongst the core developers regarding how to make it easier for themers to associate their template code with application code. And while I fully support this discussion, at present the bottom line is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&amp;#8220;Old style&amp;#8221;&lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; theming is still a valid way to control the look and feel of a Plone system.&lt;/li&gt;
&lt;li&gt;&amp;#8220;New style&amp;#8221; (Diazo) theming is a great way to isolote the complexity of the stack and get HTML/CSS/JavaScript folks going quickly (especially in 4.3a1 with the new theme editor!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;where-are-themes&quot;&gt;
&lt;h2&gt;Where are themes?&lt;/h2&gt;
&lt;p&gt;In short: all over the place. Why is that? Because we are in the middle of several fluctuating &amp;#8220;best practice&amp;#8221; approaches that have fluctuated over the past half decade or so:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Plone developers should release their Plone add-ons &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt; to PyPI!&lt;/li&gt;
&lt;li&gt;Plone developers should release their Plone add-ons to plone.org (in addition to PyPI)!&lt;/li&gt;
&lt;li&gt;Plone developers should release their Diazo themes as zip archives (i.e. no Python package)!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence, the need for this post to clarify the status quo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-should-i-do&quot;&gt;
&lt;h2&gt;What should I do?&lt;/h2&gt;
&lt;p&gt;Everyone should form their own opinion based on the information in this post and act accordingly or however they see fit. If we can all agree on an approach, great! If not, here&amp;#8217;s what I&amp;#8217;m doing.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;what-am-i-doing&quot;&gt;
&lt;h3&gt;What am I doing?&lt;/h3&gt;
&lt;p&gt;While I have a large interest in seeing plone.org work well (and am also in the middle of helping to cat herd a plone.com marketing site effort), I have given up on plone.org as a reliable, consistent source for add-ons (in favor of PyPI). This abandonment is perhaps only temporary, but in any event for now: if it&amp;#8217;s on PyPI, it&amp;#8217;s good enough for me. Also to close the loop on Diazo zip themes, while I fully support this approach I don&amp;#8217;t use it myself much.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;what-is-the-point&quot;&gt;
&lt;h3&gt;What is the point?&lt;/h3&gt;
&lt;p&gt;All of this brings me to the actual point of this post which is to take a quick look at the Plone themeing landscape in order to spur more Diazo theme development (or old style theming, if that is your thing). Quickly, using pip to search PyPI by package namespace I see:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;88 plonetheme themes&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plonetheme.Bangalore      - An installable theme for Plone 3
plonetheme.GreenEarthTheme3_0 - An installable theme for Plone 3
plonetheme.ReOrg          - Theme that reorganizes screen real-estate abd gives plone a fresh look
plonetheme.aclark_twitter - Complete silliness: make your Plone site look like Alex Clark&amp;#39;s Twitter profile.
plonetheme.andreas01      - An installable theme for Plone 3.0.
plonetheme.andreas02      -
plonetheme.aqueouslight   - An installable Diazo theme for Plone 4.1
plonetheme.bananaleaf     - An installable Diazo theme for Plone 4.1
plonetheme.basic          - An easily customizable theme for Plone 4
plonetheme.blueblog       - An installable theme for Plone 3.0
plonetheme.bluegray       - An installable theme for Plone
plonetheme.bootstrap      - bootstrap css integration
plonetheme.broadcaster    - An installable theme for Plone 3.0
plonetheme.bronzecube     - An installable theme for Plone 3
plonetheme.burned         - An installable Diazo theme for Plone 4.1
plonetheme.classic        - The classic Plone 3 default theme.
plonetheme.cleantheme     - An installable theme for Plone 3.0
plonetheme.codapress      - An installable Diazo theme for Plone 4.1
plonetheme.colorcontext   - Total CSS rebuild and color themed sections
plonetheme.colorfulworld  - An installable theme for Plone 4
plonetheme.coolblue       - An installable Diazo theme for Plone 4.1
plonetheme.corporatemale  - An elastic layout presentation suitable for a corporate business.
plonetheme.criticas       - An installable theme for Plone 3.0
plonetheme.cultureCab     - An installable theme for Plone 3
plonetheme.darkened       - An installable Diazo theme for Plone 4.1
plonetheme.delicious2     - An installable theme for Plone 3.0
plonetheme.discovery      - An installable Diazo theme for Plone 4.1
plonetheme.drupal         - Get all the power of Drupal for Plone ;)
plonetheme.earthlingtwo   - An installable Diazo theme for Plone 4.1
plonetheme.elemental      - Elemental Plone 4 Theme
plonetheme.equipoteih     - An installable theme for Plone 3.0
plonetheme.essay          -
plonetheme.evergreen      - An installable Diazo theme for Plone 4.1
plonetheme.ewb_case       - A Plone 4 theme for EWB Case
plonetheme.flowerbuds     - UNKNOWN
plonetheme.freshpick      - An installable Diazo theme for Plone 4.1
plonetheme.fui            - A Plone 3.0 theme for FUI
plonetheme.gemstone       - Arcsin&amp;#39;s Gemstone web design for Plone4
plonetheme.gov            - An installable theme for Plone 4
plonetheme.greencommunity - An installable theme for Plone 3.0.
plonetheme.grungeera      - An installable Diazo theme for Plone 4.1
plonetheme.hamnavoe       - An installable theme for Plone 3.0
plonetheme.html5_hotpink  - Diazo theme for Plone
plonetheme.inbusiness     - An installable theme for Plone 3.0
plonetheme.intk           - An installable theme for Plone 3
plonetheme.intkBase       - An installable theme for Plone 4
plonetheme.jsjamba        - An installable theme for Plone 4
plonetheme.keepitsimple   - An installable theme for Plone 4, fluid 3-column theme, minimalistic and light colored design
plonetheme.laboral        - An installable theme for Plone 4
plonetheme.labs           - An installable theme for Plone
plonetheme.leavesdew      - An installable Diazo theme for Plone 4.1
plonetheme.level2         - An installable theme for Plone 3.0
plonetheme.lithium        - An installable theme for Plone 3.0
plonetheme.mimbo          - An installable theme for Plone 3.0 based on the Mimbo theme by Darren Hoyt
plonetheme.minimalist     - An installable theme for Plone 3.0
plonetheme.mvob           - An installable Plone4 theme
plonetheme.nautica05      - An installable theme for Plone 3.x
plonetheme.netsightintranet - A clean, intranet theme for Plone 3.0
plonetheme.nonzero        - A theme for Plone 3 based on the Nonzero design by NodeThirtyThree
plonetheme.notredame      - Theme for Plone 3 with color scheme based on new Plone Logo
plonetheme.overlappedtabs - A theme for plone 3.x with overlapping tabs
plonetheme.p2             - An installable theme for Plone 3.0
plonetheme.peerstheme     - An installable theme for Plone 3.0
plonetheme.ploneorg       - Plone.org theme
plonetheme.pollination    - Pollination Theme
plonetheme.porseleinplaats - An installable theme for Plone 3
plonetheme.portaltwodotoh - An elastic lounded corners.
plonetheme.pyar           - A PyAr theme for Plone 3.x
plonetheme.python         -
plonetheme.rcom           - An installable theme for Plone 3.0.
plonetheme.redmusic       - An installable Diazo theme for Plone 4.1
plonetheme.relic          - An installable theme for Plone 3.0.
plonetheme.responsive1140 - A responsive theme for Plone
plonetheme.responsivetheme - An installable theme for Plone 4 that uses a fluid grid system
plonetheme.sait2009       - SAIT-2009 installable Plone theme
plonetheme.simplicity     - An installable theme for Plone 3.0
plonetheme.solemnity      - An installable theme for Plone 3.0 based on the solemnity theme by Six Shooter Media.
plonetheme.stylized       - An installable theme for Plone 3.0 based on the stylized theme by NodeThirtyThree.
plonetheme.subordinate    - An installable theme for Plone 3.0
plonetheme.sunburst       - The default theme for Plone 4.
plonetheme.terrafirma     - An installable theme for Plone 3.0
plonetheme.tidyblog       - An installable theme for Plone 3.0
plonetheme.transition     - An installable Diazo theme for Plone 4.1
plonetheme.twinapex       - Twinapex Theme is a theming product for Plone to give your site a professional corporate look
plonetheme.unilluminated  - An installable Diazo theme for Plone 4.1
plonetheme.wmoWonen       - An installable theme for Plone 4
plonetheme.woodexperience - An installable Diazo theme for Plone 4.1
plonetheme.xtheme         - An installable theme for Plone
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1 diazotheme theme&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;diazotheme.bootstrap      - Plone theme based on Twitter&amp;#39;s Bootstrap CSS
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;5 Products themes&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Products.Andreas09Theme   - An example theme for Plone 3.0
Products.HSCustom         - The HSCustom theme was originally created for my band&amp;#39;s website.
Products.naked_plone      - An installable theme for Plone 3.0 that does little but override default public stylesheets with empty ones.
Products.NuPlone          - A new theme for Plone 3.0
Products.PloneTableless   - Plone Tableless provides a completly tableless version of the Plone Default theme
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;60 other themes (WTF?!)&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alterootheme.busycity     - Free City Plone 3.0 Theme
alterootheme.intensesimplicity - A Plone 3.0 Theme based on a free template by David Uliana
alterootheme.lazydays     - A Theme for Plone 3.0 based on OpenWebDesign.org Lazy Days theme
atrealtheme.algol         - An installable theme for Plone 3.0
atrealtheme.gienah        - An installable theme for Plone 3.0
beyondskins.ploneday.site - Installable Plone 3 theme for World Plone Day
beyondskins.ploneday.site2009 - Installable Plone 3 theme developed to promote World Plone Day 2009 (April 22nd)
beyondskins.ploneday.site2010 - World Plone Day 2010 theme.
beyondskins.ploneday.site2011 - World Plone Day 2011 theme.
beyondskins.pyconbrasil2008 - Plone Theme developed by Simples Consultoria
beyondskins.pythonbrasil.site - This product is a installable Plone 3 Theme developed by Simples Consultoria for use in Python Brasil [7] Conference web site.
collective.fastview       - View and viewlet helper modules for Plone theme and five.grok developers
collective.jqueryuithememanager - JQueryUI theme manager for Plone
collective.lesscss        - This package allow theme developers to add LESS stylesheets into a Plone site.
collective.phantasy       - dynamic theme for Plone
collective.responsivetheme - A responsive theme based on sunburst for Plone 4
collective.shinythings    - Jazz up your Plone theme
collective.threecolorstheme - A Phantasy theme variation for Plone, with 3 dynamic colors
cooking.theme             - This is plone theme created from css/html ready design.
dgsanco.plone3theme       - Plone3 Theme for DG Sanco
freearch.theme            - Free Arch Theme for Plone
gameprog.theme            - An installable theme for Plone 3.0
gomobile.templates        - Project templates creating Web and Mobile themes for Plone
heddex.cityportal         - Installable theme for Plone
heddex.greenfield         - An installable theme for Plone 4
heddex.tranquility        - An installable visual theme for Plone 3
ilrt.migrationtool        - A site migration tool for Plone that uses the site&amp;#39;s theme egg version releases
iscorpio.themes.redmaple  - iscorpio readmaple Plone 3 theme
ityou.bluetheme           - An installable theme for Plone 4
jalon.theme               - An installable theme for Plone 3
jalonedit.theme           - JalonEdit Theme for PLONE 4
medialog.kuliadentheme    - An installable theme for Plone 3.0
medialog.roundskin        - An installable theme for Plone 3
medialog.subskins         - An installable theme and theming tool for Plone 4
medialog.subskinsiii      - An installable theme for Plone 3.0
plone.app.themeeditor     - Theme Editor for Plone, Customize your theme resources
plone.theme               - Tools for managing themes in CMF and Plone sites
quintagroup.sunrain.policy - extension for SunRain Plone theme
quintagroup.theme.estatelite - Free Diazo Theme for Plone 4.1
quintagroup.theme.lite    - Free Diazo Theme for Plone 4.1
quintagroup.theme.schools - Free Diazo theme for Plone 4.2
quintagroup.theme.sunrain - Free Diazo Theme for Plone 4.2
quintagroup.theme.techlight - Free diazo theme for Plone 4.1
quintagroup.theme.whiteblack - Free Diazo Theme for Plone 4.1
quintagroup.themetemplate - Quintagroup theme template for Plone 3 with nested namespace
raptus.theme.plonebartop  - move the plone-bar on the top
raptus.theme.ploneformgen - set standard theme for ploneformgen
redomino.css3theme        - A responsive (and mobile) theme for Plone 4 (based on sunburst)
sc.paster.theme           - Produto de tema para o portal Plone (skin).
semicinternet.theme.cambrils - A free Plone theme from SEMIC Internet for Plone 4
soniatheme                - An installable theme for Plone 3.0
themetweaker.themeswitcher - A product for switching themes in Plone.
uofl.dztheme.simplesite   - A Diazo theme for Plone 4 and UofL Simple Left-Nav Sites
uvsq.theme                - An installable theme for Plone 3
v2.theme                  - An installable theme for Plone 4
webcouturier.city.theme   - Plone visual theme
webcouturier.icompany.theme - Plone theme in blue/green colors
xdvtheme.inventions       - A xdvtheme for Plone
xdvtheme.sparkling        - An xdv Theme for Plone
zettwerk.ui               - Adding jquery.ui&amp;#39;s themeroller to plone 4 for easy theme customization.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;That last one is a surprise, and that&amp;#8217;s a total of &lt;strong&gt;154 themes for Plone on PyPI&lt;/strong&gt; (assuming I didn&amp;#8217;t miss any which I probably did). If we had the man power, all of these themes could be made to work with the latest Plone and work with either old style or new style technology. So if we can&amp;#8217;t do that (which is a hugely ambitious goal) let&amp;#8217;s at least try to come close!&lt;/p&gt;
&lt;p&gt;Do you like this post, and/or appreciate my open source work? Help build the commons by gittiping me: &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/aclark4life/&quot;&gt;https://www.gittip.com/aclark4life/&lt;/a&gt;.&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
    src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
    width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;It&amp;#8217;s getting harder to define what &amp;#8220;old style&amp;#8221; theming is. For this blog entry, old style theming is some form of customizing the main_template in Plone (I&amp;#8217;m ignoring the fact that macros called by main_template are customizable, for now). If we could (consistently, in a core supported way) get newer ways to do that (e.g. browser views instead of CMF skin layers) then &amp;#8220;old style&amp;#8221; would become &amp;#8220;newer style&amp;#8221;. It wouldn&amp;#8217;t become &amp;#8220;new style&amp;#8221; because Diazo technology is &amp;#8220;newer&amp;#8221; than browser view technology. Get it? I think my point is this: in addition to seeing Diazo help with isolating the complexity of the stack, I&amp;#8217;d like to see the underlying technology modernized. Give me something that looks and feels like &amp;#8220;old style&amp;#8221; theming (i.e. putting templates in CMF skin layers) but that is built on modern technology (i.e. the ZCA).&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;lt;rant&amp;gt; Have I mentioned today yet that I hate the term &amp;#8220;product&amp;#8221;? when it&amp;#8217;s used to refer to a Plone add-on? It&amp;#8217;s 2012 people. Zope 2 products died last decade. :-p&amp;lt;/rant&amp;gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Sorry for the blog spam</title>
    <id>http://blog.aclark.net/2012/09/22/sorry-for-the-blog-spam/</id>
    <updated>2012-09-22T00:00:00Z</updated>
    <published>2012-09-22T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/22/sorry-for-the-blog-spam/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;sorry-for-the-blog-spam&quot;&gt;

&lt;p&gt;&lt;strong&gt;Just learning Pelican&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I&amp;#8217;m just learning &lt;a class=&quot;reference external&quot; href=&quot;http://blog.getpelican.com&quot;&gt;Pelican&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/2012/09/21/yes-this-blog-is-now-powered-by-pelican/#comment-658707601&quot;&gt;Dirkjan Ochtman pointed out&lt;/a&gt; that I can have &amp;#8220;fancy&amp;#8221; URLs via the &lt;cite&gt;ARTICLE_PERMALINK_STRUCTURE&lt;/cite&gt; setting. So the blog spam you are seeing is a result of my publishing the same two articles with two different URLs (fancy and non-fancy). My apologies for the noise.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;publishconf-py&quot;&gt;
&lt;h2&gt;publishconf.py&lt;/h2&gt;
&lt;p&gt;And actually, I found &lt;cite&gt;ARTICLE_URL&lt;/cite&gt; and &lt;cite&gt;ARTICLE_SAVE_AS&lt;/cite&gt; to be the settings I wanted to use instead &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. My &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com/blob/master/publishconf.py&quot;&gt;publishconf.py&lt;/a&gt; now looks like this &lt;a class=&quot;footnote-reference&quot; href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;}/{slug}/index.html&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ARTICLE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;}/{slug}/&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AUTHOR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;u&amp;#39;Alex Clark&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_CATEGORY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Blog&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;aclark-blog&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GITHUB_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://github.com/ACLARKNET/aclarknet.github.com&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-34988446-1&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SITENAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;u&amp;#39;Alex Clark&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://blog.aclark.net&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SOCIAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GitHub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://github.com/aclark4life&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Gittip&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://www.gittip.com/aclark4life&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PythonPackages&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://pythonpackages.com/user/aclark4life&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://twitter.com/aclark4life&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;atom feed (Mozilla)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://blog.aclark.net/Mozilla.atom.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;atom feed (Plone)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://blog.aclark.net/Plone.atom.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;atom feed (Python)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://blog.aclark.net/Python.atom.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TAG_FEED_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.atom.xml&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TAG_FEED_RSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TWITTER_USERNAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;aclark4life&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pelican.notmyidea.org/en/3.0/settings.html#url-settings&quot;&gt;http://pelican.notmyidea.org/en/3.0/settings.html#url-settings&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id5&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I removed the extraneous pelicanconf.py and put everything in one file&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Yup, This Blog is Now Powered by Pelican</title>
    <id>http://blog.aclark.net/2012/09/21/yes-this-blog-is-now-powered-by-pelican/</id>
    <updated>2012-09-21T00:00:00Z</updated>
    <published>2012-09-21T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/21/yes-this-blog-is-now-powered-by-pelican/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;yup-this-blog-is-now-powered-by-pelican&quot;&gt;

&lt;p&gt;&lt;strong&gt;As an open source &amp;#8220;Plone guy&amp;#8221;, I&amp;#8217;m always prepared to defend and explain my choice to not use Plone for blogging.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As an open source &amp;#8220;Plone guy&amp;#8221;, I&amp;#8217;m always prepared to defend and explain my choice to &lt;strong&gt;not&lt;/strong&gt; use Plone for blogging. A couple years ago, I started using Wordpress in order to learn its feature set. I enjoyed my time with it, but after moving to wordpress.com for &amp;#8220;trouble free&amp;#8221; hosting, I found I couldn&amp;#8217;t control my category feeds the way I wanted; the honeymoon was over.&lt;/p&gt;
&lt;p&gt;This was a giant let down, because I was hoping to avoid putting any time in to my blogging infrastructure. For weeks I did nothing. I poked at various options: Pelican, Plone, Tumblr, others. Eventually, I found my way back to Pelican and now I&amp;#8217;m happy again.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/pelican.png&quot; /&gt;
&lt;p&gt;Pelican is a static blog generator, as you may have heard. So &lt;strong&gt;one big advantage&lt;/strong&gt; is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;You can host it for free, or close to free on any number of free or cheap static website hosting services! (I&amp;#8217;m using GitHub Pages)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;section&quot; id=&quot;other-advantages&quot;&gt;
&lt;h2&gt;Other advantages&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;It does feeds right (I need 3 &amp;#8220;full body&amp;#8221; feeds for: Mozilla, Plone, Python) &lt;a class=&quot;footnote-reference&quot; href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It&amp;#8217;s fun to configure (edit pelicanconf.py or publishconf.py).&lt;/li&gt;
&lt;li&gt;The &amp;#8220;cool kids&amp;#8221; use it: e.g. Tarek Ziadé, Kenneth Reitz, Daniel Greenfeld, many others.&lt;/li&gt;
&lt;li&gt;It grows with you: this is huge. You can start using it and feel comfortable right away, but there is always more to learn. This is how all software should be. Unfortunately, it&amp;#8217;s tough to get it right (I think this is formally called UX).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;some-disadvantages&quot;&gt;
&lt;h2&gt;Some disadvantages&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Don&amp;#8217;t like typing in the terminal? Pelican is not for you.&lt;/li&gt;
&lt;li&gt;No &amp;#8220;nested&amp;#8221; entries e.g. 2012/09/21/entry.html. I don&amp;#8217;t know if there is a formal name for this feature, but I miss it (if for no other reason than &amp;#8220;cool URLS never change&amp;#8221; i.e. I&amp;#8217;ve broken links with this move.)&lt;/li&gt;
&lt;li&gt;The pelican-import has some bugs, so I&amp;#8217;m doing a lot of manual cleanup (I don&amp;#8217;t mind this though.)&lt;/li&gt;
&lt;li&gt;Tags are categories and categories are tags (or something). I had to convert all my categories to tags, and then turn on tag feeds and turn off category feeds. Category feeds are on by default and tag feeds are off by default. Also ATOM is on and RSS is off, if that is of interest to you. (Since this is really just configuration change and not a disadvantage per sé, it probably belongs more in the next section where I discuss my setup.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are curious about my setup, here are the details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;setup&quot;&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Getting started with Pelican was easy, basically:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ virtualenv .
$ bin/pip install pelican BeautifulSoup Markdown
$ bin/pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;At this point, after I answer the quickstart questions I:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ source bin/activate
$ make html
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now the content is ready to host (which for me just involves a git push).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;tweaks&quot;&gt;
&lt;h2&gt;Tweaks&lt;/h2&gt;
&lt;p&gt;A few things were tricky.&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;I wanted to host my articles at the top level of the repo for serving on GitHub Pages, so I modified the Makefile to make it so &lt;a class=&quot;footnote-reference&quot; href=&quot;#id4&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Categories control what links are available in the header, so I disabled them all but one called &amp;#8220;Blog&amp;#8221;. Not ideal, but it works.&lt;/li&gt;
&lt;li&gt;The &amp;#8220;social&amp;#8221; links, and my disqus and analytics API keys were all a pleasure to configure.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;workflow&quot;&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;Now I write articles in restructured text in the &lt;cite&gt;content/&lt;/cite&gt; directory and publish them like so:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ make publish; git commit -a -m &amp;quot;Publish&amp;quot;; git push
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All the details are here if you&amp;#8217;d like to take a look:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ACLARKNET/aclarknet.github.com/commits/master&quot;&gt;https://github.com/ACLARKNET/aclarknet.github.com/commits/master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comments from more knowledgable Pelican users welcome. Like this article? Tip me on Gittip!&lt;/p&gt;
&lt;iframe style=&quot;border: 0; margin: 0; padding: 0;&quot;
    src=&quot;https://www.gittip.com/aclark4life/widget.html&quot;
    width=&quot;48pt&quot; height=&quot;20pt&quot;&gt;&lt;/iframe&gt;&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id3&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;This is actually my first &amp;#8220;test&amp;#8221; post with Pelican so I will get a chance to see how the feeds perform. But they looked good in testing.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id4&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id2&quot;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I think I broke &amp;#8220;make html&amp;#8221;, actually. Primarily I just needed to make it not &amp;#8220;clean&amp;#8221; the entire repo.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Gittip is the Future</title>
    <id>http://blog.aclark.net/2012/09/21/gittip-is-the-future/</id>
    <updated>2012-09-21T00:00:00Z</updated>
    <published>2012-09-21T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/09/21/gittip-is-the-future/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;gittip-is-the-future&quot;&gt;

&lt;p&gt;&lt;strong&gt;Heard of Gittip? If not, you should know about it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Heard of Gittip? If not, you should know: it has a lot of people (including me) excited about the potential to make a living doing what they love. From the Gittip blog &lt;a class=&quot;footnote-reference&quot; href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;Gittip is a system for funding people who build free culture. The core is small weekly gifts. The idea is that if 1,000 people give $1 a week to a great programmer, musician, scientist, teacher, etc., then that frees them up to pursue their vision even further for making the world better.&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;I love this idea! In particular, because it speaks to me more than other similar offerings:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Chipin&lt;/li&gt;
&lt;li&gt;Flattr&lt;/li&gt;
&lt;li&gt;Kickstarter&lt;/li&gt;
&lt;li&gt;Paypal&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;Why? If for no other reason, because it comes from a member of the Python community: Chad Whitacre of &lt;a class=&quot;reference external&quot; href=&quot;http://aspen.io&quot;&gt;http://aspen.io&lt;/a&gt; fame. And the Python community has become near and dear to me, second only to my-one-true-open-source-love: Plone. So I want to see open source developers, particularly Python developers, succeed.&lt;/p&gt;
&lt;img alt=&quot;alternate text&quot; class=&quot;img-thumbnail align-center&quot; src=&quot;https://raw.github.com/ACLARKNET/blog/gh-pages/images/gittip.png&quot; /&gt;
&lt;p&gt;And succeed they will, with gittip. Some particularly impressive results so far:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Chad Whitacre, the founder, is making almost $160 per week: &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/whit537/&quot;&gt;https://www.gittip.com/whit537/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Glick, a newly independent Plone developer, is making over $100 per week: &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/davisagli/&quot;&gt;https://www.gittip.com/davisagli/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read The Docs, everyone&amp;#8217;s favorite documentation hosting site, is making almost $100 per week: &lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/readthedocs/&quot;&gt;https://www.gittip.com/readthedocs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whilst no one is making a living off of gittip yet, with enough support and momentum it&amp;#8217;s only a matter of time before they do. Toward that end, I have written a blog entry for the &lt;a class=&quot;reference external&quot; href=&quot;http://blog.gittip.com&quot;&gt;gittip blog&lt;/a&gt; describing among other things: how I&amp;#8217;d like to make a living with gittip. Here is an excerpt:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;p&gt;Chad’s vision for Gittip really speaks to me. All over the world there are thousands of open source developers writing code, managing projects, and moving the world of open source technology forward. This helps millions of individuals, companies and the entire world with a variety of its endeavours.&lt;/p&gt;
&lt;p&gt;What if those folks could easily show their appreciation to individuals known to make open source happen? What if these volunteer developers didn’t need to go get “day jobs” to make a living because the world has taken care of them? What if companies didn’t need to hire employees in the traditional sense because their needs have already been met by open source?&lt;/p&gt;
&lt;p&gt;There is a lot to think about and strive for here, and I’m really excited to help Chad with his mission. On a daily basis I’m involved with, and influential to the following open source projects: Plone (Python-based CMS), Pillow (Python Imaging Library fork), Buildout (Python-based build system), and more. I hope Gittip can help me help you, the open source community and the world.&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;You can read the rest of the article here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.gittip.com/post/31960853095/back-the-stack-pythonpackages-com&quot;&gt;http://blog.gittip.com/post/31960853095/back-the-stack-pythonpackages-com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And if you&amp;#8217;d like to help me, I&amp;#8217;m attempting to cover the hosting costs for my startup business: &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;pythonpackages.com&lt;/a&gt;, so I can keep developing it for another year. I truly believe in my vision of a &amp;#8220;hosted packaging service&amp;#8221;, and I really want to help the Python community fix its packaging story in any way that I can. If in no other way, than by making it so you don&amp;#8217;t have to think about Python packaging at all (i.e. I&amp;#8217;ll worry about the various complexities, so you don&amp;#8217;t have to). You can find me on gittip here:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://www.gittip.com/aclark4life/&quot;&gt;https://www.gittip.com/aclark4life/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, go be generous and help build the commons!&lt;/p&gt;
&lt;table class=&quot;docutils footnote&quot; frame=&quot;void&quot; id=&quot;id2&quot; rules=&quot;none&quot;&gt;
&lt;colgroup&gt;&lt;col class=&quot;label&quot; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&quot;top&quot;&gt;
&lt;tr&gt;&lt;td class=&quot;label&quot;&gt;&lt;a class=&quot;fn-backref&quot; href=&quot;#id1&quot;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.gittip.com/post/30116848405/with-payouts-gittip-is-minimally-viable&quot;&gt;http://blog.gittip.com/post/30116848405/with-payouts-gittip-is-minimally-viable&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">pythonpackages.com: pyformance 0.2</title>
    <id>http://blog.aclark.net/2012/08/13/pythonpackages-com-pyformance-0-2/</id>
    <updated>2012-08-13T00:00:00Z</updated>
    <published>2012-08-13T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/13/pythonpackages-com-pyformance-0-2/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pythonpackages-com-pyformance-0-2&quot;&gt;

&lt;p&gt;&lt;strong&gt;pythonpackages.com helps Python programmers package and release their software with just a few clicks.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;pyformance-0-2&quot;&gt;
&lt;h2&gt;pyformance 0.2&lt;/h2&gt;
&lt;p&gt;pythonpackages.com recently processed it&amp;#8217;s first official release via the &lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/pythonpackagescom-new-github-service-quotgit-push-to-releasequot.html&quot;&gt;new GitHub Service&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As such, we are celebrating the release of &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/omergertel/pyformance&quot;&gt;pyformance&lt;/a&gt; 0.2! According to the author &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/omergertel&quot;&gt;Omer Gertel&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;It&amp;#39;s a straight forward port of Coda Hale&amp;#39;s fantastic metrics
package (originally for java). I don&amp;#39;t have all of it ported yet,
and it&amp;#39;s not tested as much as it should be, but it&amp;#39;s a good start.

(BTW, if you do blog about PyFormance, you may also want to mention
this talk by Coda Hale about metrics: http://www.youtube.com/watch?v=czes-oa0yik
He explains some of the math behind the package.)
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Done! Thanks Omer for using our service. Check out pyformance on GitHub:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/omergertel/pyformance&quot;&gt;https://github.com/omergertel/pyformance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the &lt;a class=&quot;reference external&quot; href=&quot;http://www.youtube.com/watch?v=czes-oa0yik&quot;&gt;talk by Coda Hale&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Bootstrapping a Buildout 1-6 release</title>
    <id>http://blog.aclark.net/2012/08/13/bootstrapping-a-buildout-1-6-release/</id>
    <updated>2012-08-13T00:00:00Z</updated>
    <published>2012-08-13T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/13/bootstrapping-a-buildout-1-6-release/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;bootstrapping-a-buildout-1-6-release&quot;&gt;

&lt;p&gt;&lt;strong&gt;A lot of work has been done on Buildout lately.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most notably:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Jim Fulton is &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/buildout/buildout/commits/master&quot;&gt;working on Buildout 2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ross Patterson has greatly &lt;a class=&quot;reference external&quot; href=&quot;http://rpatterson.net/blog/buildout-performance-improvements&quot;&gt;improved Buildout performance&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Domen Kožar has &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/changeset/127507&quot;&gt;provided a patch&lt;/a&gt; that takes a conservative
approach to Ross&amp;#8217;s performance improvements.&lt;/li&gt;
&lt;li&gt;I have offered to do a release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And there are a &lt;a class=&quot;reference external&quot; href=&quot;http://mail.python.org/pipermail/distutils-sig/2012-July/018779.html&quot;&gt;handful of other changes&lt;/a&gt; in &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/zc.buildout/trunk/CHANGES.txt?rev=127507#L4&quot;&gt;trunk on svn.zope.org&lt;/a&gt;, of which my favorite is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;The buildout init command now accepts distribution requirements and
paths to set up a custom interpreter part that has the distributions
or parts in the path. For example:: $ python bootstrap.py init
BeautifulSoup&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;So with that, I am &lt;strong&gt;planning to do a zc.buildout 1.6 release within 24 hours&lt;/strong&gt; or so of now. Please add a comment or weigh in on &lt;a class=&quot;reference external&quot; href=&quot;http://mail.python.org/mailman/listinfo/distutils-sig&quot;&gt;distutils-sig&lt;/a&gt; if you object. We have run the tests on Windows, and discovered only pre-existing failures. We are also preparing to do &amp;#8220;Buildout 2 prophylactic releases&amp;#8221; (i.e. releases that make 1.x continue to work when 2.x is released) in the 1.6.x series.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Pythonpackages.com: New GitHub Service - Push to Release</title>
    <id>http://blog.aclark.net/2012/08/10/pythonpackages-com-new-github-service-git-push-to-release/</id>
    <updated>2012-08-10T00:00:00Z</updated>
    <published>2012-08-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/10/pythonpackages-com-new-github-service-git-push-to-release/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pythonpackages-com-new-github-service-push-to-release&quot;&gt;

&lt;p&gt;&lt;strong&gt;pythonpackages.com helps Python programmers package and release their software with just a few clicks.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;pythonpackages-github-service&quot;&gt;
&lt;h2&gt;PythonPackages GitHub Service&lt;/h2&gt;
&lt;p&gt;There is a new &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/github/github-services&quot;&gt;GitHub Service&lt;/a&gt; available for pythonpackages.com that&amp;nbsp;allows you to release Python packages from GitHub to the Python Package Index, simply by pushing a commit message that begins with &amp;#8220;Release&amp;#8221; e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git commit -a -m &amp;quot;Release 1.0&amp;quot;; git push
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;(The release creates a tag with the appropriate version number, extracted from setup.py) To use the service, please follow the instructions below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;instructions&quot;&gt;
&lt;h2&gt;Instructions&lt;/h2&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Sign up for the pythonpackages.com beta: &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/signup&quot;&gt;http://pythonpackages.com/signup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Follow the &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/introduction.html&quot;&gt;Introduction&lt;/a&gt; instructions.&lt;/li&gt;
&lt;li&gt;On the Python Package Index, authorize pythonpackages.com to act on your behalf, as explained here:&amp;nbsp;&lt;a class=&quot;reference external&quot; href=&quot;http://blog.aclark.net/pythonpackagescom-using-pypi039s-oauth1-support-to-register-and-upload-packages.html&quot;&gt;http://blog.aclark.net/pythonpackagescom-using-pypi039s-oauth1-support-to-register-and-upload-packages.html&lt;/a&gt; (&lt;strong&gt;pythonpackages.com -&amp;gt; Dashboard -&amp;gt; Manage accounts -&amp;gt; PyPI -&amp;gt; Authorize&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;On GitHub, configure the PythonPackages service to be Active on any repository that contains a Python package you want to release (&lt;strong&gt;Repo -&amp;gt; Admin -&amp;gt; Service Hooks -&amp;gt; PythonPackages -&amp;gt; [*] Active&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can git push to release! If you have any trouble, please &lt;a class=&quot;reference external&quot; href=&quot;https://bitbucket.org/pythonpackages/pythonpackages.com/issues/new&quot;&gt;open a ticket&lt;/a&gt;. These instructions will live permanently here:&amp;nbsp;&lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/github-service.html&quot;&gt;http://docs.pythonpackages.com/en/latest/github-service.html&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">All My Python Packages Are Belong To GitHub</title>
    <id>http://blog.aclark.net/2012/08/10/all-my-python-packages-are-belong-to-github/</id>
    <updated>2012-08-10T00:00:00Z</updated>
    <published>2012-08-10T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/10/all-my-python-packages-are-belong-to-github/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;all-my-python-packages-are-belong-to-github&quot;&gt;

&lt;p&gt;&lt;strong&gt;Including many Plone add-ons.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hi. My name is Alex &amp;#8220;please don&amp;#8217;t call them products&amp;#8221; Clark. But you may call me aclark or aclark4life. In the spirit of continuing the &lt;a class=&quot;reference external&quot; href=&quot;http://plone.293351.n2.nabble.com/DVCS-options-for-Plone-Core-tt6295582.html&quot;&gt;great git migration&lt;/a&gt;, and in order to &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/signup&quot;&gt;beta test pythonpackages.com&lt;/a&gt;, I&amp;#8217;ve just moved the last of my Subversion repositories to GitHub. This means &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/3317288&quot;&gt;any package I have Owner or Maintainer permission for on PyPI&lt;/a&gt; now lives in one of 8 GitHub organizations, or my personal GitHub account on github.com. Great Success!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;plone-devs-y-u-no-move-repos&quot;&gt;
&lt;h2&gt;PLONE DEVS: Y U NO MOVE REPOS?&lt;/h2&gt;
&lt;p&gt;The Plone AI team has tentatively scheduled the end-of-2012 as the time to flip &lt;a class=&quot;reference external&quot; href=&quot;http://svn.plone.org/svn/collective/&quot;&gt;svn.plone.org/svn/collective&lt;/a&gt; to read only (/plone and /archetypes are already read only). So if you are still using the old collective, please take a minute to start thinking about migrating. As always, I&amp;#8217;m happy to provide assistance to anyone that needs it to move their code. (I&amp;#8217;m in #plone on irc.freenode.net or you can email &lt;a class=&quot;reference external&quot; href=&quot;mailto:aclark&amp;#37;&amp;#52;&amp;#48;aclark&amp;#46;net&quot;&gt;aclark&lt;span&gt;&amp;#64;&lt;/span&gt;aclark&lt;span&gt;&amp;#46;&lt;/span&gt;net&lt;/a&gt;.)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">pythonpackages.com: Using PyPI's OAuth1 support to register and upload packages</title>
    <id>http://blog.aclark.net/2012/08/07/pythonpackages-com-using-pypis-oauth1-support-to-register-and-upload-packages/</id>
    <updated>2012-08-07T00:00:00Z</updated>
    <published>2012-08-07T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/07/pythonpackages-com-using-pypis-oauth1-support-to-register-and-upload-packages/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pythonpackages-com-using-pypi-s-oauth1-support-to-register-and-upload-packages&quot;&gt;

&lt;p&gt;&lt;strong&gt;TL;DR PyPI has OAuth1 support; pythonpackages.com uses it to send your GitHub repos to PyPI.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thanks in very large part to &lt;a class=&quot;reference external&quot; href=&quot;https://twitter.com/r1chardj0n3s&quot;&gt;Richard Jones&lt;/a&gt;, the Python Package Index now has support for registering and uploading packages via OAuth1. And using his &lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/0d46c48b230e61e18479&quot;&gt;sample code&lt;/a&gt; I was able to take advantage of it on pythonpackages.com. The result is a fairly &lt;strong&gt;elegant approach to releasing packages&lt;/strong&gt; sans dirty hacks (I had been asking users for their username and password, then storing them in an encrypted session cookies so I could send them to PyPI.) Here&amp;#8217;s how it works now.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;sign-in-with-github&quot;&gt;
&lt;h2&gt;Sign In With GitHub&lt;/h2&gt;
&lt;p&gt;GitHub provides an easy way to let folks sign in to pythonpackages.com with their APIv3. I was able to code the OAuth dance using only the requests library (HT Kenneth Reitz). This was working as of late 2011.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;select-a-package&quot;&gt;
&lt;h2&gt;Select a package&lt;/h2&gt;
&lt;p&gt;Once you are signed in, you can select a package. Selected packages can perform various actions, one of which is &lt;strong&gt;Tag and Release&lt;/strong&gt;.  As soon as you select Tag and Release, you are required to authenticate with PyPI.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;strikeout-enter-your-pypi-credentials&quot;&gt;
&lt;h2&gt;[STRIKEOUT:Enter your PyPI credentials]&lt;/h2&gt;
&lt;p&gt;In order to get the beta out the door, a dirty hack was added to allow users to enter their PyPI credentials. Credentials were saved in an encrypted session cookie, then written out to .pypirc before calling `python setup.py upload`. Really terrible. This was shipped in early July 2012 and is thankfully no longer necessary (though it is &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/security.html#github-credentials&quot;&gt;still necessary to push the initial commit to GitHub.&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;authorize-pythonpackages-com&quot;&gt;
&lt;h2&gt;Authorize pythonpackages.com&lt;/h2&gt;
&lt;p&gt;Now authorization can happen elegantly via OAuth1. First, sign in to PyPI. Then authorize pythonpackages.com to act on your behalf. Lastly, profit (register and upload your package).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;register-and-upload-your-package&quot;&gt;
&lt;h2&gt;Register and upload your package&lt;/h2&gt;
&lt;p&gt;At this point you are free to tag and release. I am really excited about this. I began fantasizing about it almost a year ago and after several false starts (pypissh, openid, avoidance) it is now a reality. If you have a minute, please &lt;a class=&quot;reference external&quot; href=&quot;https://pythonpackages.com/signup&quot;&gt;give it a try&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Building Windows Installers in the Cloud</title>
    <id>http://blog.aclark.net/2012/08/01/building-windows-installers-in-the-cloud/</id>
    <updated>2012-08-01T00:00:00Z</updated>
    <published>2012-08-01T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/08/01/building-windows-installers-in-the-cloud/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;building-windows-installers-in-the-cloud&quot;&gt;

&lt;p&gt;&lt;strong&gt;With pythonpackages.com I want to solve real problems for people today.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So here&amp;#8217;s a proof of concept for building Windows installers quickly and easily &amp;#8220;in the cloud&amp;#8221; (i.e. without a Windows machine local). This article is mostly about the back end, as the front end is &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/introduction.html&quot;&gt;already documented&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;TL;DR: We&amp;#8217;re moving from proof-of-concept phase to useful-service phase. If you find the demo interesting and want to help build something great, please consider purchasing one of&lt;/em&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/plans&quot;&gt;our current plans&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;step-1-to-the-clouds&quot;&gt;
&lt;h2&gt;Step 1: To The Clouds&lt;/h2&gt;
&lt;p&gt;For the purpose of the demo, I booted up a Windows server on Rackspace Cloud and started installing things. On the short list of things to install was:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Python 2.7 from python.org.&lt;/li&gt;
&lt;li&gt;GitHub for Windows from github.com (mainly for git.)&lt;/li&gt;
&lt;li&gt;pythonpackages.com from bitbucket.org (free private repos!)&lt;/li&gt;
&lt;li&gt;Microsoft compiler (free version, make sure to use the same one used to compile Python.)&lt;/li&gt;
&lt;li&gt;Redis for Windows (Hell froze over, you can find this in Microsoft&amp;#8217;s GitHub account: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/MSOpenTech/Redis&quot;&gt;https://github.com/MSOpenTech/Redis&lt;/a&gt;.)&lt;/li&gt;
&lt;li&gt;Vim.exe (which I copy to vi.exe because I hate typing vim.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once I had all these things in place, I was able to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Install pythonpackages.com (pip install -r requirements.txt.)&lt;/li&gt;
&lt;li&gt;Compile and run Redis (Several projects bundled together in Visual
Studio is apparently called a &amp;#8220;solution&amp;#8221;, how quaint!)&lt;/li&gt;
&lt;li&gt;Start the site.&lt;/li&gt;
&lt;li&gt;Start testing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-2-fix-all-the-bugs&quot;&gt;
&lt;h2&gt;Step 2: Fix all the bugs&lt;/h2&gt;
&lt;p&gt;This step involved a lot of cursing:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Backslashes.&lt;/li&gt;
&lt;li&gt;Lack of vi key bindings.&lt;/li&gt;
&lt;li&gt;Other Windows-isms.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But I also praised my &lt;a class=&quot;reference external&quot; href=&quot;http://cord.sourceforge.net/&quot;&gt;CoRD Remote Desktop Client&lt;/a&gt; because it worked awesome. Anyway, the bugs/issues I fixed (and didn&amp;#8217;t fix) were roughly:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Create new application on GitHub and configured keys accordingly.&lt;/li&gt;
&lt;li&gt;Switch Stripe keys to testing.&lt;/li&gt;
&lt;li&gt;Fix Python paths and other trivial changes, so the application can run `python setup.py bdist_wininst`.&lt;/li&gt;
&lt;li&gt;JavaScript is completely broken for some reason I&amp;#8217;ve yet to determine (haven&amp;#8217;t looked yet, but guessing Windows path related).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;step-3-profit&quot;&gt;
&lt;h2&gt;Step 3: Profit!&lt;/h2&gt;
&lt;p&gt;I have to admit: I was giddy when it started working, and I was able to create a Windows Installer for Pillow (Python Imaging Library fork). I was even happier when I ran the installer and it worked. That&amp;#8217;s it. Next I hope to &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/plans&quot;&gt;get some customers&lt;/a&gt; so I can keep the Windows box running, and make it available to the public.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;big-picture&quot;&gt;
&lt;h2&gt;Big Picture&lt;/h2&gt;
&lt;p&gt;In case you are interested, the &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/roadmap.html&quot;&gt;roadmap for beta Q3 is here&lt;/a&gt;. I will also mention that I recently used &lt;a class=&quot;reference external&quot; href=&quot;http://dia-installer.de/&quot;&gt;Dia&lt;/a&gt; (&amp;lt;3) to create this info-graphic, in hopes of better communicating what I&amp;#8217;m trying to build. Check it out!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Pillow Moved to python-imaging Organization</title>
    <id>http://blog.aclark.net/2012/07/25/pillow-moved-to-python-imaging-organization/</id>
    <updated>2012-07-25T00:00:00Z</updated>
    <published>2012-07-25T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/07/25/pillow-moved-to-python-imaging-organization/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pillow-moved-to-python-imaging-organization&quot;&gt;

&lt;p&gt;&lt;strong&gt;On 7/30/2010 Pillow, the friendly PIL fork, was released.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since then, there have been a number of releases:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity Pillow
           Pillow-1.0.tar.gz     2010-07-31      800
           Pillow-1.1.tar.gz     2010-08-01      652
           Pillow-1.2.tar.gz     2010-08-02    1,987
              Pillow-1.3.zip     2010-11-28      589
              Pillow-1.4.zip     2010-11-28      587
              Pillow-1.5.zip     2010-11-28      876
              Pillow-1.6.zip     2010-12-01    6,706
            Pillow-1.7.0.zip     2011-05-28      678
            Pillow-1.7.1.zip     2011-05-31      663
            Pillow-1.7.2.zip     2011-06-02    3,460
            Pillow-1.7.3.zip     2011-07-21      569
            Pillow-1.7.4.zip     2011-07-21    4,156
            Pillow-1.7.5.zip     2011-09-07   17,429
Pillow-1.7.5-py2.7-win32.egg     2011-09-08      917
Pillow-1.7.5-py2.6-win32.egg     2011-09-08      918
Pillow-1.7.5-py2.5-win32.egg     2011-09-08      516
Pillow-1.7.5-py2.4-win32.egg     2011-09-08      477
            Pillow-1.7.6.zip     2012-01-21    7,401
         Pillow-1.7.6.tar.gz     2012-01-21   10,540
Pillow-1.7.6-py2.7-win32.egg     2012-01-21      632
Pillow-1.7.6-py2.6-win32.egg     2012-01-21      439
Pillow-1.7.6-py2.5-win32.egg     2012-01-21      332
Pillow-1.7.6-py2.4-win32.egg     2012-01-21      336
            Pillow-1.7.7.zip     2012-04-05   28,704
Pillow-1.7.7-py2.7-win32.egg     2012-04-09      716
Pillow-1.7.7-py2.6-win32.egg     2012-04-09      354
Pillow-1.7.7-py2.5-win32.egg     2012-04-09      198
Pillow-1.7.7-py2.4-win32.egg     2012-04-09      201
----------------------------------------------------
Pillow has been downloaded 91,833 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Originally, I thought if the fork went nowhere, at least the Plone
community could maintain it for its own needs. However since then, a
number of folks outside the Plone community have taken an interest, so
I&amp;#8217;ve decided to move the repository from the &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/collective&quot;&gt;Plone collective&lt;/a&gt; to a
new organization called &lt;a class=&quot;reference external&quot; href=&quot;http://github.com/python-imaging&quot;&gt;python-imaging&lt;/a&gt;. With this change, I hope to
gather folks to help develop a Python 3-compat release before PyCon
2013. (There are various PIL forks with Python 3-compat already in
existence, as well as the official PIL 1.2-dev tarball available from
bitbucket, which has some Python 3-compat if I understand correctly.)
The new home for Pillow is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/python-imaging/Pillow&quot;&gt;https://github.com/python-imaging/Pillow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">The Plones Templer</title>
    <id>http://blog.aclark.net/2012/07/12/the-plones-templer/</id>
    <updated>2012-07-12T00:00:00Z</updated>
    <published>2012-07-12T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/07/12/the-plones-templer/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;the-plones-templer&quot;&gt;

&lt;p&gt;&lt;strong&gt;(c.f. Knights Templar)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(c.f. Knights Templar) I think we have a situation that could use the
help of the Plone and Python communities at large. It goes something
like this:&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;About 6 years ago, &lt;a class=&quot;reference external&quot; href=&quot;http://danielnouri.org/blog/devel/zope/quickstart-with-pastescript.html&quot;&gt;Daniel Nouri started the ZopeSkel project&lt;/a&gt; to
provide a Zope project template to &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/PasteScript/1.7.5&quot;&gt;PasteScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sometime between then and now, the Plone community latched on to the
ZopeSkel project to include templates for its projects.&lt;/li&gt;
&lt;li&gt;About 3 years ago, as part of the ZopeSkel project, &lt;a class=&quot;reference external&quot; href=&quot;http://www.coactivate.org/projects/zopeskel-bbq-sprint/project-home&quot;&gt;some folks at
the BBQ&lt;/a&gt; sprint built a more user friendly UI on top of PasteScript.
And some refactoring of the project was planned or occurred, during
which time the entire project was renamed to &amp;#8220;Templer&amp;#8221;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At present, if you install the latest ZopeSkel (3.0b3) you get:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/paster create --list-templates
Available templates:
  archetype:         A Plone project that uses Archetypes content types
  basic_buildout:    A basic buildout skeleton
  basic_namespace:   A basic Python project with a namespace package
  basic_package:     A basic setuptools-enabled package
  nested_namespace:  A basic Python project with a nested namespace (2 dots in name)
  paste_deploy:      A web application deployed through paste.deploy
  plone_basic:       A package for Plone add-ons
  plone_nested:      A package for Plone add-ons with a nested namespace
  recipe:            A recipe project for zc.buildout
  zope2_basic:       A Zope project
  zope2_nested:      A nested-namespace Zope package
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Looks nice, but some templates are missing. If you install the previous
stable version (2.21.2), you get this:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bin/paster create --list-templates
Available templates:
  archetype:          A Plone project that uses Archetypes content types
  basic_namespace:    A basic Python project with a namespace package
  basic_package:      A basic setuptools-enabled package
  basic_zope:         A Zope project
  kss_plugin:         A project for a KSS plugin
  nested_namespace:   A basic Python project with a nested namespace (2 dots in name)
  paste_deploy:       A web application deployed through paste.deploy
  plone:              A project for Plone add-ons
  plone2.5_buildout:  A buildout for Plone 2.5 projects
  plone2.5_theme:     A theme for Plone 2.5
  plone2_theme:       A theme for Plone 2.1
  plone3_buildout:    A buildout for Plone 3 installation
  plone3_portlet:     A Plone 3 portlet
  plone3_theme:       A theme for Plone 3
  plone4_buildout:    A buildout for Plone 4 developer installation
  plone_app:          A project for Plone add-ons with a nested namespace (2 dots in name)
  plone_hosting:      Plone hosting: buildout with ZEO and Plone versions below 3.2
  plone_pas:          A project for a Plone PAS plugin
  recipe:             A recipe project for zc.buildout
  silva_buildout:     A buildout for Silva projects
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Looks a lot better. Additionally, with the previous release (2.21.2) you
can install zopeskel.dexterity, and &amp;#8220;dexterity&amp;#8221; will show up in the list
of available templates (but not so with 3.0b3). So what&amp;#8217;s left to finish
the move from ZopeSkel to Templer? I&amp;#8217;m told by Chris Ewing (the current
project lead) that it&amp;#8217;s mostly a matter of missing imports in various
Python packages that provide templates to PasteScript. Let&amp;#8217;s. Finish.
This. This frustrates me because Paster is a nice system (that provides
pluggable commands, and code gen from templates). And ZopeSkel was a
nice system (that provided additional templates and a friendly UI). And
Templer will be a great system, but it&amp;#8217;s not there yet. So we need to
help Chris et. al. get it there ASAP. In addition to the code
refactoring, they have produced some &lt;a class=&quot;reference external&quot; href=&quot;http://templer-manual.readthedocs.org/en/latest/index.html&quot;&gt;nice documentation available on
readthedocs.org&lt;/a&gt;. If you are interested in helping, please gather
around the #plone on irc.freenode.net to discuss options (I am aclark on
IRC).&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">pythonpackages.com beta launch</title>
    <id>http://blog.aclark.net/2012/07/04/pythonpackages-com-beta-launch/</id>
    <updated>2012-07-04T00:00:00Z</updated>
    <published>2012-07-04T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/07/04/pythonpackages-com-beta-launch/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;pythonpackages-com-beta-launch&quot;&gt;

&lt;p&gt;&lt;strong&gt;After 9 months of development, pythonpackages.com has grand-ceremoniously flipped the switch from alpha to beta. Here is an overview of the beta release features.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;killer-github-integration&quot;&gt;
&lt;h2&gt;Killer GitHub integration&lt;/h2&gt;
&lt;p&gt;The workflow you may now enjoy is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Login with your GitHub account&lt;/li&gt;
&lt;li&gt;Select a repository that contains a Python package&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;one-click-release&quot;&gt;
&lt;h2&gt;One-click release&lt;/h2&gt;
&lt;p&gt;More sweet workflow:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Click a button to release to a test index, PyPI&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;create-packages-through-the-web-with-pastescript&quot;&gt;
&lt;h2&gt;Create packages through-the-web (with PasteScript)&lt;/h2&gt;
&lt;p&gt;There&amp;#8217;s a lot of room for growth, but this feature is exciting even in its simplest form.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;dashboard-o-releases&quot;&gt;
&lt;h2&gt;Dashboard o releases&lt;/h2&gt;
&lt;p&gt;pythonpackages.com keeps track of your releases, using the same technology that powers the alpha release &amp;#8220;package featuring&amp;#8221; feature.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;github-organization-support&quot;&gt;
&lt;h2&gt;GitHub Organization support&lt;/h2&gt;
&lt;p&gt;But wait, there&amp;#8217;s more. Paid plans (which have not been deployed yet) get access to GitHub organizations, whose repositories can then be &amp;#8220;slotted&amp;#8221; like normal. If you&amp;#8217;d like to get started using the site, check out the &lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/crashcourse.html&quot;&gt;crash course&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Zope2 Bootstrap</title>
    <id>http://blog.aclark.net/2012/06/12/zope2-bootstrap/</id>
    <updated>2012-06-12T00:00:00Z</updated>
    <published>2012-06-12T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/06/12/zope2-bootstrap/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;zope2-bootstrap&quot;&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap all the things, including Zope2.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/zope2_bootstrap&quot;&gt;zope2_bootstrap&lt;/a&gt; is a new Python package that &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/pypi/collective.monkeypatcher&quot;&gt;monkey patches&lt;/a&gt; Zope2 in order to:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Replace &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Zope/trunk/src/App/dtml/manage_page_style.css.dtml&quot;&gt;manage_page_styles.css.dtml&lt;/a&gt; styles with &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.github.com/bootstrap/base-css.html&quot;&gt;Twitter Bootstrap&lt;/a&gt; styles.&lt;/li&gt;
&lt;li&gt;Adds CSS classes to &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Zope/trunk/src/OFS/dtml/main.dtml&quot;&gt;main&lt;/a&gt; and/or &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_main.dtml&quot;&gt;manage_main&lt;/a&gt; tables.&lt;/li&gt;
&lt;li&gt;Inserts a Plone logo (if Plone is installed) above &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_tabs.dtml&quot;&gt;manage_tabs.dtml&lt;/a&gt; tabs (h/t: &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/patches/addzmiplonesite.py&quot;&gt;https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/patches/addzmiplonesite.py&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Inserts a ZMI warning (if Plone is installed) below &lt;a class=&quot;reference external&quot; href=&quot;http://zope3.pov.lt/trac/browser/Products.ExternalEditor/trunk/Products/ExternalEditor/manage_tabs.dtml&quot;&gt;manage_tabs.dtml&lt;/a&gt; tabs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the next version, I&amp;#8217;ll try to import &lt;a class=&quot;reference external&quot; href=&quot;http://twitter.github.com/bootstrap/javascript.html&quot;&gt;Twitter Bootstrap JavaScript&lt;/a&gt; for even more goodness. Enjoy, and give feedback in the comments, or &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/zope2_bootstrap/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">A Simple Printer of Nested Lists</title>
    <id>http://blog.aclark.net/2012/05/23/a-simple-printer-of-nested-lists/</id>
    <updated>2012-05-23T00:00:00Z</updated>
    <published>2012-05-23T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/05/23/a-simple-printer-of-nested-lists/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;a-simple-printer-of-nested-lists&quot;&gt;

&lt;p&gt;&lt;strong&gt;A rant&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Do you ever get the urge to kill? How many of us cringe whenever we see these words? Lately I&amp;#8217;ve been spending a lot of time developing &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com&quot;&gt;pythonpackages.com&lt;/a&gt;, (now running on heroku!) during which time I see a lot of these kinds of packages being released.&lt;/p&gt;
&lt;p&gt;I kid about the killing part, but seriously: &lt;strong&gt;this is a problem&lt;/strong&gt;.  Fortunately for us, our PyPI overloads see fit to occasionally remove these packages, and for this I am grateful.&lt;/p&gt;
&lt;p&gt;I mean it makes me &lt;em&gt;dance-around-the-room&lt;/em&gt; happy! Ahem. But are they really all gone? Close enough. A quick &lt;a class=&quot;reference external&quot; href=&quot;https://crate.io/?q=a+simple+printer+of+nested+lists&quot;&gt;crate.io search&lt;/a&gt; now shows only 2 packages instead of 4 pages of results.&lt;/p&gt;
&lt;p&gt;Hallelujah! But is this the best we can do? I know that some well-meaning person wrote a book containing the example that is leading some poor, misguided souls to spam PyPI (if only the author listed the test site instead: &lt;a class=&quot;reference external&quot; href=&quot;http://testpypi.python.org/pypi&quot;&gt;http://testpypi.python.org/pypi&lt;/a&gt;). And I have to assume that this was just some terrible mistake. But do we all have to live with this mistake?&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m asking because I honestly don&amp;#8217;t know the answer. I remember when I started pythonpackages.com, the &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/package/deliverance&quot;&gt;Deliverance&lt;/a&gt; documentation was being updated something like every 5 minutes (kidding again, but it was frequent enough to be annoying). After grousing about it in public, it stopped happening!&lt;/p&gt;
&lt;p&gt;I wonder if some good natured grousing about our friends (read: enemies) the &lt;em&gt;simple printers of nested lists&lt;/em&gt; will do the same?&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Adam Yauch has passed</title>
    <id>http://blog.aclark.net/2012/05/11/adam-yauch-has-passed/</id>
    <updated>2012-05-11T00:00:00Z</updated>
    <published>2012-05-11T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/05/11/adam-yauch-has-passed/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;adam-yauch-has-passed&quot;&gt;

&lt;p&gt;&lt;strong&gt;And why it matters to tech people like me.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(I hope my tech colleagues will indulge my thoughts on the recent passing of Beastie Boy Adam Yauch.)&lt;/p&gt;
&lt;p&gt;TL;DR: I &amp;lt;3 the Beastie Boys and will miss Adam Yauch; and I suspect many others in the tech world do, and will, too&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;where-i-came-from&quot;&gt;
&lt;h2&gt;Where I came from&lt;/h2&gt;
&lt;p&gt;For as long as I can remember, I&amp;#8217;ve been trying to emulate my heroes. It started with pop music in the 80s and artists like Michael Jackson, Madonna, and of course the Beastie Boys. While I was obsessed with Michael Jackson back then, I don&amp;#8217;t recall trying too hard to emulate the Beastie Boys… until the 90s.&lt;/p&gt;
&lt;p&gt;In the early 90s, I was just out of high school (where I discovered Led Zeppelin, Pink Floyd, Beatles, Stones etc), was working full time at Chili&amp;#8217;s, and had no serious plans for college. I was really into music, but didn&amp;#8217;t have the social skills required to participate in any meaningful activities, like playing in a band.&lt;/p&gt;
&lt;p&gt;But I loved music.&lt;/p&gt;
&lt;p&gt;I listened to Nirvana, Beastie Boys, and any number of other pop, rock and rap acts of the 90s. I went to rock shows at the 8x10 in Baltimore and 9:30 club in DC. I went to festivals like the HFSistival and Lollapalooza. Throughout the decade, I formulated my thoughts on how I would, one day, start a band.&lt;/p&gt;
&lt;p&gt;To say the Beastie Boys were inspirational to me during this time period would be a colossal understatement (remember the first time you saw the &amp;#8220;So Watcha Want?&amp;#8221; video?) While I wholly identified with the angst-ridden music of Nirvana, I also equally identified with the good natured spirit of, and dope-ass-jams from, the Beastie Boys: three guys producing kick ass music with, among other instruments, a &amp;#8220;bullshit mic, made out of plastic&amp;#8221;. Most importantly: they never took themselves too seriously. They made great music, but they were also just like you and me. They made you feel like you could do it, too.&lt;/p&gt;
&lt;p&gt;In the late 90s and early to mid 2000s, I finally got a chance to play music. I started a band, played some shows, recorded a few albums, and had a lot of fun. Most importantly: I proved to myself I could do it.  The shows I put on with my band were awesome; they were true rock shows: those in which the audience responded positively, viscerally. There is no better feeling in the world than that type of self-expression.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;who-i-am-now&quot;&gt;
&lt;h2&gt;Who I am now&lt;/h2&gt;
&lt;p&gt;Eventually the band imploded, and I found a new obsession: technology. I have always been obsessed with tech, but never focused on it exclusively until the mid to late 2000s. Now I have a new set of heroes to emulate, and many new things to prove to myself I can do. Maybe I&amp;#8217;ll even play music again one day, but if I don&amp;#8217;t, I know that I accomplished, on some level, what I set out to do. And that is a great feeling.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;where-we-are-all-headed&quot;&gt;
&lt;h2&gt;Where we are all headed&lt;/h2&gt;
&lt;p&gt;We are all headed forward, now, without Adam Yauch to inspire us anew.  This sucks more than words can express; but it is, alas, a part of life.  Without death to make life precious, there would be no joy in living. We all only have a short period of time in life to accomplish our goals, so it is important that we spend time trying to do so. (And if your goals include helping other people, bonus points from Adam.)&lt;/p&gt;
&lt;p&gt;I cannot thank Adam Yauch (MCA), Adam Horovitz (Ad-Rock), and Mike D enough; for providing me with all the inspiration I needed, when I needed it, to live my life; it has made all the difference. I know that Ad-Rock and Mike D will continue to live their lives; and whether that includes performing as &amp;#8220;Beastie Boys&amp;#8221; or not, does not matter to me; I will still be watching, waiting to be inspired again. And to Adam Yauch who has rapped, joked, snowboarded, and philanthropized his way through all our lives: thank you for the inspiration; I use it every day, and I&amp;#8217;ll never forget it was &lt;em&gt;you&lt;/em&gt; and your closest two brothers Ad-Rock and Mike D who gave it to me.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Test-plone tmp</title>
    <id>http://blog.aclark.net/2012/04/04/test-plone-tmp/</id>
    <updated>2012-04-04T00:00:00Z</updated>
    <published>2012-04-04T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/04/04/test-plone-tmp/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;test-plone-tmp&quot;&gt;

&lt;p&gt;&lt;strong&gt;Since Day 1 with Plone circa 2004, I&amp;#8217;ve always taken pride in and greatly enjoyed refining my development environment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s been stable for a while now (&amp;gt; 1 year or so) so I thought I&amp;#8217;d share.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;operating-system&quot;&gt;
&lt;h2&gt;Operating system&lt;/h2&gt;
&lt;p&gt;Mac OS X Latest (Lion, at the time of this writing)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;terminal&quot;&gt;
&lt;h2&gt;Terminal&lt;/h2&gt;
&lt;p&gt;Mac OS X Terminal&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;editor&quot;&gt;
&lt;h2&gt;Editor&lt;/h2&gt;
&lt;p&gt;Vim&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;python&quot;&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;Yes. All versions, via the collective Python buildout:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/collective/buildout.python&quot;&gt;https://github.com/collective/buildout.python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone&quot;&gt;
&lt;h2&gt;Plone&lt;/h2&gt;
&lt;p&gt;Yes. All versions, via pythonpackages.com:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://docs.pythonpackages.com/en/latest/advanced.html&quot;&gt;http://docs.pythonpackages.com/en/latest/advanced.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;additional-tools&quot;&gt;
&lt;h2&gt;Additional tools&lt;/h2&gt;
&lt;p&gt;A &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/binfiles/blob/master/test-plone&quot;&gt;shell script to run virtualenv, buildout, etc&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[bash] #!/bin/sh if ! [ -n &amp;quot;$1&amp;quot; ] then echo &amp;quot;Usage:nn$0 &amp;lt;dir&amp;gt;n&amp;quot; exit 1
fi if ! [ -d $1 ] then mkdir $1 fi cd $1 virtualenv-2.7 . bin/pip
install zc.buildout bin/buildout init cat &amp;lt;&amp;lt; EOF &amp;gt; buildout.cfg
[buildout] extends =
http://build.pythonpackages.com/buildout/plone/4.2.x-dev EOF
bin/buildout bin/plone start sleep 4 echo &amp;quot;Adding Plone site...&amp;quot; curl -d
form.submitted:boolean=&amp;quot;True&amp;quot;
http://admin:admin@localhost:8080/@@plone-addsite?site\_id=Plone
bin/plone stop bin/plone fg [/bash]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/aclark4life/binfiles/blob/master/tmp&quot;&gt;Python script to create temporary directories&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[python] #!/usr/bin/env python

import os import tempfile print os.path.abspath(tempfile.mkdtemp())
[/python]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A default buildout config file:&lt;/p&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[buildout]
eggs-directory = /Users/aclark/Developer/eggs-directory
download-cache = /Users/aclark/Developer/download-cache
extends-cache = /Users/aclark/Developer/extends-cache
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;workflow&quot;&gt;
&lt;h2&gt;Workflow&lt;/h2&gt;
&lt;p&gt;My typical workflow looks like this:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;Hang in #plone on irc.freenode.net and wait for questions&lt;/li&gt;
&lt;li&gt;Hear question and get inspired to run Plone&lt;/li&gt;
&lt;li&gt;Run: &lt;strong&gt;$ test-plone `tmp`&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://gist.github.com/2304317&quot;&gt;~ 1 minute later&lt;/a&gt; I&amp;#8217;m browsing &lt;strong&gt;http://localhost:8080/Plone&lt;/strong&gt; and can install add-ons, check ZMI settings, etc.&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">New Vanity Release</title>
    <id>http://blog.aclark.net/2012/01/30/new-vanity-release/</id>
    <updated>2012-01-30T00:00:00Z</updated>
    <published>2012-01-30T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/01/30/new-vanity-release/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;new-vanity-release&quot;&gt;

&lt;p&gt;&lt;strong&gt;This release features the ability to display per package download statistics.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With all the Python &lt;a class=&quot;reference external&quot; href=&quot;http://crate.io/&quot;&gt;stats&lt;/a&gt; &lt;a class=&quot;reference external&quot; href=&quot;http://python3wos.appspot.com/&quot;&gt;goodness&lt;/a&gt; going on recently, I got inspired to make a new &lt;a class=&quot;reference external&quot; href=&quot;http://pythonpackages.com/info/vanity&quot;&gt;vanity&lt;/a&gt; release. This release features the ability to display per package download statistics via the `-v` or `&amp;#8211;verbose` command line argument.&lt;/p&gt;
&lt;p&gt;Here are some of my favorite results.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;vanity&quot;&gt;
&lt;h2&gt;Vanity&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity vanity -v
     vanity-1.0.zip     2011-04-14      352
   vanity-1.1.0.zip     2011-10-26      139
   vanity-1.1.1.zip     2011-10-28      114
   vanity-1.1.2.zip     2011-10-28      145
vanity-1.2.0.tar.gz     2012-01-30        0
-------------------------------------------
Package `vanity` has been downloaded 750 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;django&quot;&gt;
&lt;h2&gt;Django&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity django -v
Django-1.1.3.tar.gz     2010-12-23    2,618
Django-1.1.4.tar.gz     2011-02-09    4,476
  Django-1.2.tar.gz     2010-05-17   15,876
Django-1.2.1.tar.gz     2010-05-24   65,120
Django-1.2.2.tar.gz     2010-09-09    2,467
Django-1.2.3.tar.gz     2010-09-11   73,984
Django-1.2.4.tar.gz     2010-12-23   49,904
Django-1.2.5.tar.gz     2011-02-09   63,977
Django-1.2.6.tar.gz     2011-09-10      427
Django-1.2.7.tar.gz     2011-09-11    6,825
  Django-1.3.tar.gz     2011-03-23  238,504
Django-1.3.1.tar.gz     2011-09-10  176,054
-------------------------------------------
Package `Django` has been downloaded 700,232 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;plone&quot;&gt;
&lt;h2&gt;Plone&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity plone -v
     Plone-3.2.zip     2008-12-31    1,690
   Plone-3.2.1.zip     2009-02-04    2,466
   Plone-3.2.2.zip     2009-03-03    4,893
   Plone-3.2.3.zip     2009-06-20    2,731
   Plone-3.2a1.zip     2008-10-10      976
  Plone-3.2rc1.zip     2008-12-15      758
     Plone-3.3.zip     2009-08-19    4,611
   Plone-3.3.1.zip     2009-09-09    4,148
Plone-3.3.2.tar.gz     2009-11-03    3,043
   Plone-3.3.3.zip     2009-12-08    1,733
   Plone-3.3.4.zip     2010-01-14    4,906
   Plone-3.3.5.zip     2010-03-03   12,131
Plone-3.3.6.tar.gz     2011-07-19      787
   Plone-3.3b1.zip     2009-03-12      940
  Plone-3.3rc1.zip     2009-03-30      743
  Plone-3.3rc2.zip     2009-04-05    1,822
  Plone-3.3rc3.zip     2009-05-23    2,036
  Plone-3.3rc4.zip     2009-07-07    2,163
  Plone-3.3rc5.zip     2009-08-01    1,211
     Plone-4.0.zip     2010-08-30    3,659
   Plone-4.0.1.zip     2010-10-04    4,224
   Plone-4.0.2.zip     2010-11-22    4,022
   Plone-4.0.3.zip     2011-01-21    3,339
   Plone-4.0.4.zip     2011-03-01    2,711
   Plone-4.0.5.zip     2011-04-09    3,152
   Plone-4.0.6.zip     2011-05-22    1,469
   Plone-4.0.7.zip     2011-06-06    2,192
   Plone-4.0.8.zip     2011-07-17      509
   Plone-4.0.9.zip     2011-07-29      958
  Plone-4.0.10.zip     2011-10-12      495
   Plone-4.0a1.zip     2009-11-19      946
   Plone-4.0a2.zip     2009-12-04      921
   Plone-4.0a3.zip     2009-12-21    1,272
   Plone-4.0a4.zip     2010-02-01    1,121
   Plone-4.0a5.zip     2010-02-19      850
   Plone-4.0b1.zip     2010-03-09    1,308
   Plone-4.0b2.zip     2010-04-10    1,028
   Plone-4.0b3.zip     2010-05-04    1,722
   Plone-4.0b4.zip     2010-06-13    1,642
Plone-4.0b5.tar.gz     2010-07-08    1,995
  Plone-4.0rc1.zip     2010-08-06    1,598
     Plone-4.1.zip     2011-07-17    4,479
Plone-4.1.1.tar.gz     2011-09-21      429
Plone-4.1.2.tar.gz     2011-10-08    2,187
Plone-4.1.3.tar.gz     2011-11-29    1,883
   Plone-4.1a1.zip     2011-01-21      699
   Plone-4.1a2.zip     2011-02-11      451
   Plone-4.1a3.zip     2011-02-15      680
   Plone-4.1b1.zip     2011-03-08      958
   Plone-4.1b2.zip     2011-04-09    1,040
  Plone-4.1rc2.zip     2011-05-22      797
  Plone-4.1rc3.zip     2011-06-06    1,329
   Plone-4.2a1.zip     2011-08-10      521
   Plone-4.2a2.zip     2011-09-16      884
Plone-4.2b1.tar.gz     2011-12-06      619
------------------------------------------
Package `Plone` has been downloaded 111,877 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;pyramid&quot;&gt;
&lt;h2&gt;Pyramid&lt;/h2&gt;
&lt;div class=&quot;highlight-python&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vanity pyramid -v
   pyramid-1.0.tar.gz     2011-01-31   24,055
 pyramid-1.0.1.tar.gz     2011-08-13      460
 pyramid-1.0.2.tar.gz     2011-12-15      185
 pyramid-1.0a1.tar.gz     2010-11-05    1,128
 pyramid-1.0a2.tar.gz     2010-11-09      952
 pyramid-1.0a3.tar.gz     2010-11-16      803
 pyramid-1.0a4.tar.gz     2010-11-21    1,732
 pyramid-1.0a5.tar.gz     2010-12-15      639
 pyramid-1.0a6.tar.gz     2010-12-16      834
 pyramid-1.0a7.tar.gz     2010-12-20      912
 pyramid-1.0a8.tar.gz     2010-12-27    1,233
 pyramid-1.0a9.tar.gz     2011-01-08    1,313
pyramid-1.0a10.tar.gz     2011-01-18      960
 pyramid-1.0b1.tar.gz     2011-01-22      871
 pyramid-1.0b2.tar.gz     2011-01-25    1,003
 pyramid-1.0b3.tar.gz     2011-01-28      816
   pyramid-1.1.tar.gz     2011-07-22    5,674
 pyramid-1.1.1.tar.gz     2011-08-13    1,057
 pyramid-1.1.2.tar.gz     2011-08-17    1,560
 pyramid-1.1.3.tar.gz     2011-12-15      160
 pyramid-1.1a1.tar.gz     2011-06-20    1,146
 pyramid-1.1a2.tar.gz     2011-06-23    1,003
 pyramid-1.1a3.tar.gz     2011-06-26    1,252
 pyramid-1.1a4.tar.gz     2011-07-01    1,517
 pyramid-1.1b1.tar.gz     2011-07-10      981
 pyramid-1.1b2.tar.gz     2011-07-13      844
 pyramid-1.1b3.tar.gz     2011-07-15      742
 pyramid-1.1b4.tar.gz     2011-07-18    1,094
   pyramid-1.2.tar.gz     2011-09-13    6,450
 pyramid-1.2.1.tar.gz     2011-09-28   10,357
 pyramid-1.2.2.tar.gz     2011-11-20      322
 pyramid-1.2.3.tar.gz     2011-11-21    3,078
 pyramid-1.2.4.tar.gz     2011-12-06    1,193
 pyramid-1.2.5.tar.gz     2011-12-15      555
 pyramid-1.2.6.tar.gz     2012-01-05      514
 pyramid-1.2.7.tar.gz     2012-01-20      472
 pyramid-1.2a1.tar.gz     2011-08-24      907
 pyramid-1.2a2.tar.gz     2011-08-27      696
 pyramid-1.2a3.tar.gz     2011-08-29    3,268
 pyramid-1.2a4.tar.gz     2011-09-02      593
 pyramid-1.2a5.tar.gz     2011-09-04      840
 pyramid-1.2a6.tar.gz     2011-09-07      602
 pyramid-1.2b1.tar.gz     2011-09-08      493
 pyramid-1.2b2.tar.gz     2011-09-08      700
 pyramid-1.2b3.tar.gz     2011-09-11      674
 pyramid-1.3a1.tar.gz     2011-12-09    1,264
 pyramid-1.3a2.tar.gz     2011-12-14    1,641
 pyramid-1.3a3.tar.gz     2011-12-21    2,716
 pyramid-1.3a4.tar.gz     2012-01-05      675
 pyramid-1.3a5.tar.gz     2012-01-09    2,369
 pyramid-1.3a6.tar.gz     2012-01-20    1,917
---------------------------------------------
Package `pyramid` has been downloaded 97,222 times!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enjoy the new release.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="http://blog.aclark.net/blog/2012/atom.xml">
    <title type="text">Hello Plone theming</title>
    <id>http://blog.aclark.net/2012/01/25/hello-plone-theming/</id>
    <updated>2012-01-25T00:00:00Z</updated>
    <published>2012-01-25T00:00:00Z</published>
    <link href="http://blog.aclark.net/2012/01/25/hello-plone-theming/" />
    <author>
      <name></name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;hello-plone-theming&quot;&gt;

&lt;p&gt;&lt;strong&gt;In this post, we introduce a new tutorial.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this post, we introduce a new tutorial aimed at bridging the gap between the &lt;strong&gt;incredibly easy to use and enormously powerful Diazo theming engine for Plone&lt;/strong&gt;, and bootstrapping your first new theme. You do not need to have any Python skills whatsoever to perform these tasks. New Plone themes are:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;HTML/CSS/JavaScript/images (Sound familiar? You don&amp;#8217;t need to know any Plone to understand this part.)&lt;/li&gt;
&lt;li&gt;A set of rules that map your HTML/CSS/JavaScript/images to Plone content. (This part is Diazo-specific; and while Diazo is not part of Plone, integration is provided by a Python package called plone.app.theming.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Diazo rules can get complex, but it&amp;#8217;s very easy to get your first rule done and working and then off you go. You may find this &lt;a class=&quot;reference external&quot; href=&quot;http://readthedocs.org/docs/pythonpackages-docs/en/latest/features/examples/ex8-diazo.html&quot;&gt;new tutorial on pythonpackages.com&lt;/a&gt;. Enjoy, and get busy theming Plone.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
